/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:38:19 UTC 2020
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.Document;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.AsianFontMapper;
import com.lowagie.text.pdf.FontMapper;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfWriter;
import com.lowagie.text.pdf.Type3Font;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.data.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BorderArrangement_ESTest extends BorderArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      BlockContainer blockContainer0 = new BlockContainer(borderArrangement0);
      Document document0 = new Document((Rectangle) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PdfWriter pdfWriter0 = PdfWriter.getInstance(document0, (OutputStream) byteArrayOutputStream0);
      char[] charArray0 = new char[9];
      Type3Font type3Font0 = new Type3Font(pdfWriter0, charArray0, false);
      PdfContentByte pdfContentByte0 = type3Font0.defineGlyph('`', 93.0F, 93.0F, 0.0F, (-2803.6F), 93.0F);
      AsianFontMapper asianFontMapper0 = new AsianFontMapper("gs(AZD(-|x*%", "gs(AZD(-|x*%");
      pdfContentByte0.createGraphics(2.54F, 0.0F, (FontMapper) asianFontMapper0, false, 176.64923F);
      Range range0 = new Range(3319.903541942613, (-2803.6F));
  }
}
