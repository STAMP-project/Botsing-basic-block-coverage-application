/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:07:41 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.DurationFieldType;
import org.joda.time.MutableDateTime;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.StrictChronology;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.tz.UTCProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
      DurationFieldType.days();
      DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, 1515, true);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);
      MutableDateTime mutableDateTime0 = MutableDateTime.now();
      DurationFieldType.hours();
      DurationFieldType.years();
      dateTimeFormatter0.isPrinter();
      String string0 = "+0L:00";
      StringBuffer stringBuffer0 = new StringBuffer(1515);
      UTCProvider uTCProvider0 = new UTCProvider();
      uTCProvider0.getZone("+0L:00");
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance((DateTimeZone) null);
      StrictChronology strictChronology0 = StrictChronology.getInstance(islamicChronology0);
      Locale locale0 = Locale.forLanguageTag("+0L:00");
      dateTimeFormatterBuilder_UnpaddedNumber0.printTo(stringBuffer0, (long) 1515, (Chronology) strictChronology0, 1515, (DateTimeZone) null, locale0);
      // Undeclared exception!
      dateTimeFormatter0.parseInto(mutableDateTime0, "+0L:00", 0);
  }
}
