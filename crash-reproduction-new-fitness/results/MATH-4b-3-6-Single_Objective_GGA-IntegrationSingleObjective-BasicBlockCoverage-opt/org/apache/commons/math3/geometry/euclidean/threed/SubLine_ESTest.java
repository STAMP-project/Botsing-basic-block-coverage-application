/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 03:39:11 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;
import org.apache.commons.math3.geometry.euclidean.threed.Segment;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      Line line0 = new Line(vector3D0, vector3D0);
      Segment segment0 = new Segment(vector3D0, vector3D0, line0);
      SubLine subLine0 = new SubLine(segment0);
      subLine0.getSegments();
      Vector3D vector3D1 = Vector3D.NEGATIVE_INFINITY;
      Vector3D vector3D2 = new Vector3D((-5064.9782391), vector3D1);
      SubLine subLine1 = new SubLine(vector3D1, vector3D2);
      RotationOrder rotationOrder0 = RotationOrder.YXZ;
      Vector3D vector3D3 = rotationOrder0.getA3();
      Line line1 = new Line(vector3D3, vector3D2);
      SubLine subLine2 = line1.wholeLine();
      // Undeclared exception!
      subLine1.intersection(subLine2, true);
  }
}
