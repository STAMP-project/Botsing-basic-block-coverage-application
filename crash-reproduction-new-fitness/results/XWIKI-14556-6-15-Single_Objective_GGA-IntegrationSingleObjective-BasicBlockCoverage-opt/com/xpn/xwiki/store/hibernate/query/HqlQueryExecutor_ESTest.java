/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 09:07:48 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.HibernateSessionFactory;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.hibernate.type.PrimitiveCharacterArrayClobType;
import org.infinispan.atomic.impl.AtomicHashMap;
import org.jgroups.util.FlagsUUID;
import org.junit.runner.RunWith;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.context.Execution;
import org.xwiki.query.Query;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      HibernateSessionFactory hibernateSessionFactory0 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager1 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager1);
      HqlQueryExecutor.isSafeSelect("){IZ0:bD4");
      DefaultQuery defaultQuery0 = new DefaultQuery("B3#Sz4", "){IZ0:bD4", hqlQueryExecutor0);
      Query query0 = defaultQuery0.bindValue((String) null, (Object) execution0);
      HqlQueryExecutor.isSafeSelect("order by f");
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = new OrdinalParameterDescriptor[2];
      PrimitiveCharacterArrayClobType primitiveCharacterArrayClobType0 = PrimitiveCharacterArrayClobType.INSTANCE;
      OrdinalParameterDescriptor ordinalParameterDescriptor0 = new OrdinalParameterDescriptor((-3437), primitiveCharacterArrayClobType0, (-3437));
      ordinalParameterDescriptorArray0[0] = ordinalParameterDescriptor0;
      OrdinalParameterDescriptor ordinalParameterDescriptor1 = new OrdinalParameterDescriptor((-3437), primitiveCharacterArrayClobType0, (-6));
      ordinalParameterDescriptorArray0[1] = ordinalParameterDescriptor1;
      AtomicHashMap<EmbeddableComponentManager, FlagsUUID> atomicHashMap0 = new AtomicHashMap<EmbeddableComponentManager, FlagsUUID>();
      ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, atomicHashMap0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("B3#Sz4", query0, sessionImplementor0, parameterMetadata0);
      collectionFilterImpl0.setFetchSize(40);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(collectionFilterImpl0, defaultQuery0);
  }
}
