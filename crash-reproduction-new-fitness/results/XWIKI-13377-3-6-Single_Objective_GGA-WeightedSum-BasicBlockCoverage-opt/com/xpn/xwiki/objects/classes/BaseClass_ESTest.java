/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 16:11:45 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.BaseObject;
import com.xpn.xwiki.objects.classes.BaseClass;
import com.xpn.xwiki.objects.meta.PropertyMetaClass;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.internal.reference.ExplicitReferenceDocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseClass baseClass0 = new BaseClass();
      String string0 = "";
      baseClass0.addUsersField("", "numGQber", (-1439));
      XWikiContext xWikiContext0 = new XWikiContext();
      BaseObject baseObject0 = baseClass0.newCustomClassInstance(xWikiContext0);
      baseClass0.merge(baseClass0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      baseObject0.setStringValue("numGQber", "");
      ExplicitReferenceDocumentReferenceResolver explicitReferenceDocumentReferenceResolver0 = new ExplicitReferenceDocumentReferenceResolver();
      EntityReferenceResolver<PropertyMetaClass> entityReferenceResolver0 = (EntityReferenceResolver<PropertyMetaClass>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(explicitReferenceDocumentReferenceResolver0, (Class<?>) ExplicitReferenceDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(explicitReferenceDocumentReferenceResolver0, (Class<?>) ExplicitReferenceDocumentReferenceResolver.class);
      hashMap0.put("", explicitReferenceDocumentReferenceResolver0);
      baseClass0.getFieldsToRemove();
      baseClass0.getSetValue("b!<)9h7arr[&lf52a)B");
      baseClass0.toString();
      // Undeclared exception!
      baseClass0.fromMap((Map<String, ?>) hashMap0, (BaseCollection) baseObject0);
  }
}
