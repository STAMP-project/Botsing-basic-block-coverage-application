/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:10:46 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.partitioning.Region;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Line line0 = mock(Line.class, new ViolatedAssumptionAnswer());
      doReturn((Vector3D) null).when(line0).intersection(any(org.apache.commons.math3.geometry.euclidean.threed.Line.class));
      doReturn((Vector1D) null).when(line0).toSubSpace(nullable(org.apache.commons.math3.geometry.Vector.class));
      IntervalsSet intervalsSet0 = mock(IntervalsSet.class, new ViolatedAssumptionAnswer());
      doReturn((Region.Location) null).when(intervalsSet0).checkPoint(nullable(org.apache.commons.math3.geometry.Vector.class));
      SubLine subLine0 = new SubLine(line0, intervalsSet0);
      Vector3D vector3D0 = new Vector3D((-391.0), (-391.0), (-1.0));
      Vector3D vector3D1 = new Vector3D((-1.0), vector3D0, (-110.5638242507), vector3D0, (-391.0), vector3D0);
      Line line1 = new Line(vector3D1, vector3D0);
      SubLine subLine1 = line1.wholeLine();
      // Undeclared exception!
      subLine0.intersection(subLine1, true);
  }
}
