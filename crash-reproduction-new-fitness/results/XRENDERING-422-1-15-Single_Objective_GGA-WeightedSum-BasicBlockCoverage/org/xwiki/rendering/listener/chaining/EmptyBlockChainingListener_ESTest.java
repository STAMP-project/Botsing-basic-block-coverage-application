/*
 * This file was automatically generated by EvoSuite
 * Fri May 15 02:51:50 UTC 2020
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.MetaData;
import org.xwiki.rendering.listener.chaining.ChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;
import org.xwiki.rendering.listener.reference.ResourceReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EmptyBlockChainingListener_ESTest extends EmptyBlockChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListenerChain listenerChain0 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain0);
      ListenerChain listenerChain1 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      doReturn((ChainingListener) null, (ChainingListener) null, (ChainingListener) null, (ChainingListener) null, (ChainingListener) null).when(listenerChain1).getNextListener(nullable(java.lang.Class.class));
      emptyBlockChainingListener0.setListenerChain(listenerChain1);
      Format format0 = Format.NONE;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      emptyBlockChainingListener0.beginFormat(format0, hashMap0);
      Format format1 = Format.SUBSCRIPT;
      emptyBlockChainingListener0.beginFormat(format1, hashMap0);
      MetaData metaData0 = mock(MetaData.class, new ViolatedAssumptionAnswer());
      emptyBlockChainingListener0.endMetaData(metaData0);
      ResourceReference resourceReference0 = mock(ResourceReference.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      emptyBlockChainingListener0.endSection(hashMap0);
      ListenerChain listenerChain2 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      doReturn((ChainingListener) null).when(listenerChain2).getNextListener(nullable(java.lang.Class.class));
      EmptyBlockChainingListener emptyBlockChainingListener1 = new EmptyBlockChainingListener(listenerChain2);
      Format format2 = Format.SUBSCRIPT;
      emptyBlockChainingListener0.endFormat(format2, hashMap0);
      Format format3 = Format.UNDERLINED;
      // Undeclared exception!
      emptyBlockChainingListener1.endFormat(format3, hashMap0);
  }
}
