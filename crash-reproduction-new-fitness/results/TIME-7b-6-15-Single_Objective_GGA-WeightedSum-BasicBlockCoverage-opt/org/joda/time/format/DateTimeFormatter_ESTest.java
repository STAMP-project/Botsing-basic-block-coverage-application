/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 16:37:36 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.GregorianCalendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.LocalDateTime;
import org.joda.time.MutableDateTime;
import org.joda.time.ReadableInstant;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.GregorianChronology;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MutableDateTime mutableDateTime0 = MutableDateTime.now();
      Locale locale0 = Locale.KOREAN;
      StringBuffer stringBuffer0 = new StringBuffer(1055);
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      LocalDateTime localDateTime0 = new LocalDateTime((long) 1055);
      localDateTime0.getEra();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();
      dateTimeFieldType0.isSupported(gregorianChronology0);
      DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 1, false);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_FixedNumber0, dateTimeFormatterBuilder_FixedNumber0);
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      Integer integer0 = new Integer(1);
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(2147483711L, buddhistChronology0, locale0, integer0, (-3120));
      dateTimeParserBucket0.saveField((DateTimeField) null, (-6));
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(99, 2147182753, 11, 2147171559, 2006);
      LocalDateTime.fromCalendarFields(gregorianCalendar0);
      dateTimeFormatterBuilder_FixedNumber0.parseInto(dateTimeParserBucket0, "", 2166);
      DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(2495);
      dateTimeFormatter1.printTo((Appendable) stringBuffer0, (ReadableInstant) mutableDateTime0);
      dateTimeFormatter0.print((ReadableInstant) mutableDateTime0);
      dateTimeFormatter1.printTo(stringBuffer0, (ReadableInstant) mutableDateTime0);
      // Undeclared exception!
      dateTimeFormatter0.parseInto(mutableDateTime0, "+23:59:59.999", 11);
  }
}
