/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 01 16:39:31 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.meta.DBTreeListMetaClass;
import com.xpn.xwiki.objects.meta.LevelsMetaClass;
import com.xpn.xwiki.objects.meta.StaticListMetaClass;
import java.util.Map;
import java.util.TreeMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.internal.reference.DefaultStringDocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LevelsMetaClass levelsMetaClass0 = new LevelsMetaClass();
      TreeMap<String, DefaultStringDocumentReferenceResolver> treeMap0 = new TreeMap<String, DefaultStringDocumentReferenceResolver>();
      DefaultStringDocumentReferenceResolver defaultStringDocumentReferenceResolver0 = new DefaultStringDocumentReferenceResolver();
      EntityReferenceResolver<DBTreeListMetaClass> entityReferenceResolver0 = (EntityReferenceResolver<DBTreeListMetaClass>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultStringDocumentReferenceResolver0, (Class<?>) DefaultStringDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(defaultStringDocumentReferenceResolver0, (Class<?>) DefaultStringDocumentReferenceResolver.class);
      BaseCollection baseCollection0 = levelsMetaClass0.fromMap((Map<String, ?>) treeMap0, (BaseCollection) levelsMetaClass0);
      DefaultStringDocumentReferenceResolver defaultStringDocumentReferenceResolver1 = new DefaultStringDocumentReferenceResolver();
      EntityReferenceResolver<StaticListMetaClass> entityReferenceResolver1 = (EntityReferenceResolver<StaticListMetaClass>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultStringDocumentReferenceResolver1, (Class<?>) DefaultStringDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver1);
      Injector.validateBean(defaultStringDocumentReferenceResolver1, (Class<?>) DefaultStringDocumentReferenceResolver.class);
      TreeMap<String, DefaultStringDocumentReferenceResolver> treeMap1 = new TreeMap<String, DefaultStringDocumentReferenceResolver>();
      treeMap1.put("validationRegExp", defaultStringDocumentReferenceResolver1);
      // Undeclared exception!
      levelsMetaClass0.fromMap((Map<String, ?>) treeMap1, (BaseCollection) baseCollection0);
  }
}
