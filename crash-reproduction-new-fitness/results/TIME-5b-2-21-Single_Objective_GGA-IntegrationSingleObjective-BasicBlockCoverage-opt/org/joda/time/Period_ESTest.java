/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:03:01 UTC 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTime;
import org.joda.time.Duration;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.TestInterval_Constructors;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Duration duration0 = Duration.standardMinutes(0L);
      TestInterval_Constructors testInterval_Constructors0 = new TestInterval_Constructors("3R4h^b+;3");
      TestInterval_Constructors.MockInterval testInterval_Constructors_MockInterval0 = testInterval_Constructors0.new MockInterval();
      DateTime dateTime0 = testInterval_Constructors_MockInterval0.getStart();
      DateTime dateTime1 = dateTime0.withYearOfCentury(12);
      PeriodType periodType0 = PeriodType.time();
      PeriodType periodType1 = periodType0.withWeeksRemoved();
      Period period0 = new Period(duration0, dateTime1, periodType1);
      period0.equals(testInterval_Constructors_MockInterval0);
      Period period1 = Period.ZERO;
      Duration duration1 = Duration.millis((-58870));
      Period period2 = new Period(dateTime1, duration1);
      period2.withYears(998);
      period0.multipliedBy(2181);
      Object object1 = new Object();
      Object object2 = new Object();
      Period.months(12);
      int int0 = (-1731);
      // Undeclared exception!
      period0.withYears(1425);
  }
}
