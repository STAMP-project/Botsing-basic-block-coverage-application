/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:42:43 UTC 2021
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-0.33333333333333287);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.copy();
      Double double0 = new Double((-0.33333333333333287));
      openMapRealVector1.set(1.0E-12);
      openMapRealVector1.getLInfNorm();
      OpenMapRealVector openMapRealVector2 = openMapRealVector1.ebeDivide((RealVector) openMapRealVector1);
      RealVector realVector0 = openMapRealVector2.mapSubtractToSelf(0.0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 1.0E-12;
      doubleArray1[1] = 1.0E-12;
      doubleArray1[2] = 1.0E-12;
      doubleArray1[3] = (-0.33333333333333287);
      doubleArray1[4] = 1.0E-12;
      openMapRealVector1.isInfinite();
      doubleArray1[5] = (-3384.0);
      realVector0.outerProduct(doubleArray1);
      // Undeclared exception!
      openMapRealVector1.ebeMultiply((RealVector) openMapRealVector0);
  }
}
