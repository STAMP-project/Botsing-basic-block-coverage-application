/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 01 15:25:24 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.meta.BooleanMetaClass;
import com.xpn.xwiki.objects.meta.DBListMetaClass;
import java.util.Hashtable;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hibernate.collection.PersistentIdentifierBag;
import org.hibernate.collection.PersistentList;
import org.hibernate.engine.SessionImplementor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BooleanMetaClass booleanMetaClass0 = new BooleanMetaClass();
      DBListMetaClass dBListMetaClass0 = new DBListMetaClass();
      DBListMetaClass dBListMetaClass1 = new DBListMetaClass();
      DBListMetaClass dBListMetaClass2 = new DBListMetaClass();
      dBListMetaClass1.hasExternalCustomMapping();
      DBListMetaClass dBListMetaClass3 = new DBListMetaClass();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Hashtable<String, TimeUnit> hashtable0 = new Hashtable<String, TimeUnit>();
      TimeUnit timeUnit1 = TimeUnit.MICROSECONDS;
      hashtable0.put("cache", timeUnit1);
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      PersistentIdentifierBag persistentIdentifierBag0 = new PersistentIdentifierBag(sessionImplementor0);
      hashtable0.put("prettyName", timeUnit0);
      PersistentList persistentList0 = new PersistentList();
      // Undeclared exception!
      dBListMetaClass3.fromMap((Map<String, ?>) hashtable0, (BaseCollection) dBListMetaClass1);
  }
}
