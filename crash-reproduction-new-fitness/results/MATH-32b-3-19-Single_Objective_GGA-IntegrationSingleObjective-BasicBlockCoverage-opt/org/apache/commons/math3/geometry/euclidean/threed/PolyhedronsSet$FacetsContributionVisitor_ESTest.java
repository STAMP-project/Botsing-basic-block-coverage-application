/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 11:02:30 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.FieldPosition;
import java.text.Format;
import java.text.NumberFormat;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolyhedronsSet$FacetsContributionVisitor_ESTest extends PolyhedronsSet$FacetsContributionVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean3D> bSPTree0 = (BSPTree<Euclidean3D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      Vector3D vector3D0 = Vector3D.MINUS_I;
      vector3D0.getNorm();
      Vector3D vector3D1 = vector3D0.add((-1547.79), (Vector<Euclidean3D>) vector3D0);
      vector3D0.toString();
      Vector3D.distance1(vector3D0, vector3D1);
      Vector3D vector3D2 = Vector3D.MINUS_K;
      Vector3D vector3D3 = vector3D2.orthogonal();
      vector3D3.add((Vector<Euclidean3D>) vector3D1);
      vector3D3.negate();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      StringBuffer stringBuffer0 = new StringBuffer("{-1; 0; 0}");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 586);
      fieldPosition0.setBeginIndex(3829);
      numberFormat0.format(1851.280352979728, stringBuffer0, fieldPosition0);
      vector3D2.toString(numberFormat0);
      Vector3D vector3D4 = vector3D1.subtract(1.0, (Vector<Euclidean3D>) vector3D3);
      vector3D1.subtract(7777489.828430237, (Vector<Euclidean3D>) vector3D3);
      PolyhedronsSet polyhedronsSet0 = new PolyhedronsSet(586, 1547.79, 1.0, 1.304E19, 1.0, 1547.79);
      polyhedronsSet0.checkPoint(vector3D0);
      Vector3D.distance(vector3D2, vector3D4);
      Vector3D vector3D5 = Vector3D.MINUS_I;
      Vector3D.distance(vector3D2, vector3D1);
      // Undeclared exception!
      polyhedronsSet0.computeGeometricalProperties();
  }
}
