/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 23:12:27 UTC 2020
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.BetaDistributionImpl;
import org.apache.commons.math.distribution.ExponentialDistributionImpl;
import org.apache.commons.math.distribution.FDistributionImpl;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      double double0 = 1276.8319183936;
      double double1 = (-1168.0);
      Double double2 = new Double((-0.3863911792235805));
      Double.isFinite(533.0621742863203);
      Double.valueOf(0.0018422936581781414);
      ExponentialDistributionImpl exponentialDistributionImpl0 = new ExponentialDistributionImpl(2655.4895674);
      BetaDistributionImpl betaDistributionImpl0 = new BetaDistributionImpl(3.6899182659531625E-6, (-0.3863911792235805));
      Double.max((-963.5), 3.6899182659531625E-6);
      betaDistributionImpl0.cumulativeProbability(3.6899182659531625E-6, (-0.3863911792235805));
      Double double3 = new Double(0.0018423);
      betaDistributionImpl0.getBeta();
      FDistributionImpl fDistributionImpl0 = new FDistributionImpl(2655.4895674, 1.0E-8);
      // Undeclared exception!
      fDistributionImpl0.inverseCumulativeProbability(0.0018423);
  }
}
