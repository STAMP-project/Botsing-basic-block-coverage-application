/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:07:43 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Vector3D vector3D1 = new Vector3D((-84.799181), vector3D0);
      Vector3D vector3D2 = vector3D0.crossProduct((Vector<Euclidean3D>) vector3D1);
      Line line0 = new Line(vector3D0, vector3D1);
      Line line1 = new Line(line0);
      line1.toSubSpace(vector3D2);
      Vector3D vector3D3 = line0.getDirection();
      Vector3D vector3D4 = vector3D1.subtract((-84.799181), (Vector<Euclidean3D>) vector3D3);
      Vector3D vector3D5 = line1.getOrigin();
      Vector3D vector3D6 = Vector3D.PLUS_I;
      vector3D1.getSpace();
      Line line2 = new Line(vector3D3, vector3D0);
      Line line3 = new Line(vector3D5, vector3D4);
      Line line4 = new Line(line3);
      // Undeclared exception!
      line4.toSubSpace((Vector<Euclidean3D>) null);
  }
}
