/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 06:36:00 UTC 2021
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.chrono.ZonedChronology;
import org.joda.time.field.TestPreciseDurationDateTimeField;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodParser;
import org.joda.time.format.PeriodPrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PreciseDurationDateTimeField_ESTest extends PreciseDurationDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getDurationField();
      ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();
      Chronology chronology0 = iSOChronology0.withUTC();
      PeriodPrinter periodPrinter0 = mock(PeriodPrinter.class, new ViolatedAssumptionAnswer());
      PeriodParser periodParser0 = mock(PeriodParser.class, new ViolatedAssumptionAnswer());
      PeriodFormatter periodFormatter0 = new PeriodFormatter(periodPrinter0, periodParser0);
      iSOChronology0.toString();
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      dateTimeZone0.isFixed();
      ZonedChronology.getInstance(chronology0, dateTimeZone0);
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getRangeDurationField();
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.get((-1118));
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMaximumValue();
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getRangeDurationField();
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMaximumValue();
      // Undeclared exception!
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set((long) (-1118), (-2983));
  }
}
