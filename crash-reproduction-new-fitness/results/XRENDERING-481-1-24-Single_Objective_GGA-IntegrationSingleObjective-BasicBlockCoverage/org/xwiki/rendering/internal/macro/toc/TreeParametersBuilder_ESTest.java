/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 06:34:20 UTC 2020
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Hashtable;
import java.util.Map;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.block.SectionBlock;
import org.xwiki.rendering.block.XDOM;
import org.xwiki.rendering.block.match.BlockMatcher;
import org.xwiki.rendering.block.match.CompositeBlockMatcher;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.listener.reference.ResourceReference;
import org.xwiki.rendering.listener.reference.ResourceType;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.transformation.MacroTransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      MacroTransformationContext macroTransformationContext0 = mock(MacroTransformationContext.class, new ViolatedAssumptionAnswer());
      MacroTransformationContext macroTransformationContext1 = mock(MacroTransformationContext.class, new ViolatedAssumptionAnswer());
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      MacroTransformationContext macroTransformationContext2 = mock(MacroTransformationContext.class, new ViolatedAssumptionAnswer());
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      MacroTransformationContext macroTransformationContext3 = new MacroTransformationContext();
      MacroTransformationContext macroTransformationContext4 = macroTransformationContext3.clone();
      macroTransformationContext3.clone();
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      TocMacroParameters tocMacroParameters2 = new TocMacroParameters();
      XDOM xDOM0 = XDOM.EMPTY;
      MacroTransformationContext macroTransformationContext5 = macroTransformationContext4.clone();
      TocMacroParameters tocMacroParameters3 = new TocMacroParameters();
      ResourceType resourceType0 = ResourceType.USER;
      ResourceReference resourceReference0 = new ResourceReference("/i>vh^", resourceType0);
      Map<String, String> map0 = resourceReference0.getParameters();
      MacroBlock macroBlock0 = new MacroBlock("/i>vh^", map0, (String) null, false);
      macroTransformationContext5.setCurrentMacroBlock(macroBlock0);
      Stack<Block> stack0 = new Stack<Block>();
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      SectionBlock sectionBlock0 = new SectionBlock(stack0, hashtable0);
      BlockMatcher[] blockMatcherArray0 = new BlockMatcher[10];
      sectionBlock0.getChildren();
      CompositeBlockMatcher compositeBlockMatcher0 = new CompositeBlockMatcher(blockMatcherArray0);
      Block.Axes block_Axes0 = Block.Axes.ANCESTOR;
      sectionBlock0.getFirstBlock((BlockMatcher) compositeBlockMatcher0, block_Axes0);
      // Undeclared exception!
      treeParametersBuilder0.build((Block) null, tocMacroParameters0, macroTransformationContext5);
  }
}
