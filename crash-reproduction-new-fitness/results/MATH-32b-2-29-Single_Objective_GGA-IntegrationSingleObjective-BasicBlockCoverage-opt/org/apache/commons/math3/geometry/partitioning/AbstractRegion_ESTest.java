/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 11:11:50 UTC 2021
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Rotation;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.AbstractRegion;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet();
      PolyhedronsSet polyhedronsSet0 = new PolyhedronsSet();
      Vector3D vector3D0 = Vector3D.NaN;
      Vector3D vector3D1 = new Vector3D(0.0, vector3D0, 7.549789948768648E-8, vector3D0, 0.0, vector3D0, (-3.9986783938944604E-8), vector3D0);
      Vector3D vector3D2 = Vector3D.MINUS_I;
      Vector3D vector3D3 = new Vector3D((-3.9986783938944604E-8), vector3D0, 0.0, vector3D1, 503.542, vector3D2, 0.0, vector3D1);
      Rotation rotation0 = Rotation.IDENTITY;
      PolygonsSet polygonsSet1 = new PolygonsSet();
      polygonsSet1.getBoundarySize();
      Vector2D vector2D0 = Vector2D.NaN;
      Vector2D vector2D1 = new Vector2D(0.0, vector2D0);
      Line line0 = new Line(vector2D1, (-1.0E-10));
      PolygonsSet polygonsSet2 = line0.wholeSpace();
      Euclidean3D euclidean3D0 = Euclidean3D.getInstance();
      Euclidean2D euclidean2D0 = euclidean3D0.getSubSpace();
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(euclidean2D0);
      SubLine subLine0 = line0.wholeHyperplane();
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.split(subLine0);
      BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getMinus();
      PolygonsSet polygonsSet3 = polygonsSet2.buildNew(bSPTree2);
      AbstractRegion abstractRegion0 = polygonsSet3.copySelf();
      // Undeclared exception!
      abstractRegion0.getSize();
  }
}
