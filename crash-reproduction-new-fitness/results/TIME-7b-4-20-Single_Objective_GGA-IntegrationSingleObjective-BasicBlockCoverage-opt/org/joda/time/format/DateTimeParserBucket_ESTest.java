/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:07:06 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.JulianChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone dateTimeZone0 = mock(DateTimeZone.class, new ViolatedAssumptionAnswer());
      JulianChronology julianChronology0 = JulianChronology.getInstance(dateTimeZone0);
      Locale locale0 = Locale.UK;
      DateTimeFieldType.minuteOfDay();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
      Locale locale1 = Locale.UK;
      locale1.getDisplayVariant();
      dateTimeFieldType0.getField(julianChronology0);
      dateTimeFieldType0.getRangeDurationType();
      Locale.forLanguageTag("");
      Integer integer0 = new Integer((-2466));
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-2087L), julianChronology0, locale1, integer0, (-2283));
      dateTimeParserBucket0.saveField(dateTimeFieldType0, (String) null, locale1);
      dateTimeParserBucket0.setPivotYear(integer0);
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(false, "PRhzbqPKL~1bL");
  }
}
