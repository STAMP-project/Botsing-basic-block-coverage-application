/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:36:06 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint;
import org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean2D> bSPTree0 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet1 = new PolygonsSet(linkedList0);
      polygonsSet1.isEmpty();
      polygonsSet1.computeGeometricalProperties();
      Vector2D vector2D0 = Vector2D.ZERO;
      Line line0 = new Line(vector2D0, 1176.420109593);
      PolygonsSet polygonsSet2 = line0.wholeSpace();
      Line line1 = new Line(line0);
      line1.wholeHyperplane();
      BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(linkedList0);
      PolygonsSet polygonsSet3 = new PolygonsSet(bSPTree1);
      polygonsSet1.copySelf();
      PolygonsSet polygonsSet4 = new PolygonsSet();
      polygonsSet2.contains(polygonsSet4);
      Vector1D vector1D0 = line0.toSubSpace(vector2D0);
      OrientedPoint orientedPoint0 = new OrientedPoint(vector1D0, true);
      OrientedPoint orientedPoint1 = orientedPoint0.copySelf();
      SubOrientedPoint subOrientedPoint0 = orientedPoint1.wholeHyperplane();
      SubOrientedPoint[] subOrientedPointArray0 = new SubOrientedPoint[7];
      subOrientedPointArray0[0] = subOrientedPoint0;
      subOrientedPointArray0[1] = subOrientedPoint0;
      subOrientedPointArray0[2] = subOrientedPoint0;
      subOrientedPointArray0[3] = subOrientedPoint0;
      subOrientedPointArray0[4] = subOrientedPoint0;
      SubOrientedPoint subOrientedPoint1 = orientedPoint1.wholeHyperplane();
      subOrientedPointArray0[5] = subOrientedPoint1;
      subOrientedPointArray0[6] = subOrientedPoint0;
      linkedList0.toArray(subOrientedPointArray0);
      PolygonsSet polygonsSet5 = new PolygonsSet();
      PolygonsSet polygonsSet6 = new PolygonsSet(linkedList0);
      polygonsSet6.computeGeometricalProperties();
      polygonsSet1.computeGeometricalProperties();
      polygonsSet6.computeGeometricalProperties();
      PolygonsSet polygonsSet7 = polygonsSet4.buildNew(bSPTree1);
      // Undeclared exception!
      polygonsSet7.computeGeometricalProperties();
  }
}
