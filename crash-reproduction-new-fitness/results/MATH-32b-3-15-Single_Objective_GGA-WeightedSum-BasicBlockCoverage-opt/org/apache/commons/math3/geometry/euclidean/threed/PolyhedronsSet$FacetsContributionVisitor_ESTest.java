/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:47:17 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Rotation;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolyhedronsSet$FacetsContributionVisitor_ESTest extends PolyhedronsSet$FacetsContributionVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean3D> bSPTree0 = (BSPTree<Euclidean3D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      BSPTree<Euclidean3D> bSPTree1 = null;
      PolyhedronsSet polyhedronsSet0 = new PolyhedronsSet((-0.49999999999999994), 847.2753870230022, 0.16666666666745392, 1255.7873926816003, (-516.63127407924), (-0.49999999999999994));
      Vector3D vector3D0 = Vector3D.PLUS_I;
      Vector3D.crossProduct(vector3D0, vector3D0);
      Rotation rotation0 = new Rotation(1255.7873926816003, 0.16666666666745392, 0.06666666666666667, (-155.09432), false);
      PolyhedronsSet polyhedronsSet1 = polyhedronsSet0.rotate(vector3D0, rotation0);
      // Undeclared exception!
      polyhedronsSet1.getSize();
  }
}
