/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:12:11 UTC 2020
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntervalsSet intervalsSet0 = new IntervalsSet();
      LinkedList<Euclidean1D> linkedList0 = new LinkedList<Euclidean1D>();
      intervalsSet0.getBarycenter();
      Vector1D vector1D0 = new Vector1D((-2322.410860066129));
      Euclidean1D.getInstance();
      intervalsSet0.checkPoint(vector1D0);
      intervalsSet0.getInf();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      boolean boolean0 = true;
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>("{Wt.r,W:KSd");
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.copySelf();
      polygonsSet0.getSize();
      polygonsSet0.buildNew(bSPTree1);
      Vector1D vector1D1 = new Vector1D(Double.NEGATIVE_INFINITY);
      BSPTree<Euclidean1D> bSPTree2 = new BSPTree<Euclidean1D>();
      intervalsSet0.checkPoint(vector1D0);
      intervalsSet0.getInf();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList2 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet1 = new PolygonsSet(linkedList2);
      BSPTree<Euclidean2D> bSPTree3 = new BSPTree<Euclidean2D>(vector1D1);
      PolygonsSet polygonsSet2 = new PolygonsSet(bSPTree1);
      // Undeclared exception!
      polygonsSet2.getSize();
  }
}
