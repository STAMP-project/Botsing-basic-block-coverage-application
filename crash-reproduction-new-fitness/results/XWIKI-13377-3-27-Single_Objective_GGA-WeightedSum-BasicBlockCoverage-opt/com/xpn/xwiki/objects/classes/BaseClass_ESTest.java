/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 12:06:50 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.msv.datatype.xsd.XSDatatype;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.classes.BaseClass;
import com.xpn.xwiki.objects.meta.EmailMetaClass;
import java.util.Map;
import org.dom4j.QName;
import org.dom4j.datatype.DatatypeElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hibernate.collection.PersistentMap;
import org.hibernate.engine.SessionImplementor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseClass baseClass0 = new BaseClass();
      XWikiContext xWikiContext0 = new XWikiContext();
      baseClass0.newCustomClassInstance(xWikiContext0);
      String string0 = "";
      int int0 = 0;
      baseClass0.addStaticListField("", "", 0, false, "");
      baseClass0.getName();
      baseClass0.fromXML((String) null);
      baseClass0.toString();
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      PersistentMap persistentMap0 = new PersistentMap(sessionImplementor0, xWikiContext0);
      BaseCollection baseCollection0 = new EmailMetaClass();
      QName qName0 = new QName("%sK*Ne3+}i) BR#]");
      XSDatatype xSDatatype0 = mock(XSDatatype.class, new ViolatedAssumptionAnswer());
      DatatypeElement datatypeElement0 = new DatatypeElement(qName0, xSDatatype0);
      persistentMap0.put("", datatypeElement0);
      baseClass0.get((String) null);
      // Undeclared exception!
      baseClass0.fromMap((Map<String, ?>) persistentMap0, (BaseCollection) baseCollection0);
  }
}
