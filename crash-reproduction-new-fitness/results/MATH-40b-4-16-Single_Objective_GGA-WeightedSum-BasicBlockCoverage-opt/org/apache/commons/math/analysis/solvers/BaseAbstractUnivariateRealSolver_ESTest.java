/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 21:33:03 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver;
import org.apache.commons.math.analysis.solvers.RiddersSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SinFunction sinFunction0 = new SinFunction();
      sinFunction0.value(151.50025005);
      sinFunction0.derivative();
      sinFunction0.derivative();
      SincFunction sincFunction0 = new SincFunction();
      Expm1Function expm1Function0 = new Expm1Function();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      Expm1Function expm1Function1 = new Expm1Function();
      sincFunction0.derivative();
      double double0 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double2 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      expm1Function0.derivative();
      LaguerreSolver laguerreSolver0 = new LaguerreSolver();
      double double3 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double4 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      RiddersSolver riddersSolver0 = new RiddersSolver();
      double double5 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double6 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      MullerSolver mullerSolver0 = new MullerSolver(0.0, 151.50025005);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-1329.34106669277), 1.0E-6, (-1.0), 1763);
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(318, (UnivariateFunction) sincFunction0, 1.0E-6, (double) 11, allowedSolution0);
  }
}
