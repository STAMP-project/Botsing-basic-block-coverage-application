/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 12:05:27 BST 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DurationFieldType;
import org.joda.time.Months;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodParser;
import org.joda.time.format.PeriodPrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Period period0 = new Period();
      Period period1 = period0.withYears(3);
      DurationFieldType durationFieldType0 = DurationFieldType.hours();
      Period period2 = period0.withField(durationFieldType0, 3);
      Period period3 = new Period();
      int int0 = 3;
      Period period4 = period2.withYears((-1));
      DurationFieldType.hours();
      period0.withField(durationFieldType0, 1103);
      Period period5 = period4.multipliedBy((-1978));
      PeriodPrinter periodPrinter0 = mock(PeriodPrinter.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(periodPrinter0).calculatePrintedLength(any(org.joda.time.ReadablePeriod.class) , any(java.util.Locale.class));
      PeriodParser periodParser0 = mock(PeriodParser.class, new ViolatedAssumptionAnswer());
      PeriodFormatter periodFormatter0 = new PeriodFormatter(periodPrinter0, periodParser0);
      period5.toString(periodFormatter0);
      Object object0 = new Object();
      period1.equals(period4);
      Period period6 = new Period();
      Months months0 = Months.FIVE;
      PeriodType periodType0 = months0.getPeriodType();
      Period period7 = new Period((-854), 1000L, periodType0);
      // Undeclared exception!
      period7.withYears(19);
  }
}
