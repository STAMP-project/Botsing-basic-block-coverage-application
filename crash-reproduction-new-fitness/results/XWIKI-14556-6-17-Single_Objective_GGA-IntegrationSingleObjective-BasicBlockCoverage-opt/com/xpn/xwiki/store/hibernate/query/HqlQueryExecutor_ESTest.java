/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 09:05:54 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import java.util.concurrent.ConcurrentHashMap;
import javax.inject.Provider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Query;
import org.hibernate.engine.NamedSQLQueryDefinition;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.hibernate.type.Type;
import org.hibernate.type.UrlType;
import org.junit.runner.RunWith;
import org.xwiki.component.internal.RootComponentManager;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.query.internal.LanguageQueryFilter;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Provider<RootComponentManager> provider0 = (Provider<RootComponentManager>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider0);
      HqlQueryExecutor.isSafeSelect("order by idle");
      DefaultQuery defaultQuery0 = new DefaultQuery("order by idle", "order by idle", hqlQueryExecutor0);
      LanguageQueryFilter languageQueryFilter0 = new LanguageQueryFilter();
      defaultQuery0.bindValue(";y[|M[;|4KhHt9", (Object) languageQueryFilter0);
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = new OrdinalParameterDescriptor[1];
      UrlType urlType0 = new UrlType();
      OrdinalParameterDescriptor ordinalParameterDescriptor0 = new OrdinalParameterDescriptor(1934, urlType0, (-253218377));
      ordinalParameterDescriptorArray0[0] = ordinalParameterDescriptor0;
      ConcurrentHashMap<NamedSQLQueryDefinition, LanguageQueryFilter> concurrentHashMap0 = new ConcurrentHashMap<NamedSQLQueryDefinition, LanguageQueryFilter>();
      ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, concurrentHashMap0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("n$h7sfkQY7F", defaultQuery0, sessionImplementor0, parameterMetadata0);
      Type[] typeArray0 = new Type[7];
      typeArray0[0] = (Type) urlType0;
      typeArray0[1] = (Type) urlType0;
      typeArray0[2] = (Type) urlType0;
      typeArray0[3] = (Type) urlType0;
      typeArray0[4] = (Type) urlType0;
      typeArray0[5] = (Type) urlType0;
      typeArray0[6] = (Type) urlType0;
      Query query0 = collectionFilterImpl0.setParameters(ordinalParameterDescriptorArray0, typeArray0);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(query0, defaultQuery0);
  }
}
