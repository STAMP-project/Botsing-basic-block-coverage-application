/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:09:32 UTC 2020
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.DurationField;
import org.joda.time.LocalDate;
import org.joda.time.LocalTime;
import org.joda.time.chrono.AssembledChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.GJChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      AssembledChronology.Fields assembledChronology_Fields0 = new AssembledChronology.Fields();
      DurationField durationField0 = assembledChronology_Fields0.centuries;
      copticChronology0.assemble(assembledChronology_Fields0);
      CopticChronology.getInstance();
      LocalTime localTime0 = new LocalTime((Chronology) copticChronology0);
      DateTimeFieldType.halfdayOfDay();
      copticChronology0.set(localTime0, 1082L);
      LocalDate localDate0 = new LocalDate((-1836L), (DateTimeZone) null);
      Date date0 = new Date(1L);
      GJChronology.getInstance((DateTimeZone) null);
      CopticChronology copticChronology1 = CopticChronology.getInstance();
      LocalTime localTime1 = new LocalTime((Chronology) copticChronology0);
      DateTimeFieldType.halfdayOfDay();
      // Undeclared exception!
      copticChronology1.set(localDate0, (-1734L));
  }
}
