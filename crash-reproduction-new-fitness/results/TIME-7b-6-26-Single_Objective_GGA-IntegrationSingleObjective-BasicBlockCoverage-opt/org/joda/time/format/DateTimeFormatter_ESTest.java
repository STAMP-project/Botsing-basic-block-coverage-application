/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:11:26 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DurationFieldType;
import org.joda.time.LocalDate;
import org.joda.time.MonthDay;
import org.joda.time.MutableDateTime;
import org.joda.time.Partial;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.format.DateTimeParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());
      String string0 = "2";
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();
      DurationFieldType.days();
      int int0 = 1;
      MonthDay.now();
      dateTimeFieldType0.isSupported(copticChronology0);
      Partial partial0 = new Partial(dateTimeFieldType0, 1);
      LocalDate.parse("2");
      DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfWeek();
      int int1 = (-102);
      boolean boolean0 = false;
      DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType1, (-102), false);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);
      dateTimeFieldType1.getDurationType();
      MutableDateTime mutableDateTime0 = MutableDateTime.now((Chronology) copticChronology0);
      // Undeclared exception!
      dateTimeFormatter0.parseInto(mutableDateTime0, "-00:15", 1);
  }
}
