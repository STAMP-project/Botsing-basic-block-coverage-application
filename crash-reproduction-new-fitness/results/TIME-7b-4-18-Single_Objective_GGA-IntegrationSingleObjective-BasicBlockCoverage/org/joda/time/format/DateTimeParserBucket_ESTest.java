/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 17:45:05 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.HijrahDate;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      HijrahDate.now();
      buddhistChronology0.add((long) (-3475), 8252640000L, (-3475));
      DateTimeField dateTimeField0 = buddhistChronology0.clockhourOfHalfday();
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(dateTimeField0, 2753);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.getDefault(locale_Category0);
      Integer integer0 = Integer.valueOf((-3475));
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-2310L), buddhistChronology0, locale0, integer0, 4025);
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();
      dateTimeParserBucket0.saveField(dateTimeFieldType0, "below the supported minimum of ", locale0);
      Integer integer1 = new Integer(263);
      DateTimeField dateTimeField1 = buddhistChronology0.dayOfMonth();
      dateTimeParserBucket0.saveField(dateTimeField1, (-3475));
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(true, "");
  }
}
