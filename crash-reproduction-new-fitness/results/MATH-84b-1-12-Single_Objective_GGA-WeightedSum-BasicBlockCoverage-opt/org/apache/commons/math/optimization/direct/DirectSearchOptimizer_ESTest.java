/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 22:28:49 UTC 2021
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.RealConvergenceChecker;
import org.apache.commons.math.optimization.SimpleRealPointChecker;
import org.apache.commons.math.optimization.SimpleScalarValueChecker;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DirectSearchOptimizer_ESTest extends DirectSearchOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional();
      RealConvergenceChecker realConvergenceChecker0 = mock(RealConvergenceChecker.class, new ViolatedAssumptionAnswer());
      RealConvergenceChecker realConvergenceChecker1 = mock(RealConvergenceChecker.class, new ViolatedAssumptionAnswer());
      multiDirectional0.setConvergenceChecker(realConvergenceChecker1);
      multiDirectional0.incrementIterationsCounter();
      multiDirectional0.setMaxIterations((-336));
      multiDirectional0.getMaxIterations();
      SimpleScalarValueChecker simpleScalarValueChecker0 = new SimpleScalarValueChecker(2966.394, 1835.4897238339);
      double double0 = Double.NaN;
      SimpleRealPointChecker simpleRealPointChecker0 = new SimpleRealPointChecker(0.0, 365.0);
      multiDirectional0.setConvergenceChecker(realConvergenceChecker0);
      MultiDirectional multiDirectional1 = new MultiDirectional((-1925.45637), (-33.2));
      try { 
        multiDirectional0.incrementIterationsCounter();
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (-336) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
