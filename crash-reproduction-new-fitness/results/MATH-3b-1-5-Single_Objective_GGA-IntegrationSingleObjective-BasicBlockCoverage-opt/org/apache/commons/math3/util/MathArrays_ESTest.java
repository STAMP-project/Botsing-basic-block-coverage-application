/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:30:58 UTC 2021
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.Field;
import org.apache.commons.math3.util.MathArrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class MathArrays_ESTest extends MathArrays_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = Double.POSITIVE_INFINITY;
      doubleArray0[0] = Double.POSITIVE_INFINITY;
      MathArrays.equalsIncludingNaN(doubleArray0, doubleArray0);
      MathArrays.distance1(doubleArray0, doubleArray0);
      MathArrays.equals(doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[8];
      double double1 = 1320.13125231;
      doubleArray1[0] = 1320.13125231;
      doubleArray1[1] = Double.POSITIVE_INFINITY;
      doubleArray1[2] = 2553.6;
      doubleArray1[3] = Double.NaN;
      doubleArray1[4] = Double.POSITIVE_INFINITY;
      doubleArray1[5] = Double.POSITIVE_INFINITY;
      doubleArray1[6] = Double.NaN;
      doubleArray1[7] = Double.POSITIVE_INFINITY;
      MathArrays.linearCombination(doubleArray1, doubleArray1);
      Field<Double> field0 = (Field<Double>) mock(Field.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      MathArrays.linearCombination(doubleArray0, doubleArray0);
  }
}
