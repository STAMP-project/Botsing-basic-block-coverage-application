/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 15:03:14 UTC 2021
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.chaining.BlockStateChainingListener;
import org.xwiki.rendering.listener.chaining.ConsecutiveNewLineStateChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;
import org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;
import org.xwiki.rendering.listener.chaining.StackableChainingListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractChainingListener_ESTest extends AbstractChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListenerChain listenerChain0 = new ListenerChain();
      BlockStateChainingListener blockStateChainingListener0 = new BlockStateChainingListener(listenerChain0);
      StackableChainingListener stackableChainingListener0 = blockStateChainingListener0.createChainingListenerInstance();
      listenerChain0.addListener(stackableChainingListener0);
      ConsecutiveNewLineStateChainingListener consecutiveNewLineStateChainingListener0 = new ConsecutiveNewLineStateChainingListener(listenerChain0);
      StackableChainingListener stackableChainingListener1 = consecutiveNewLineStateChainingListener0.createChainingListenerInstance();
      ListenerChain listenerChain1 = mock(ListenerChain.class, new ViolatedAssumptionAnswer());
      MetaDataStateChainingListener metaDataStateChainingListener0 = new MetaDataStateChainingListener(listenerChain1);
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain0);
      listenerChain0.addListener(emptyBlockChainingListener0);
      ListenerChain listenerChain2 = new ListenerChain();
      ConsecutiveNewLineStateChainingListener consecutiveNewLineStateChainingListener1 = new ConsecutiveNewLineStateChainingListener(listenerChain2);
      consecutiveNewLineStateChainingListener0.createChainingListenerInstance();
      MetaDataStateChainingListener metaDataStateChainingListener1 = new MetaDataStateChainingListener(listenerChain2);
      Format format0 = Format.ITALIC;
      metaDataStateChainingListener1.endFormat(format0, (Map<String, String>) null);
      EmptyBlockChainingListener emptyBlockChainingListener1 = new EmptyBlockChainingListener(listenerChain0);
      ConsecutiveNewLineStateChainingListener consecutiveNewLineStateChainingListener2 = new ConsecutiveNewLineStateChainingListener(listenerChain2);
      ListenerChain listenerChain3 = new ListenerChain();
      ConsecutiveNewLineStateChainingListener consecutiveNewLineStateChainingListener3 = new ConsecutiveNewLineStateChainingListener(listenerChain3);
      stackableChainingListener1.createChainingListenerInstance();
      MetaDataStateChainingListener metaDataStateChainingListener2 = new MetaDataStateChainingListener(listenerChain2);
      // Undeclared exception!
      blockStateChainingListener0.endFormat(format0, (Map<String, String>) null);
  }
}
