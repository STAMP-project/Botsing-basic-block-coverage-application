/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 16:36:46 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePeriod;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone dateTimeZone0 = null;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      buddhistChronology0.clockhourOfHalfday();
      Integer integer0 = new Integer(65);
      Locale locale0 = Locale.JAPANESE;
      PeriodType periodType0 = PeriodType.seconds();
      Period period0 = new Period((-1928), 65, periodType0);
      Days days0 = period0.toStandardDays();
      int int0 = new Integer(65);
      buddhistChronology0.get((ReadablePeriod) days0, (long) 65, (-1265L));
      DateTimeField dateTimeField0 = buddhistChronology0.dayOfMonth();
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(1744L, buddhistChronology0, locale0);
      DateTimeFieldType.minuteOfHour();
      dateTimeParserBucket0.setOffset((-1928));
      dateTimeParserBucket0.saveField(dateTimeField0, 170);
      dateTimeParserBucket0.getChronology();
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(true, "");
  }
}
