/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:44:01 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.Days;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.TestLocalTime_Basics;
import org.joda.time.TestMutableDateTime_Basics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Calendar.getInstance();
      java.time.Instant instant0 = java.time.Instant.now();
      java.time.Duration.ofMillis(0L);
      Date.from(instant0);
      MonthDay monthDay0 = new MonthDay(0L);
      java.time.Instant.ofEpochMilli(0L);
      TestMutableDateTime_Basics testMutableDateTime_Basics0 = mock(TestMutableDateTime_Basics.class, new ViolatedAssumptionAnswer());
      TestMutableDateTime_Basics.MockInstant testMutableDateTime_Basics_MockInstant0 = testMutableDateTime_Basics0.new MockInstant();
      testMutableDateTime_Basics_MockInstant0.getChronology();
      TestMutableDateTime_Basics testMutableDateTime_Basics1 = new TestMutableDateTime_Basics("java.lang.ClassNotFoundException");
      TestMutableDateTime_Basics.MockInstant testMutableDateTime_Basics_MockInstant1 = testMutableDateTime_Basics1.new MockInstant();
      testMutableDateTime_Basics_MockInstant1.getChronology();
      TestLocalTime_Basics testLocalTime_Basics0 = new TestLocalTime_Basics("Zone must not be null");
      TestLocalTime_Basics.MockInstant testLocalTime_Basics_MockInstant0 = testLocalTime_Basics0.new MockInstant();
      Chronology chronology0 = testLocalTime_Basics_MockInstant0.getChronology();
      MonthDay monthDay1 = new MonthDay(monthDay0, chronology0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) monthDay1, (ReadablePartial) monthDay1);
  }
}
