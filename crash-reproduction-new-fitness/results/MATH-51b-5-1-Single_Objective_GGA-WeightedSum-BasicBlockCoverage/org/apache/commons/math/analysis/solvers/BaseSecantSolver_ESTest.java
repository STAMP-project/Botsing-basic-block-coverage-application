/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 21:38:41 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Expm1Function expm1Function0 = new Expm1Function();
      Expm1Function expm1Function1 = new Expm1Function();
      expm1Function0.derivative();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      SincFunction sincFunction0 = new SincFunction();
      sincFunction0.derivative();
      UnivariateRealFunction univariateRealFunction0 = sincFunction0.derivative();
      sincFunction0.derivative();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      BaseSecantSolver.Method.values();
      // Undeclared exception!
      illinoisSolver0.solve(2, univariateRealFunction0, (-1.0), 3515.6532774, 3156.8245);
  }
}
