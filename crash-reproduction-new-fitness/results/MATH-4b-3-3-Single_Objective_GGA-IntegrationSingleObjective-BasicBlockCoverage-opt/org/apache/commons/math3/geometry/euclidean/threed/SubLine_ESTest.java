/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 03:39:01 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.Segment;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Segment segment0 = mock(Segment.class, new ViolatedAssumptionAnswer());
      Vector3D vector3D0 = Vector3D.MINUS_J;
      Vector3D vector3D1 = new Vector3D(Double.NEGATIVE_INFINITY, vector3D0, Double.NEGATIVE_INFINITY, vector3D0, Double.NEGATIVE_INFINITY, vector3D0);
      Plane plane0 = new Plane(vector3D1, vector3D0);
      Plane plane1 = new Plane(vector3D1, vector3D0, vector3D0);
      Plane plane2 = new Plane(plane1);
      vector3D1.subtract((Vector<Euclidean3D>) vector3D0);
      Line line0 = plane0.intersection(plane2);
      Segment segment1 = new Segment(vector3D1, vector3D1, line0);
      SubLine subLine0 = new SubLine(segment1);
      plane0.copySelf();
      subLine0.getSegments();
      Line line1 = new Line(vector3D1, vector3D0);
      SubLine subLine1 = line1.wholeLine();
      // Undeclared exception!
      subLine0.intersection(subLine1, false);
  }
}
