/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:43:57 UTC 2020
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.CharSequenceTranslator;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumericEntityUnescaper_ESTest extends NumericEntityUnescaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      CharSequence charSequence1 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[2] = '&';
      String string0 = "6hNRea;Pn9`";
      charArray0[3] = '#';
      charArray0[0] = '&';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[3];
      CharSequenceTranslator charSequenceTranslator0 = numericEntityUnescaper0.with(charSequenceTranslatorArray0);
      charSequenceTranslatorArray0[2] = charSequenceTranslator0;
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) numericEntityUnescaper0;
      charSequenceTranslatorArray0[2] = (CharSequenceTranslator) numericEntityUnescaper0;
      numericEntityUnescaper0.with(charSequenceTranslatorArray0);
      char[] charArray1 = new char[27];
      charArray1[21] = '&';
      CharBuffer.wrap(charArray0);
      NumericEntityUnescaper numericEntityUnescaper1 = new NumericEntityUnescaper();
      CharSequenceTranslator.hex(837);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) charBuffer0);
      // Undeclared exception!
      numericEntityUnescaper1.translate((CharSequence) stringBuffer0, (Writer) stringWriter2);
  }
}
