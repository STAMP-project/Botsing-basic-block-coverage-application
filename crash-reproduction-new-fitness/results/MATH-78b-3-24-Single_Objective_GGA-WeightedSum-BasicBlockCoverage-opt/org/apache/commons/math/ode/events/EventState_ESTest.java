/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 22:28:06 UTC 2021
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator();
      StepInterpolator stepInterpolator0 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      StepInterpolator stepInterpolator1 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator1).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator1).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator1).isForward();
      StepInterpolator stepInterpolator2 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      StepInterpolator stepInterpolator3 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator3).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator3).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator3).isForward();
      DummyStepInterpolator dummyStepInterpolator1 = new DummyStepInterpolator();
      EventState eventState0 = new EventState(eventHandler0, (-6206.814354702895), (-12.0), (-737));
      eventState0.stop();
      eventState0.stepAccepted((-6206.814354702895), (double[]) null);
      StepProblem stepProblem0 = new StepProblem(0.25, Double.NaN, (-6206.814354702895));
      EventState eventState1 = new EventState(stepProblem0, 1.0, (-526.5755189264934), (-1982292598));
      eventState1.evaluateStep(stepInterpolator1);
      eventState1.stepAccepted((-12.0), (double[]) null);
      // Undeclared exception!
      eventState1.evaluateStep(stepInterpolator3);
  }
}
