/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 23:10:00 UTC 2020
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.distribution.DiscreteDistribution;
import org.apache.commons.math3.random.ISAACRandom;
import org.apache.commons.math3.random.JDKRandomGenerator;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DiscreteDistribution_ESTest extends DiscreteDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
      Float float0 = new Float((-87.9));
      Double double0 = new Double(1562.5461160981392);
      Pair<Float, Double> pair0 = new Pair<Float, Double>(float0, double0);
      Pair<Object, Double> pair1 = new Pair<Object, Double>(pair0);
      linkedList0.push(pair1);
      DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(iSAACRandom0, linkedList0);
      DiscreteDistribution<Object> discreteDistribution1 = new DiscreteDistribution<Object>(iSAACRandom0, linkedList0);
      Double double1 = new Double(1.1247213964487372E264);
      Float float1 = new Float(0.49743081261867506);
      Double double2 = new Double((-1253.6207));
      Pair<Float, Double> pair2 = new Pair<Float, Double>(float1, double2);
      Double double3 = new Double(0.6177856251651055);
      Pair<Double, Double> pair3 = new Pair<Double, Double>(double2, double3);
      Pair<Double, Double> pair4 = new Pair<Double, Double>(pair3);
      Pair<Object, Double> pair5 = new Pair<Object, Double>(pair4);
      linkedList0.push(pair5);
      DiscreteDistribution<Object> discreteDistribution2 = new DiscreteDistribution<Object>(iSAACRandom0, linkedList0);
      DiscreteDistribution<Object> discreteDistribution3 = new DiscreteDistribution<Object>((RandomGenerator) null, linkedList0);
      DiscreteDistribution<Object> discreteDistribution4 = new DiscreteDistribution<Object>(linkedList0);
      // Undeclared exception!
      discreteDistribution4.sample(2755);
  }
}
