/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 16:47:59 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.ZonedChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeParserBucket.SavedField[] dateTimeParserBucket_SavedFieldArray0 = new DateTimeParserBucket.SavedField[1];
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();
      GJChronology gJChronology0 = GJChronology.getInstanceUTC();
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      ZonedChronology.getInstance(gJChronology0, dateTimeZone0);
      Chronology chronology0 = gJChronology0.withZone(dateTimeZone0);
      dateTimeFieldType0.isSupported(chronology0);
      gJChronology0.withZone(dateTimeZone0);
      DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfWeek();
      dateTimeFieldType1.isSupported(chronology0);
      Locale locale0 = Locale.TAIWAN;
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(0L, gJChronology0, locale0, (Integer) null, 11);
      int int0 = (-514);
      dateTimeParserBucket0.saveField(dateTimeFieldType1, (-514));
      DateTimeParserBucket dateTimeParserBucket1 = new DateTimeParserBucket(0L, gJChronology0, locale0);
      dateTimeParserBucket0.getPivotYear();
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(true, "Illegal instant due to time zone offset transition (");
  }
}
