/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 23:22:23 BST 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.DurationField;
import org.joda.time.DurationFieldType;
import org.joda.time.Minutes;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.field.UnsupportedDateTimeField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Calendar.getAvailableCalendarTypes();
      Calendar.getAvailableCalendarTypes();
      Calendar.getAvailableCalendarTypes();
      Calendar.getAvailableCalendarTypes();
      Calendar.getAvailableCalendarTypes();
      Calendar.getAvailableCalendarTypes();
      Calendar.getAvailableCalendarTypes();
      MonthDay monthDay0 = new MonthDay((DateTimeZone) null);
      int[] intArray0 = new int[5];
      intArray0[0] = 7;
      intArray0[1] = Integer.MAX_VALUE;
      intArray0[2] = 275;
      intArray0[3] = 292272992;
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      Minutes minutes0 = Minutes.TWO;
      DurationFieldType durationFieldType0 = minutes0.getFieldType();
      DurationField durationField0 = durationFieldType0.getField((Chronology) null);
      UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);
      DateTimeFieldType dateTimeFieldType1 = unsupportedDateTimeField0.getType();
      monthDay0.isSupported(dateTimeFieldType1);
      intArray0[4] = (-940);
      MonthDay monthDay1 = new MonthDay(monthDay0, intArray0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) monthDay1, (ReadablePartial) monthDay0);
  }
}
