/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:10:40 UTC 2020
 */

package org.apache.commons.math.special;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.MaxIterationsExceededException;
import org.apache.commons.math.special.Gamma;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Gamma_ESTest extends Gamma_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Gamma.regularizedGammaQ((-1.0), (-1.0));
      Gamma.regularizedGammaQ((-1.0), (-1.0));
      Gamma.regularizedGammaP((-52.258132), 275.291184416275, (-1.0), 1);
      int int0 = Integer.MAX_VALUE;
      Gamma.regularizedGammaQ(Double.NaN, (-52.258132), (-1109.7338421571317), Integer.MAX_VALUE);
      double double0 = 2328.7;
      double double1 = 3609.865714623232;
      try { 
        Gamma.regularizedGammaP(1.580887032249125E-4, 2328.7, 3609.865714623232, (-102));
        fail("Expecting exception: MaxIterationsExceededException");
      
      } catch(MaxIterationsExceededException e) {
         //
         // Maximal number of iterations (-102) exceeded
         //
         verifyException("org.apache.commons.math.special.Gamma", e);
      }
  }
}
