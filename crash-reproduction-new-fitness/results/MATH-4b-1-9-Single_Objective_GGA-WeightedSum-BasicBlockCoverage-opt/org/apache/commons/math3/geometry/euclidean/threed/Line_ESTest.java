/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 20:19:28 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Line line0 = new Line(vector3D0, vector3D0);
      Line line1 = line0.revert();
      Vector3D vector3D1 = line1.pointAt((-6908.19707));
      Vector3D vector3D2 = line1.pointAt(0.0);
      line1.toSubSpace(vector3D1);
      line1.getAbscissa(vector3D1);
      line1.wholeLine();
      line1.distance(vector3D2);
      line1.intersection(line0);
      Line line2 = new Line(line0);
      Line line3 = new Line(vector3D1, vector3D1);
      line2.getOrigin();
      // Undeclared exception!
      line2.toSubSpace((Vector<Euclidean3D>) null);
  }
}
