/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:09:26 UTC 2020
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDateTime;
import org.joda.time.Partial;
import org.joda.time.ReadablePartial;
import org.joda.time.chrono.CopticChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      TimeZone.getDefault();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.era();
      Partial partial0 = new Partial(dateTimeFieldType0, 1, copticChronology0);
      copticChronology0.getAverageMillisPerMonth();
      copticChronology0.millis();
      Partial partial1 = partial0.withField(dateTimeFieldType0, 1);
      copticChronology0.get((ReadablePartial) partial1, 2592000000L);
      LocalDateTime localDateTime0 = new LocalDateTime(2592000000L, (DateTimeZone) null);
      // Undeclared exception!
      copticChronology0.set(localDateTime0, 165L);
  }
}
