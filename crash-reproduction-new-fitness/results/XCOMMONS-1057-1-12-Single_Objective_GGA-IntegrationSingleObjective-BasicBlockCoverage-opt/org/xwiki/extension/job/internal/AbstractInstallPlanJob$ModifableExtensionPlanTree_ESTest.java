/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 10:28:16 UTC 2021
 */

package org.xwiki.extension.job.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.PriorityQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.InstalledExtension;
import org.xwiki.extension.job.internal.AbstractInstallPlanJob;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanAction;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode;
import org.xwiki.extension.test.EmptyExtension;
import org.xwiki.extension.version.VersionRangeCollection;
import org.xwiki.extension.version.internal.DefaultVersion;
import org.xwiki.extension.version.internal.DefaultVersionConstraint;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest extends AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree1 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      abstractInstallPlanJob_ModifableExtensionPlanTree1.clone();
      abstractInstallPlanJob_ModifableExtensionPlanTree0.stream();
      PriorityQueue<DefaultExtensionPlanNode> priorityQueue0 = new PriorityQueue<DefaultExtensionPlanNode>();
      DefaultVersion defaultVersion0 = new DefaultVersion("!X2");
      ExtensionId extensionId0 = new ExtensionId("!X2", defaultVersion0);
      EmptyExtension emptyExtension0 = new EmptyExtension(extensionId0, "wN;W");
      ExtensionPlanAction.Action extensionPlanAction_Action0 = ExtensionPlanAction.Action.REPAIR;
      DefaultExtensionPlanAction defaultExtensionPlanAction0 = new DefaultExtensionPlanAction(emptyExtension0, (Collection<InstalledExtension>) null, extensionPlanAction_Action0, "!X2", true);
      DefaultVersionConstraint defaultVersionConstraint0 = new DefaultVersionConstraint("!X2");
      DefaultVersionConstraint defaultVersionConstraint1 = new DefaultVersionConstraint(defaultVersionConstraint0);
      Collection<VersionRangeCollection> collection0 = defaultVersionConstraint1.getRanges();
      DefaultVersion defaultVersion1 = new DefaultVersion(defaultVersion0);
      DefaultVersionConstraint defaultVersionConstraint2 = new DefaultVersionConstraint(collection0, defaultVersion1);
      DefaultExtensionPlanNode defaultExtensionPlanNode0 = new DefaultExtensionPlanNode(defaultExtensionPlanAction0, defaultVersionConstraint2);
      priorityQueue0.add(defaultExtensionPlanNode0);
      abstractInstallPlanJob_ModifableExtensionPlanTree0.addAll(priorityQueue0);
      // Undeclared exception!
      abstractInstallPlanJob_ModifableExtensionPlanTree0.clone();
  }
}
