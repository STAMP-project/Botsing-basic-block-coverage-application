/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 10:26:37 BST 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Days;
import org.joda.time.DurationFieldType;
import org.joda.time.MockNullZoneChronology;
import org.joda.time.MonthDay;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePartial;
import org.joda.time.TestDateMidnight_Basics;
import org.joda.time.TestYearMonthDay_Basics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType.centuryOfEra();
      DurationFieldType durationFieldType0 = DurationFieldType.ERAS_TYPE;
      MockNullZoneChronology mockNullZoneChronology0 = new MockNullZoneChronology();
      PeriodType.dayTime();
      PeriodType.days();
      TestYearMonthDay_Basics testYearMonthDay_Basics0 = new TestYearMonthDay_Basics((String) null);
      TestYearMonthDay_Basics.MockInstant testYearMonthDay_Basics_MockInstant0 = testYearMonthDay_Basics0.new MockInstant();
      Chronology chronology0 = testYearMonthDay_Basics_MockInstant0.getChronology();
      MonthDay monthDay0 = MonthDay.now(chronology0);
      Days days0 = Days.daysBetween((ReadablePartial) monthDay0, (ReadablePartial) monthDay0);
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();
      dateTimeFieldType0.isSupported(mockNullZoneChronology0);
      TestDateMidnight_Basics testDateMidnight_Basics0 = new TestDateMidnight_Basics("");
      int int0 = 253;
      Integer integer0 = new Integer(253);
      Locale locale0 = Locale.TAIWAN;
      testYearMonthDay_Basics_MockInstant0.size();
      days0.toStandardMinutes();
      MonthDay monthDay1 = new MonthDay((long) 333, (Chronology) null);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) monthDay0, (ReadablePartial) monthDay1);
  }
}
