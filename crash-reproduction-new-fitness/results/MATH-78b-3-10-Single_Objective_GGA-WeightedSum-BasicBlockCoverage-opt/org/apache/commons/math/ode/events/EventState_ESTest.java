/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 21:29:15 UTC 2021
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.io.ByteArrayInputStream;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      doReturn(0.0, (-5458.1431462949295), 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, (-1060.595), (-1060.595), 10010);
      double[] doubleArray0 = new double[17];
      eventState0.stepAccepted((-5458.1431462949295), doubleArray0);
      eventState0.reset(Double.NaN, doubleArray0);
      eventState0.getEventHandler();
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-8223.287751717722);
      doubleArray1[1] = Double.NaN;
      eventState0.reset(2122.413955020836, doubleArray1);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
      eventState0.evaluateStep(dummyStepInterpolator0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte) (-50);
      byteArray0[4] = (byte) (-17);
      byteArray0[5] = (byte) (-100);
      byteArray0[6] = (byte) (-100);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
  }
}
