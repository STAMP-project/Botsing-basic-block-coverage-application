/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 03:39:53 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Line line0 = new Line(vector3D0, vector3D0);
      Vector1D vector1D0 = Vector1D.POSITIVE_INFINITY;
      Vector1D vector1D1 = new Vector1D(1624.10244, vector1D0, 1624.10244, vector1D0, 1624.10244, vector1D0);
      Vector3D vector3D1 = line0.toSpace(vector1D1);
      line0.reset(vector3D0, vector3D1);
      Vector3D vector3D2 = line0.getDirection();
      Line line1 = line0.revert();
      Vector3D vector3D3 = line1.pointAt(1624.10244);
      Locale locale0 = new Locale("^a$<F:+;Hx(5m22\u0003)f", "denominator must be different from 0", "KQb\"T}+mz4");
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      vector3D0.toString(numberFormat0);
      Line line2 = new Line(line0);
      line1.getAbscissa(vector3D3);
      line1.distance(line0);
      Line line3 = new Line(vector3D3, vector3D2);
      line3.toSubSpace(vector3D3);
      // Undeclared exception!
      line1.toSubSpace((Vector<Euclidean3D>) null);
  }
}
