/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 15:12:46 UTC 2021
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.MetaData;
import org.xwiki.rendering.listener.chaining.BlockStateChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.GroupStateChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;
import org.xwiki.rendering.listener.chaining.StackableChainingListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractChainingListener_ESTest extends AbstractChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListenerChain listenerChain0 = new ListenerChain();
      GroupStateChainingListener groupStateChainingListener0 = new GroupStateChainingListener(listenerChain0);
      MetaData metaData0 = MetaData.EMPTY;
      listenerChain0.addListener(groupStateChainingListener0);
      BlockStateChainingListener blockStateChainingListener0 = new BlockStateChainingListener(listenerChain0);
      StackableChainingListener stackableChainingListener0 = blockStateChainingListener0.createChainingListenerInstance();
      blockStateChainingListener0.endQuotation((Map<String, String>) null);
      listenerChain0.addListener(stackableChainingListener0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      listenerChain0.addListener(blockStateChainingListener0);
      BlockStateChainingListener blockStateChainingListener1 = new BlockStateChainingListener(listenerChain0);
      stackableChainingListener0.createChainingListenerInstance();
      ((BlockStateChainingListener) stackableChainingListener0).endQuotation((Map<String, String>) null);
      ListenerChain listenerChain1 = new ListenerChain();
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain1);
      listenerChain0.addListener(emptyBlockChainingListener0);
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      Format format0 = Format.NONE;
      // Undeclared exception!
      groupStateChainingListener0.endFormat(format0, hashMap0);
  }
}
