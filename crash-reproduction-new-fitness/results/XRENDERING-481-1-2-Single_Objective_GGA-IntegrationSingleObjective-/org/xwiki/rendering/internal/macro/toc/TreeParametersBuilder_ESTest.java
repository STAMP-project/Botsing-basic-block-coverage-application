/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 01:09:49 UTC 2020
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.LinkedList;
import java.util.Map;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.BulletedListBlock;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.block.match.BlockMatcher;
import org.xwiki.rendering.block.match.CompositeBlockMatcher;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      TocMacroParameters tocMacroParameters0 = mock(TocMacroParameters.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(tocMacroParameters0).getDepth();
      doReturn((String) null).when(tocMacroParameters0).getReference();
      doReturn((TocMacroParameters.Scope) null).when(tocMacroParameters0).getScope();
      doReturn(0).when(tocMacroParameters0).getStart();
      doReturn(false).when(tocMacroParameters0).isNumbered();
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      LinkedList<Block> linkedList0 = new LinkedList<Block>();
      BulletedListBlock bulletedListBlock0 = new BulletedListBlock(linkedList0);
      Stack<BlockMatcher> stack0 = new Stack<BlockMatcher>();
      CompositeBlockMatcher compositeBlockMatcher0 = new CompositeBlockMatcher(stack0);
      Block.Axes block_Axes0 = Block.Axes.DESCENDANT_OR_SELF;
      Block block1 = bulletedListBlock0.getFirstBlock((BlockMatcher) compositeBlockMatcher0, block_Axes0);
      TransformationContext transformationContext0 = new TransformationContext();
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext(transformationContext0);
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      compositeBlockMatcher0.match(bulletedListBlock0);
      MacroTransformationContext macroTransformationContext1 = new MacroTransformationContext();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      MacroBlock macroBlock0 = new MacroBlock("Object not currently part of this pool", map0, "dKZ#3!?neTS", false);
      macroTransformationContext0.setCurrentMacroBlock(macroBlock0);
      TreeParametersBuilder treeParametersBuilder1 = new TreeParametersBuilder();
      treeParametersBuilder1.build(bulletedListBlock0, tocMacroParameters0, macroTransformationContext1);
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters1.setScope(tocMacroParameters_Scope0);
      // Undeclared exception!
      treeParametersBuilder1.build(block1, tocMacroParameters1, macroTransformationContext0);
  }
}
