/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 15:36:16 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import com.xpn.xwiki.web.XWikiServletRequestStub;
import com.xpn.xwiki.web.XWikiServletResponse;
import javax.inject.Provider;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.chain.web.servlet.ServletWebContext;
import org.apache.struts.chain.contexts.ServletActionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Query;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.hibernate.type.ManyToOneType;
import org.hibernate.type.TypeFactory;
import org.junit.runner.RunWith;
import org.xwiki.context.Execution;
import org.xwiki.job.event.status.JobProgressManager;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Provider<DefaultQuery> provider0 = (Provider<DefaultQuery>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider0);
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "execution", (Object) execution0);
      JobProgressManager jobProgressManager0 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
      DefaultQuery defaultQuery0 = new DefaultQuery("where order by !:#$z>/y;xs^|", hqlQueryExecutor0);
      defaultQuery0.bindValue("where order by !:#$z>/y;xs^|", (Object) hqlQueryExecutor0);
      OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = new OrdinalParameterDescriptor[1];
      TypeFactory.TypeScope typeFactory_TypeScope0 = mock(TypeFactory.TypeScope.class, new ViolatedAssumptionAnswer());
      ManyToOneType manyToOneType0 = new ManyToOneType(typeFactory_TypeScope0, "where order by !:#$z>/y;xs^|");
      OrdinalParameterDescriptor ordinalParameterDescriptor0 = new OrdinalParameterDescriptor(3618, manyToOneType0, 1122);
      ordinalParameterDescriptorArray0[0] = ordinalParameterDescriptor0;
      XWikiServletRequestStub xWikiServletRequestStub0 = new XWikiServletRequestStub();
      xWikiServletRequestStub0.getHttpServletRequest();
      XWikiContext xWikiContext0 = new XWikiContext();
      xWikiContext0.getResponse();
      XWikiServletResponse xWikiServletResponse0 = new XWikiServletResponse((HttpServletResponse) null);
      ServletWebContext servletWebContext0 = new ServletWebContext((ServletContext) null, (HttpServletRequest) null, xWikiServletResponse0);
      ServletActionContext servletActionContext0 = new ServletActionContext(servletWebContext0);
      ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, servletActionContext0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("iFK8j>h+eo2s}", "iFK8j>h+eo2s}", (SessionImplementor) null, parameterMetadata0);
      Query query0 = collectionFilterImpl0.setFetchSize(1122);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(query0, defaultQuery0);
  }
}
