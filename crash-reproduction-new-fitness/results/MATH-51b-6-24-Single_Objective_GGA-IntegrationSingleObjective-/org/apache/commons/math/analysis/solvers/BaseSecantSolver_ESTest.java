/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:49:44 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseSecantSolver.Method.valueOf("ILLINOIS");
      int int0 = 251;
      QuinticFunction quinticFunction0 = new QuinticFunction();
      double double0 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(251);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      regulaFalsiSolver0.getFunctionValueAccuracy();
      regulaFalsiSolver0.getMax();
      UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
      QuinticFunction quinticFunction1 = new QuinticFunction();
      BaseSecantSolver.Method.valueOf("ILLINOIS");
      quinticFunction0.derivative();
      quinticFunction0.derivative();
      int int1 = 758;
      SincFunction sincFunction0 = new SincFunction();
      SinFunction sinFunction0 = new SinFunction();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction(sincFunction0);
      double double2 = (-2404.982);
      quinticFunction0.derivative();
      // Undeclared exception!
      regulaFalsiSolver0.solve(251, (UnivariateRealFunction) quinticFunction0, (-2404.982), 655.13171424338);
  }
}
