/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 21:30:57 UTC 2021
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.MathArrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class MathArrays_ESTest extends MathArrays_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = (-3612.6316F);
      floatArray0[1] = 35.49F;
      MathArrays.equals(floatArray0, floatArray0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (-3612.6316F);
      doubleArray0[1] = (double) 35.49F;
      MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.INCREASING;
      MathArrays.checkOrder(doubleArray0, mathArrays_OrderDirection0, true);
      MathArrays.distanceInf(doubleArray0, doubleArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      MathArrays.scale((-1262.36722), doubleArray0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-0.25);
      // Undeclared exception!
      MathArrays.linearCombination(doubleArray1, doubleArray1);
  }
}
