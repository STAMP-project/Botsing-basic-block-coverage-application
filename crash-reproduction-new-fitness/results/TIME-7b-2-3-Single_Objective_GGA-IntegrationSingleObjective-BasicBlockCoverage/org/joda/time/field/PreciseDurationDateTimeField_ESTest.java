/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 13:19:48 UTC 2020
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTimeFieldType;
import org.joda.time.LocalTime;
import org.joda.time.MockZone;
import org.joda.time.Months;
import org.joda.time.field.TestPreciseDurationDateTimeField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PreciseDurationDateTimeField_ESTest extends PreciseDurationDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
      Months months0 = Months.TWELVE;
      LocalTime localTime0 = new LocalTime(9223372036854775772L);
      Calendar.getAvailableCalendarTypes();
      Integer integer0 = new Integer((-3515));
      MockZone mockZone0 = new MockZone((-3515), (-3515), (-3515));
      Locale locale0 = Locale.GERMAN;
      DateTimeFieldType.weekOfWeekyear();
      TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMinimumValue((-135L));
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getDurationField();
      // Undeclared exception!
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set((-8L), (-3515));
  }
}
