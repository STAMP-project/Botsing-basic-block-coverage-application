/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:53:54 UTC 2020
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumericEntityUnescaper_ESTest extends NumericEntityUnescaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      String string0 = null;
      char[] charArray0 = new char[19];
      charArray0[1] = '&';
      charArray0[2] = '#';
      CharBuffer.wrap(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      numericEntityUnescaper0.translate((CharSequence) null, (Writer) stringWriter0);
      int int0 = 88;
      StringWriter stringWriter1 = new StringWriter(88);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      // Undeclared exception!
      numericEntityUnescaper0.translate((CharSequence) stringBuffer0);
  }
}
