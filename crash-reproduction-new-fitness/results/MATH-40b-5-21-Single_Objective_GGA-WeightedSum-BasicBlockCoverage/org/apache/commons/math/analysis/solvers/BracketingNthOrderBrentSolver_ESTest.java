/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:58:20 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BracketingNthOrderBrentSolver_ESTest extends BracketingNthOrderBrentSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-1962.9107352729), (-1320.593528), (-1320.593528), 4);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver1 = new BracketingNthOrderBrentSolver();
      bracketingNthOrderBrentSolver1.getStartValue();
      bracketingNthOrderBrentSolver1.getAbsoluteAccuracy();
      bracketingNthOrderBrentSolver0.getFunctionValueAccuracy();
      bracketingNthOrderBrentSolver1.isSequence((-0.0625), 0.0, 1.0E-6);
      bracketingNthOrderBrentSolver1.verifySequence((-0.0625), 1.0E-6, 1471.236321395);
      bracketingNthOrderBrentSolver1.getFunctionValueAccuracy();
      int int0 = (-4599);
      SinFunction sinFunction0 = new SinFunction();
      UnivariateFunction univariateFunction0 = sinFunction0.derivative();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction(univariateFunction0);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver1.solve(4, (UnivariateFunction) monitoredFunction0, (-1908.537), (double) 4, (-1320.593528), allowedSolution0);
  }
}
