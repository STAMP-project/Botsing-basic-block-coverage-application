/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 07:46:13 UTC 2020
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.Listener;
import org.xwiki.rendering.listener.chaining.BlockStateChainingListener;
import org.xwiki.rendering.listener.chaining.ConsecutiveNewLineStateChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;
import org.xwiki.rendering.listener.reference.ResourceReference;
import org.xwiki.rendering.listener.reference.ResourceType;
import org.xwiki.rendering.syntax.Syntax;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractChainingListener_ESTest extends AbstractChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListenerChain listenerChain0 = new ListenerChain();
      ConsecutiveNewLineStateChainingListener consecutiveNewLineStateChainingListener0 = new ConsecutiveNewLineStateChainingListener(listenerChain0);
      listenerChain0.addListener(consecutiveNewLineStateChainingListener0);
      consecutiveNewLineStateChainingListener0.endQuotationLine();
      ListenerChain listenerChain1 = new ListenerChain();
      BlockStateChainingListener blockStateChainingListener0 = new BlockStateChainingListener(listenerChain0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      blockStateChainingListener0.endTableRow(hashMap0);
      consecutiveNewLineStateChainingListener0.endDefinitionDescription();
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain1);
      listenerChain0.addListener(blockStateChainingListener0);
      Syntax syntax0 = Syntax.MARKDOWN_1_0;
      consecutiveNewLineStateChainingListener0.endDefinitionDescription();
      EmptyBlockChainingListener emptyBlockChainingListener1 = new EmptyBlockChainingListener(listenerChain0);
      listenerChain1.addListener(blockStateChainingListener0);
      Syntax syntax1 = Syntax.MARKDOWN_1_0;
      listenerChain0.addListener(emptyBlockChainingListener0);
      Syntax syntax2 = Syntax.MARKDOWN_1_0;
      Syntax syntax3 = Syntax.CONFLUENCE_1_0;
      emptyBlockChainingListener0.onRawText("END_TABLE_HEAD_CELL", syntax3);
      Map<String, String> map0 = Listener.EMPTY_PARAMETERS;
      ResourceType resourceType0 = ResourceType.UNKNOWN;
      ResourceReference resourceReference0 = new ResourceReference("", resourceType0);
      resourceReference0.getParameters();
      Format format0 = Format.BOLD;
      Format format1 = Format.STRIKEDOUT;
      // Undeclared exception!
      consecutiveNewLineStateChainingListener0.endFormat(format1, map0);
  }
}
