/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 04:18:05 UTC 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.ServiceLoader;
import java.util.function.Consumer;
import org.apache.commons.lang3.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.listIterator();
      String string0 = " in an array of ";
      String string1 = "suE.wext.Normalizer";
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      priorityQueue0.stream();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Class<Integer> class0 = Integer.class;
      ServiceLoader<Integer> serviceLoader0 = ServiceLoader.load(class0);
      serviceLoader0.reload();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(consumer0).toString();
      serviceLoader0.forEach(consumer0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) consumer0;
      String string2 = "E?73^";
      StringUtils.join(objectArray0, "E?73^", 6, (-1));
      // Undeclared exception!
      StringUtils.join(objectArray0, "Minimum abbreviation width with offset is 7");
  }
}
