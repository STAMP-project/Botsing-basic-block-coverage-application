/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:23:29 UTC 2020
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.CharSequenceTranslator;
import org.apache.commons.lang3.text.translate.NumericEntityEscaper;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class CharSequenceTranslator_ESTest extends CharSequenceTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[10];
      numericEntityEscaper0.with(charSequenceTranslatorArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[10];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      numericEntityEscaper0.translate((CharSequence) charBuffer0);
      CharBuffer.wrap((CharSequence) "&#0;&#0;&#0;&#0;&#0;&#0;&#0;&#0;&#0;&#0;");
      CharBuffer.wrap(charArray0);
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      NumericEntityUnescaper numericEntityUnescaper1 = new NumericEntityUnescaper();
      NumericEntityUnescaper numericEntityUnescaper2 = new NumericEntityUnescaper();
      CharSequenceTranslator[] charSequenceTranslatorArray1 = new CharSequenceTranslator[7];
      int int0 = 35;
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "&#0;&#0;&#0;&#0;&#0;&#0;&#0;&#0;&#0;&#0;", 9, 35);
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      // Undeclared exception!
      numericEntityUnescaper2.translate((CharSequence) stringBuffer0);
  }
}
