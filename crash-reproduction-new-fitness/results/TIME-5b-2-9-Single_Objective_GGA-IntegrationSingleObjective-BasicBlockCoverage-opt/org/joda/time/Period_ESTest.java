/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:01:57 UTC 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.MutableDateTime;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadableDuration;
import org.joda.time.TestMutableInterval_Basics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone dateTimeZone0 = mock(DateTimeZone.class, new ViolatedAssumptionAnswer());
      MutableDateTime mutableDateTime0 = new MutableDateTime((Object) null, (DateTimeZone) null);
      Period period0 = new Period((ReadableDuration) null, mutableDateTime0);
      period0.toString();
      int int0 = (-4021);
      period0.withYears((-4021));
      period0.withDays((-4021));
      PeriodType periodType0 = PeriodType.yearMonthDay();
      PeriodType periodType1 = periodType0.withHoursRemoved();
      TestMutableInterval_Basics testMutableInterval_Basics0 = new TestMutableInterval_Basics("PT0S");
      TestMutableInterval_Basics.MockInterval testMutableInterval_Basics_MockInterval0 = testMutableInterval_Basics0.new MockInterval();
      Chronology chronology0 = testMutableInterval_Basics_MockInterval0.getChronology();
      Period period1 = new Period((-4021), (-4021), periodType1, chronology0);
      PeriodType periodType2 = periodType0.withYearsRemoved();
      Period period2 = period1.withPeriodType(periodType2);
      // Undeclared exception!
      period2.withYears((-4021));
  }
}
