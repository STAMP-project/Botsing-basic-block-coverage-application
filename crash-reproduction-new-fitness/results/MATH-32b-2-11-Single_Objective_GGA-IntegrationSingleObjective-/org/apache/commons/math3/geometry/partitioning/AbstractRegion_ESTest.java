/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:23:09 UTC 2020
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.Region;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.MINUS_K;
      vector3D0.getNormInf();
      IntervalsSet intervalsSet0 = new IntervalsSet(0.0, 0.0);
      Vector1D vector1D0 = new Vector1D((-3.4028234663852886E38));
      Region.Location region_Location0 = intervalsSet0.checkPoint(vector1D0);
      vector3D0.toString();
      Vector2D vector2D0 = Vector2D.NaN;
      Vector2D vector2D1 = new Vector2D(Double.POSITIVE_INFINITY, vector2D0, (-1576.29), vector2D0, (-1418.228231), vector2D0);
      Line line0 = new Line(vector2D1, vector2D1);
      Line line1 = new Line(line0);
      line1.wholeHyperplane();
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(region_Location0);
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
      polygonsSet0.getTree(true);
      // Undeclared exception!
      polygonsSet0.getSize();
  }
}
