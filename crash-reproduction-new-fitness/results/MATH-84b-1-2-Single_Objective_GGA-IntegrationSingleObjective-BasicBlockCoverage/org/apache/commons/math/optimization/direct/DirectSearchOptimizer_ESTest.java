/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:57:20 UTC 2020
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MultivariateVectorialFunction;
import org.apache.commons.math.optimization.LeastSquaresConverter;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DirectSearchOptimizer_ESTest extends DirectSearchOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1206.5402449152207);
      multiDirectional0.incrementIterationsCounter();
      doubleArray0[1] = (-1910.0);
      multiDirectional0.setMaxIterations((-2145705299));
      multiDirectional0.setMaxEvaluations((-1457));
      doubleArray0[3] = 3461.616276410093;
      LeastSquaresConverter leastSquaresConverter0 = new LeastSquaresConverter((MultivariateVectorialFunction) null, doubleArray0);
      MultiDirectional multiDirectional1 = new MultiDirectional((-795.8142774768398), (-596.20202));
      try { 
        multiDirectional0.incrementIterationsCounter();
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (-2,145,705,299) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
