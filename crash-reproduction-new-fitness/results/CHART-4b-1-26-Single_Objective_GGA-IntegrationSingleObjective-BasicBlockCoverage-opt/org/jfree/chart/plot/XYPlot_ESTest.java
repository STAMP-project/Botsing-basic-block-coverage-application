/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 01 15:14:02 UTC 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          GrayPaintScale grayPaintScale0 = new GrayPaintScale();
          NumberAxis3D numberAxis3D0 = new NumberAxis3D("RAIcTX5w$qPSb.8Y");
          PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, numberAxis3D0);
          AxisLocation axisLocation0 = paintScaleLegend0.getAxisLocation();
          MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
          JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
          ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, false, true);
          PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
          Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
          Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
          Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
          JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
          XYPlot xYPlot0 = new XYPlot(jDBCXYDataset0, numberAxis3D0, numberAxis3D0, (XYItemRenderer) null);
          double double0 = (-525.6605889583);
          xYPlot0.setDomainCrosshairValue((-525.6605889583), false);
          SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
          xYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
          // Undeclared exception!
          xYPlot0.getDataRange(numberAxis3D0);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
