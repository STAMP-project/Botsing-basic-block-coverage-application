/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 10:12:42 UTC 2021
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.block.CenterArrangement;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberAxis_ESTest extends NumberAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3259.2350875244947), (-3259.2350875244947), "Andrea Schneidr");
      Graphics2D graphics2D1 = null;
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-3259.2350875244947), (-3259.2350875244947), true);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      MaskFormatter maskFormatter0 = new MaskFormatter("Andrea Schneidr");
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(maskFormatter0, maskFormatter0);
      VerticalAlignment verticalAlignment0 = VerticalAlignment.CENTER;
      CenterArrangement centerArrangement0 = new CenterArrangement();
      cyclicNumberAxis0.getMarkerBand();
      Boolean boolean0 = Boolean.FALSE;
      MeterPlot meterPlot0 = new MeterPlot();
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(cyclicNumberAxis0);
      axisChangeEvent0.getChart();
      Color[] colorArray0 = new Color[8];
      Color color0 = Color.green;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      colorArray0[7] = colorArray0[1];
      chartRenderingInfo0.getChartArea();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      XYPlot xYPlot0 = new XYPlot(defaultTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, (XYItemRenderer) null);
  }
}
