/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:05:46 UTC 2021
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor1 = new DefaultRealMatrixPreservingVisitor();
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor2 = new DefaultRealMatrixPreservingVisitor();
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor3 = new DefaultRealMatrixPreservingVisitor();
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor4 = new DefaultRealMatrixPreservingVisitor();
      int int0 = 0;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2136.7446299716894);
      doubleArray0[1] = (-2136.7446299716894);
      doubleArray0[2] = (-2269.7286);
      doubleArray0[3] = (-1106337.3409171246);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-1106336.3708686072);
      doubleArray1[1] = (-5.621821423068884E7);
      doubleArray1[2] = 1014.0071699957198;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1106337.3409171246));
  }
}
