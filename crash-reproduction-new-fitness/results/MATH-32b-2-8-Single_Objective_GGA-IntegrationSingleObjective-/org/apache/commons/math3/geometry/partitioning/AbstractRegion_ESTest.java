/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:20:06 UTC 2020
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet();
      Boolean boolean0 = Boolean.TRUE;
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(boolean0);
      Vector2D vector2D0 = Vector2D.POSITIVE_INFINITY;
      Vector2D vector2D1 = new Vector2D(1.34217729E8, vector2D0, (-1149.226526), vector2D0);
      SubLine subLine0 = new SubLine(vector2D1, vector2D0);
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.split(subLine0);
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);
      polygonsSet0.getSize();
      PolyhedronsSet polyhedronsSet0 = new PolyhedronsSet();
      PolygonsSet polygonsSet2 = new PolygonsSet();
      polygonsSet2.getTree(false);
      // Undeclared exception!
      polygonsSet1.getSize();
  }
}
