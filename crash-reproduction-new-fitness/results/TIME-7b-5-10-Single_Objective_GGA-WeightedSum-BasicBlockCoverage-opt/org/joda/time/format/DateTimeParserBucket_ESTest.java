/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 06:36:41 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Period;
import org.joda.time.ReadablePeriod;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.JulianChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.joda.time.tz.FixedDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeParserBucket.SavedField[] dateTimeParserBucket_SavedFieldArray0 = new DateTimeParserBucket.SavedField[8];
      JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();
      Locale locale0 = Locale.GERMAN;
      Integer.getInteger("");
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(0L, julianChronology0, locale0, (Integer) null, 596);
      Period period0 = new Period((-177), 2000, 66, (-177));
      julianChronology0.add((ReadablePeriod) period0, (long) 596, 66);
      Locale locale1 = Locale.US;
      DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
      FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)dateTimeParserBucket_SavedState0.iZone;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) fixedDateTimeZone0);
      Chronology chronology0 = buddhistChronology0.withZone(fixedDateTimeZone0);
      Integer integer0 = new Integer(2000);
      DateTimeParserBucket dateTimeParserBucket1 = new DateTimeParserBucket(0, chronology0, locale1, integer0, 8);
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      dateTimeParserBucket1.saveField(dateTimeFieldType0, (-1));
      dateTimeParserBucket1.getLocale();
      dateTimeParserBucket0.saveState();
      dateTimeParserBucket0.saveState();
      dateTimeParserBucket0.saveState();
      // Undeclared exception!
      dateTimeParserBucket1.computeMillis(true, "");
  }
}
