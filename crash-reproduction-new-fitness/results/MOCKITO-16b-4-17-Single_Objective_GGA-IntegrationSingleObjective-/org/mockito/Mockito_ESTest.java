/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:58:33 UTC 2020
 */

package org.mockito;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ClientInfoStatus;
import java.sql.DataTruncation;
import java.sql.SQLClientInfoException;
import java.sql.SQLWarning;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.Mockito;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Mockito_ESTest extends Mockito_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Mockito.never();
      HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
      ClientInfoStatus clientInfoStatus0 = ClientInfoStatus.REASON_VALUE_INVALID;
      hashMap0.putIfAbsent("    //incorrect:", clientInfoStatus0);
      SQLWarning sQLWarning0 = new SQLWarning();
      DataTruncation dataTruncation0 = new DataTruncation(6, false, false, 6, 460, sQLWarning0);
      sQLWarning0.setNextWarning(dataTruncation0);
      SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException("4{BB~>V", "4{BB~>V", hashMap0, sQLWarning0);
      // Undeclared exception!
      Mockito.when("Kse^ofkB j<[yOK1 y}");
  }
}
