/*
 * This file was automatically generated by EvoSuite
 * Fri May 15 00:06:48 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTime;
import org.joda.time.ReadableInstant;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeParser;
import org.joda.time.format.DateTimePrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());
      DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(dateTimeParser0).toString();
      doReturn(0, 0).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class) , anyString() , anyInt());
      DateTimePrinter dateTimePrinter1 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dateTimePrinter1).toString();
      doReturn(0).when(dateTimePrinter1).estimatePrintedLength();
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter1, dateTimeParser0);
      dateTimeFormatter0.getChronology();
      Integer integer0 = new Integer((-4052));
      DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);
      DateTime dateTime0 = dateTimeFormatter1.parseDateTime("");
      dateTimeFormatter0.getDefaultYear();
      dateTimeFormatter1.getParser();
      dateTimeFormatter1.print((ReadableInstant) dateTime0);
      dateTimeFormatter0.getParser();
      int int0 = (-1);
      DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear((-1));
      DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear((-4052));
      dateTimeFormatter3.getLocale();
      // Undeclared exception!
      dateTimeFormatter1.parseDateTime("y)");
  }
}
