/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 13:22:53 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeZone_ESTest extends DateTimeZone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone((TimeZone) null);
      dateTimeZone0.getID();
      dateTimeZone0.adjustOffset(1700L, false);
      dateTimeZone0.getName(1700L, (Locale) null);
      DateTimeZone.getAvailableIDs();
      dateTimeZone0.getOffsetFromLocal(1700L);
      int int0 = 2;
      DateTimeZone dateTimeZone1 = DateTimeZone.forOffsetHours(2);
      dateTimeZone0.getMillisKeepLocal(dateTimeZone1, 1700L);
      int int1 = 352831696;
      try { 
        DateTimeZone.forOffsetHoursMinutes(2, 352831696);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Minutes out of range: 352831696
         //
         verifyException("org.joda.time.DateTimeZone", e);
      }
  }
}
