/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 09:47:11 UTC 2021
 */

package org.apache.commons.math.estimation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.estimation.EstimatedParameter;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest;
import org.apache.commons.math.estimation.SimpleEstimationProblem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractEstimator_ESTest extends AbstractEstimator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
      simpleEstimationProblem0.getMeasurements();
      EstimatedParameter[] estimatedParameterArray0 = new EstimatedParameter[4];
      simpleEstimationProblem0.getMeasurements();
      EstimatedParameter estimatedParameter0 = new EstimatedParameter("&cctx`~,U+eB~g$''h)", (-185.7505256545234));
      estimatedParameterArray0[1] = estimatedParameter0;
      EstimatedParameter estimatedParameter1 = new EstimatedParameter(estimatedParameter0);
      estimatedParameterArray0[2] = estimatedParameter1;
      estimatedParameter1.setEstimate(1846.058627377099);
      EstimatedParameter estimatedParameter2 = new EstimatedParameter(estimatedParameter1);
      estimatedParameterArray0[3] = estimatedParameter2;
      LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest("&cctx`~,U+eB~g$''h)");
      LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addPoint((-483.6038806606), 2458.23856, 0.0);
      LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
      levenbergMarquardtEstimator0.estimate(simpleEstimationProblem0);
      // Undeclared exception!
      levenbergMarquardtEstimator0.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
  }
}
