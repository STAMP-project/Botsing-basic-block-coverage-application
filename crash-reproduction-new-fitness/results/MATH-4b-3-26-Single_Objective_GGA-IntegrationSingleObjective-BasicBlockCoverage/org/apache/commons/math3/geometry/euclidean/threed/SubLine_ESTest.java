/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:31:04 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;
import org.apache.commons.math3.geometry.euclidean.threed.Segment;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Segment segment0 = mock(Segment.class, new ViolatedAssumptionAnswer());
      Vector3D vector3D0 = Vector3D.NaN;
      vector3D0.getNormInf();
      RotationOrder rotationOrder0 = RotationOrder.YXZ;
      rotationOrder0.getA1();
      vector3D0.getNormInf();
      Plane plane0 = new Plane(vector3D0);
      Plane plane1 = new Plane(plane0);
      plane0.contains(vector3D0);
      plane0.isSimilarTo(plane1);
      Line line0 = plane0.intersection(plane0);
      SubLine subLine0 = new SubLine(vector3D0, vector3D0);
      subLine0.getSegments();
      SubLine subLine1 = line0.wholeLine();
      // Undeclared exception!
      subLine0.intersection(subLine1, false);
  }
}
