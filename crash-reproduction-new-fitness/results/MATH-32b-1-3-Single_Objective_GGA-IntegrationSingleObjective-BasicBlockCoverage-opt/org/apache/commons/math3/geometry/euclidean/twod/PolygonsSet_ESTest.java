/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 10:46:12 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.Hyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean2D> bSPTree0 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      Hyperplane<Euclidean2D> hyperplane0 = (Hyperplane<Euclidean2D>) mock(Hyperplane.class, new ViolatedAssumptionAnswer());
      Hyperplane<Euclidean2D> hyperplane1 = (Hyperplane<Euclidean2D>) mock(Hyperplane.class, new ViolatedAssumptionAnswer());
      Vector2D vector2D0 = Vector2D.POSITIVE_INFINITY;
      SubLine subLine0 = new SubLine(vector2D0, vector2D0);
      BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(vector2D0);
      Vector2D vector2D1 = Vector2D.ZERO;
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(subLine0, bSPTree1, bSPTree1, vector2D1);
      BSPTree<Euclidean2D> bSPTree3 = bSPTree2.getPlus();
      bSPTree3.getMinus();
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree3);
      // Undeclared exception!
      polygonsSet0.getSize();
  }
}
