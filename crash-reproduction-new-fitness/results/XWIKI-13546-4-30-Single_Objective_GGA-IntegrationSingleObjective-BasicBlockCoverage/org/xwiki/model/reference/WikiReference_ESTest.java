/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 18:13:58 UTC 2020
 */

package org.xwiki.model.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Serializable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.infinispan.cache.impl.CacheImpl;
import org.infinispan.cache.impl.DecoratedCache;
import org.infinispan.context.Flag;
import org.junit.runner.RunWith;
import org.xwiki.model.EntityType;
import org.xwiki.model.reference.EntityReference;
import org.xwiki.model.reference.WikiReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class WikiReference_ESTest extends WikiReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WikiReference wikiReference0 = new WikiReference("FJXtfRF+");
      EntityType entityType0 = EntityType.WIKI;
      EntityReference entityReference0 = wikiReference0.extractFirstReference(entityType0);
      wikiReference0.hasParent(entityReference0);
      WikiReference wikiReference1 = new WikiReference("FJXtfRF+");
      EntityType entityType1 = EntityType.WIKI;
      CacheImpl<String, Serializable> cacheImpl0 = new CacheImpl<String, Serializable>("");
      Flag[] flagArray0 = new Flag[5];
      Flag flag0 = Flag.PUT_FOR_X_SITE_STATE_TRANSFER;
      flagArray0[0] = flag0;
      Flag flag1 = Flag.SKIP_SHARED_CACHE_STORE;
      flagArray0[1] = flag1;
      Flag flag2 = Flag.FORCE_WRITE_LOCK;
      flagArray0[2] = flag2;
      Flag flag3 = Flag.SKIP_REMOTE_LOOKUP;
      flagArray0[3] = flag3;
      Flag flag4 = Flag.FORCE_ASYNCHRONOUS;
      flagArray0[4] = flag4;
      DecoratedCache<String, Serializable> decoratedCache0 = new DecoratedCache<String, Serializable>(cacheImpl0, flagArray0);
      EntityReference entityReference1 = new EntityReference((String) null, entityType1, entityReference0, decoratedCache0);
  }
}
