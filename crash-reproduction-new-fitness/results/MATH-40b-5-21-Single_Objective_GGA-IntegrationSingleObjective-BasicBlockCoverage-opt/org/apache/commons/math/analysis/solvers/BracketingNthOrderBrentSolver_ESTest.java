/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:32:17 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BracketingNthOrderBrentSolver_ESTest extends BracketingNthOrderBrentSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      UnivariateFunction univariateFunction0 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn((double)3, 0.0).when(univariateFunction0).value(anyDouble());
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      bracketingNthOrderBrentSolver0.solve(3, univariateFunction0, (-850.65), (double) 3, 0.0, allowedSolution0);
      bracketingNthOrderBrentSolver0.getMin();
      UnivariateFunction univariateFunction1 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-850.65), 0.0).when(univariateFunction1).value(anyDouble());
      bracketingNthOrderBrentSolver0.solve(4, univariateFunction1, 590.502429400601);
      Expm1Function expm1Function0 = new Expm1Function();
      UnivariateFunction univariateFunction2 = expm1Function0.derivative();
      bracketingNthOrderBrentSolver0.solve(1076, univariateFunction2, (-850.65));
      bracketingNthOrderBrentSolver0.getStartValue();
      Expm1Function expm1Function1 = new Expm1Function();
      AllowedSolution allowedSolution1 = AllowedSolution.ABOVE_SIDE;
      Expm1Function expm1Function2 = new Expm1Function();
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(3, (UnivariateFunction) expm1Function1, (-850.65), 888.971, 1.0, allowedSolution1);
  }
}
