/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 06:58:01 UTC 2021
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.MaxIterationsExceededException;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-1029.9356882425268), 931.0300903271, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      StepProblem stepProblem0 = new StepProblem((-1246.0353357466045), (-1246.0353357466045), (-0.0711277704));
      double[] doubleArray0 = new double[11];
      stepProblem0.eventOccurred((-0.0711277704), doubleArray0, false);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      dummyStepInterpolator0.storeTime((-0.0711277704));
      stepProblem0.setRate(2);
      double double0 = 1850.145155271;
      EventState eventState0 = new EventState(eventHandler0, 2, 1850.145155271, 2);
      EventState eventState1 = new EventState(stepProblem0, (-0.0711277704), 10.0178749274099, 2);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState1.stepAccepted(484.739254492497, doubleArray0);
      eventState0.evaluateStep(dummyStepInterpolator0);
      try { 
        eventState1.evaluateStep(dummyStepInterpolator0);
        fail("Expecting exception: MaxIterationsExceededException");
      
      } catch(MaxIterationsExceededException e) {
         //
         // Maximal number of iterations (2) exceeded
         //
         verifyException("org.apache.commons.math.analysis.solvers.BrentSolver", e);
      }
  }
}
