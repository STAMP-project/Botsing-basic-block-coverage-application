/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 17:12:44 UTC 2020
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import java.util.concurrent.PriorityBlockingQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Session;
import org.infinispan.eviction.EvictionStrategy;
import org.junit.runner.RunWith;
import org.slf4j.event.SubstituteLoggingEvent;
import org.slf4j.helpers.SubstituteLogger;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.context.Execution;
import org.xwiki.query.Query;
import org.xwiki.query.QueryFilter;
import org.xwiki.query.internal.CountDocumentFilter;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.query.internal.ScriptQuery;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor.isSafeSelect("");
      HqlQueryExecutor.isSafeSelect("query.hql.progress.execute");
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      HqlQueryExecutor.isSafeSelect("");
      DefaultQuery defaultQuery0 = new DefaultQuery("^f<yZSqY<3M\"_/L$Qul", "xwikicontext", hqlQueryExecutor0);
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
      EvictionStrategy evictionStrategy0 = EvictionStrategy.NONE;
      ScriptQuery scriptQuery0 = new ScriptQuery(defaultQuery0, embeddableComponentManager0);
      Query query0 = defaultQuery0.bindValue("query.hql.progress.execute", (Object) scriptQuery0);
      ScriptQuery scriptQuery1 = new ScriptQuery(query0, embeddableComponentManager0);
      CountDocumentFilter countDocumentFilter0 = new CountDocumentFilter();
      PriorityBlockingQueue<SubstituteLoggingEvent> priorityBlockingQueue0 = new PriorityBlockingQueue<SubstituteLoggingEvent>();
      SubstituteLogger substituteLogger0 = new SubstituteLogger("Cz6JXQS1", priorityBlockingQueue0, false);
      Injector.inject(countDocumentFilter0, (Class<?>) CountDocumentFilter.class, "logger", (Object) substituteLogger0);
      Injector.validateBean(countDocumentFilter0, (Class<?>) CountDocumentFilter.class);
      scriptQuery1.addFilter((QueryFilter) countDocumentFilter0);
      Query query1 = defaultQuery0.setWiki("xwikicontext");
      // Undeclared exception!
      hqlQueryExecutor0.createHibernateQuery((Session) null, query1);
  }
}
