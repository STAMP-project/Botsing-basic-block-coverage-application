/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:31:39 UTC 2020
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      long[] longArray0 = new long[5];
      longArray0[0] = (-3274L);
      longArray0[1] = 2764L;
      longArray0[2] = (-1420L);
      longArray0[3] = 0L;
      longArray0[4] = 0L;
      NumberUtils.max(longArray0);
      String string0 = "8Q`";
      NumberUtils.toFloat("8Q`", (-317.1185F));
      NumberUtils.min((short)0, (short)0, (short)0);
      try { 
        NumberUtils.createNumber("FI}M!OFs%f");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // FI}M!OFs%f is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
