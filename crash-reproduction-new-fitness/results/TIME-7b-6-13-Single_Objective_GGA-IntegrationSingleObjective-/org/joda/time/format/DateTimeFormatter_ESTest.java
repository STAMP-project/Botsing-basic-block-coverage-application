/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 13:26:09 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DurationField;
import org.joda.time.MutableDateTime;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.field.UnsupportedDateTimeField;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      BuddhistChronology buddhistChronology1 = BuddhistChronology.getInstance();
      DurationField durationField0 = buddhistChronology0.centuries();
      MutableDateTime mutableDateTime0 = MutableDateTime.now();
      BuddhistChronology buddhistChronology2 = BuddhistChronology.getInstance();
      BuddhistChronology buddhistChronology3 = BuddhistChronology.getInstance();
      BuddhistChronology buddhistChronology4 = BuddhistChronology.getInstance();
      MutableDateTime mutableDateTime1 = MutableDateTime.now();
      BuddhistChronology.getInstance();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
      mutableDateTime1.toMutableDateTimeISO();
      UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);
      BuddhistChronology buddhistChronology5 = BuddhistChronology.getInstance();
      Locale locale0 = Locale.CHINESE;
      Integer integer0 = new Integer(44);
      Integer.remainderUnsigned(44, 4);
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(15046L, buddhistChronology4, locale0, integer0, (-292275048));
      dateTimeParserBucket0.getZone();
      buddhistChronology3.equals(buddhistChronology2);
      buddhistChronology5.getZone();
      buddhistChronology2.toString();
      dateTimeFieldType0.isSupported(buddhistChronology1);
      dateTimeFieldType0.getField(buddhistChronology3);
      dateTimeFieldType0.isSupported(buddhistChronology2);
      DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 44, true);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_FixedNumber0, dateTimeFormatterBuilder_FixedNumber0);
      // Undeclared exception!
      dateTimeFormatter0.parseInto(mutableDateTime0, "/K?ml#1v72gPSK!", 8);
  }
}
