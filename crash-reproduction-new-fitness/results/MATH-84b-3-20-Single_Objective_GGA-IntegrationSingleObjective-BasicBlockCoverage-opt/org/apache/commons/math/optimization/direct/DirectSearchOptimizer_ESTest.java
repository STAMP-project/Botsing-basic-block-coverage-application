/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 06:59:47 UTC 2021
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.apache.commons.math.analysis.MultivariateRealFunction;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.apache.commons.math.optimization.direct.NelderMead;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DirectSearchOptimizer_ESTest extends DirectSearchOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Comparator<RealPointValuePair> comparator0 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      MultivariateRealFunction multivariateRealFunction0 = mock(MultivariateRealFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(multivariateRealFunction0).value(any(double[].class));
      NelderMead nelderMead0 = new NelderMead(1502.703734742, 1502.703734742, 2634.0552, 4128.5601012);
      int int0 = 4543;
      nelderMead0.setMaxIterations(4543);
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[9];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2634.0552;
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, 4128.5601012);
      realPointValuePairArray0[0] = realPointValuePair0;
      RealPointValuePair realPointValuePair1 = new RealPointValuePair(doubleArray0, 2634.0552);
      realPointValuePairArray0[1] = realPointValuePair1;
      RealPointValuePair realPointValuePair2 = new RealPointValuePair(doubleArray0, 0.0235, false);
      realPointValuePairArray0[2] = realPointValuePair2;
      RealPointValuePair realPointValuePair3 = new RealPointValuePair(doubleArray0, 0.0235);
      realPointValuePairArray0[3] = realPointValuePair3;
      RealPointValuePair realPointValuePair4 = new RealPointValuePair(doubleArray0, 4543, false);
      realPointValuePairArray0[4] = realPointValuePair4;
      MultiDirectional multiDirectional0 = new MultiDirectional();
      GoalType goalType0 = GoalType.MAXIMIZE;
      MultiDirectional multiDirectional1 = new MultiDirectional();
      multiDirectional1.setMaxIterations(25);
      try { 
        multiDirectional1.optimize(multivariateRealFunction0, goalType0, doubleArray0);
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (25) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
