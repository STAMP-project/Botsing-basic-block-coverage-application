/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:54:06 UTC 2020
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "";
      NumberUtils.toByte("");
      String string1 = "I>\\RZO*v}=bIlg\\g";
      NumberUtils.toLong("I>RZO*v}=bIlgg", (long) (byte)0);
      NumberUtils.toShort("", (short) (byte)0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)0;
      intArray0[1] = 0;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = (int) (short)0;
      intArray0[4] = (int) (short)0;
      NumberUtils.min(intArray0);
      NumberUtils.min((-637.7647569), 0.0, 0.0);
      NumberUtils.min(intArray0);
      try { 
        NumberUtils.createNumber("I>RZO*v}=bIlgg");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // I>RZO*v}=bIlgg is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
