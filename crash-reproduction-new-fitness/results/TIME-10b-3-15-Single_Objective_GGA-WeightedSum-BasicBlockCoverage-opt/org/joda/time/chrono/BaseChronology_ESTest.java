/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 00:08:01 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDateTime;
import org.joda.time.ReadablePartial;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.GJChronology;
import org.joda.time.tz.FixedDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.UTC;
      LocalDateTime localDateTime0 = new LocalDateTime((-2507L), (DateTimeZone) fixedDateTimeZone0);
      long long0 = 100000000000000000L;
      buddhistChronology0.get((ReadablePartial) localDateTime0, 100000000000000000L);
      GJChronology.getInstance((DateTimeZone) fixedDateTimeZone0);
      buddhistChronology0.secondOfMinute();
      buddhistChronology0.set(localDateTime0, (-1383L));
      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
      buddhistChronology0.hourOfDay();
      copticChronology0.dayOfWeek();
      buddhistChronology0.weekOfWeekyear();
      // Undeclared exception!
      copticChronology0.set(localDateTime0, (-1001L));
  }
}
