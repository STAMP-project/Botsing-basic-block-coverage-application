/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 16:34:34 UTC 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.MockNullZoneChronology;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadableInstant;
import org.joda.time.Weeks;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Period period0 = new Period((ReadableInstant) null, (ReadableInstant) null);
      Weeks weeks0 = period0.toStandardWeeks();
      int int0 = (-2476);
      Period period1 = period0.plusMonths((-2476));
      Period period2 = period1.plus(weeks0);
      period2.withMillis((-2476));
      PeriodType periodType0 = mock(PeriodType.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(periodType0).size();
      MockNullZoneChronology mockNullZoneChronology0 = new MockNullZoneChronology();
      Period period3 = new Period(5647L, periodType0, (Chronology) mockNullZoneChronology0);
      period1.plusMinutes((-2476));
      PeriodType periodType1 = PeriodType.seconds();
      // Undeclared exception!
      period1.normalizedStandard(periodType1);
  }
}
