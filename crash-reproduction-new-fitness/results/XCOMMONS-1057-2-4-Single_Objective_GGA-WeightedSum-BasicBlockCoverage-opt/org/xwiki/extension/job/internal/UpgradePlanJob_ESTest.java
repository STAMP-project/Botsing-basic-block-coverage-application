/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 22:41:27 UTC 2021
 */

package org.xwiki.extension.job.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.slf4j.helpers.NOPLogger;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.job.internal.AbstractInstallPlanJob;
import org.xwiki.extension.job.internal.UpgradePlanJob;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.repository.ExtensionRepositoryManager;
import org.xwiki.extension.repository.internal.core.DefaultCoreExtensionRepository;
import org.xwiki.extension.test.ConfigurableDefaultCoreExtensionRepository;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class UpgradePlanJob_ESTest extends UpgradePlanJob_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UpgradePlanJob upgradePlanJob0 = new UpgradePlanJob();
      ConfigurableDefaultCoreExtensionRepository configurableDefaultCoreExtensionRepository0 = new ConfigurableDefaultCoreExtensionRepository();
      NOPLogger nOPLogger0 = NOPLogger.NOP_LOGGER;
      Injector.inject(configurableDefaultCoreExtensionRepository0, (Class<?>) DefaultCoreExtensionRepository.class, "logger", (Object) nOPLogger0);
      ExtensionRepositoryManager extensionRepositoryManager0 = upgradePlanJob0.repositoryManager;
      upgradePlanJob0.repositoryManager = null;
      ExtensionRepositoryManager extensionRepositoryManager1 = upgradePlanJob0.repositoryManager;
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      upgradePlanJob0.extensionTree = abstractInstallPlanJob_ModifableExtensionPlanTree0;
      ExtensionPlanNode extensionPlanNode0 = mock(ExtensionPlanNode.class, new ViolatedAssumptionAnswer());
      abstractInstallPlanJob_ModifableExtensionPlanTree0.add(extensionPlanNode0);
      Injector.inject(configurableDefaultCoreExtensionRepository0, (Class<?>) DefaultCoreExtensionRepository.class, "repositoryManager", (Object) null);
      upgradePlanJob0.getRequest();
      HashMap<ExtensionId, Collection<String>> hashMap0 = new HashMap<ExtensionId, Collection<String>>();
      ExtensionId extensionId0 = new ExtensionId("", "");
      extensionId0.toString();
      upgradePlanJob0.addExtensionToProcess(hashMap0, extensionId0, "");
      String string0 = null;
      ExtensionId extensionId1 = new ExtensionId((String) null);
      // Undeclared exception!
      upgradePlanJob0.tryInstallExtension(extensionId1, (String) null);
  }
}
