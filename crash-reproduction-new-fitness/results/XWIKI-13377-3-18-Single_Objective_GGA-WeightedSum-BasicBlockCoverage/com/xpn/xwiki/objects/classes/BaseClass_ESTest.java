/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 18:19:28 UTC 2020
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.classes.BaseClass;
import com.xpn.xwiki.objects.meta.DBListMetaClass;
import com.xpn.xwiki.objects.meta.DBTreeListMetaClass;
import com.xpn.xwiki.objects.meta.GroupsMetaClass;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseClass baseClass0 = new BaseClass();
      int int0 = (-2034607885);
      baseClass0.addBooleanField("T%8;,2=%", "", "");
      baseClass0.addUsersField("", "T%8;,2=%", (-2034607885));
      baseClass0.hasCustomMapping();
      String string0 = "";
      baseClass0.addTextField("", "T%8;,2=%", (-2034607885));
      String string1 = null;
      ConcurrentHashMap<String, DBTreeListMetaClass> concurrentHashMap0 = new ConcurrentHashMap<String, DBTreeListMetaClass>();
      DBTreeListMetaClass dBTreeListMetaClass0 = new DBTreeListMetaClass();
      dBTreeListMetaClass0.addEmailField("", "Exception trying to create Reference.", 3);
      concurrentHashMap0.put("validationMessage", dBTreeListMetaClass0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      concurrentHashMap0.forEachKey(944L, consumer0);
      Consumer<DBListMetaClass> consumer1 = (Consumer<DBListMetaClass>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      concurrentHashMap0.forEachValue((-2789L), consumer1);
      GroupsMetaClass groupsMetaClass0 = new GroupsMetaClass();
      // Undeclared exception!
      groupsMetaClass0.fromMap((Map<String, ?>) concurrentHashMap0, (BaseCollection) baseClass0);
  }
}
