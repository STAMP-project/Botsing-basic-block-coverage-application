/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:34:10 UTC 2020
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils.toFloat("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)100;
      NumberUtils.max(byteArray0);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (byte)1;
      NumberUtils.max(shortArray0);
      NumberUtils.max(shortArray0);
      NumberUtils.max((long) (short)1, (-2036L), (long) (short)1);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (byte)100;
      NumberUtils.max(floatArray0);
      NumberUtils.toInt("", (int) (short)1);
      String string0 = "FX";
      try { 
        NumberUtils.createNumber("FX");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // FX is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
