/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 04:23:06 UTC 2021
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      long long0 = 0L;
      NumberUtils.max(0L, 0L, 0L);
      NumberUtils.min((byte) (-25), (byte) (-25), (byte) (-25));
      NumberUtils.max((double) (byte) (-25), 484.7210538545544, (double) 0L);
      double double0 = 1.0;
      NumberUtils.min((double) (byte) (-25), 484.7210538545544, 1.0);
      String string0 = "+1{1^n/o[S\"/i_k";
      try { 
        NumberUtils.createNumber("+1{1^n/o[S\"/i_k");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // +1{1^n/o[S\"/i_k is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
