/*
 * This file was automatically generated by EvoSuite
 * Fri May 15 12:26:54 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTime;
import org.joda.time.DateTimeFieldType;
import org.joda.time.MutableDateTime;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CopticChronology.getInstance();
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      CopticChronology copticChronology1 = CopticChronology.getInstance();
      CopticChronology copticChronology2 = CopticChronology.getInstance();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      CopticChronology.getInstance();
      MutableDateTime mutableDateTime0 = MutableDateTime.now((Chronology) copticChronology2);
      DateTime dateTime0 = DateTime.now((Chronology) copticChronology0);
      mutableDateTime0.isEqual(dateTime0);
      CopticChronology copticChronology3 = CopticChronology.getInstance();
      DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 30, true);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_FixedNumber0, dateTimeFormatterBuilder_FixedNumber0);
      MutableDateTime mutableDateTime1 = MutableDateTime.now((Chronology) copticChronology1);
      dateTimeFieldType0.getField(copticChronology3);
      DateTime.now((Chronology) copticChronology2);
      mutableDateTime1.setDate((long) 1);
      mutableDateTime0.toString();
      // Undeclared exception!
      dateTimeFormatter0.parseInto(mutableDateTime0, "1736-09-07T12:26:53.652Z", 1);
  }
}
