/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 22:26:25 UTC 2020
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.ChiSquaredDistributionImpl;
import org.apache.commons.math.distribution.GammaDistributionImpl;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChiSquaredDistributionImpl chiSquaredDistributionImpl0 = new ChiSquaredDistributionImpl(1.7976931348623157E308);
      Double double0 = new Double(1918.3764861);
      chiSquaredDistributionImpl0.density(double0);
      chiSquaredDistributionImpl0.getDomainLowerBound(1918.3764861);
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      GammaDistributionImpl gammaDistributionImpl0 = new GammaDistributionImpl(Double.NaN, 1918.3764861);
      ChiSquaredDistributionImpl chiSquaredDistributionImpl1 = new ChiSquaredDistributionImpl(1.0E-323, gammaDistributionImpl0);
      // Undeclared exception!
      chiSquaredDistributionImpl1.inverseCumulativeProbability(Double.NaN);
  }
}
