/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 09:06:02 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import com.xpn.xwiki.web.XWikiServletRequestStub;
import javax.inject.Provider;
import javax.servlet.ServletContext;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.chain.contexts.ServletActionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.CacheMode;
import org.hibernate.Query;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.junit.runner.RunWith;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Provider<EmbeddableComponentManager> provider0 = (Provider<EmbeddableComponentManager>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider0);
      boolean boolean0 = new Boolean("m}j8cM-(^zdZlu2p!a");
      HqlQueryExecutor hqlQueryExecutor1 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager1 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      DefaultQuery defaultQuery0 = new DefaultQuery("7$V2x0EP", (String) null, hqlQueryExecutor0);
      defaultQuery0.bindValue((String) null, (Object) hqlQueryExecutor1);
      defaultQuery0.checkCurrentAuthor(false);
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      XWikiServletRequestStub xWikiServletRequestStub0 = new XWikiServletRequestStub();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(xWikiServletRequestStub0);
      servletRequestWrapper0.getServletContext();
      XWikiContext xWikiContext0 = new XWikiContext();
      xWikiContext0.getResponse();
      ServletActionContext servletActionContext0 = new ServletActionContext((ServletContext) null, xWikiServletRequestStub0, (HttpServletResponse) null);
      ParameterMetadata parameterMetadata0 = new ParameterMetadata((OrdinalParameterDescriptor[]) null, servletActionContext0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("function takes no arguments: ", "VizEC", sessionImplementor0, parameterMetadata0);
      CacheMode cacheMode0 = CacheMode.GET;
      collectionFilterImpl0.setCacheMode(cacheMode0);
      Query query0 = collectionFilterImpl0.setReadOnly(true);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(query0, defaultQuery0);
  }
}
