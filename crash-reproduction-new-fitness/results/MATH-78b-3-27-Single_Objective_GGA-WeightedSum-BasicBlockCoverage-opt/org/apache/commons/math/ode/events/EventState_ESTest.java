/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 22:28:57 UTC 2021
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventState eventState0 = new EventState(eventHandler0, (-1328), (-10.0), (-1328));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-10.0);
      eventState0.reset((-2397.0), doubleArray0);
      double[] doubleArray1 = new double[10];
      StepProblem stepProblem0 = new StepProblem((-99.76590403), (-1328), (-2397.0));
      EventState eventState1 = new EventState(stepProblem0, (-1328), (-1328), (-1328));
      StepProblem stepProblem1 = new StepProblem((-99.76590403), (-1328), (-10.0));
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray1, false);
      dummyStepInterpolator0.copy();
      eventState1.evaluateStep(dummyStepInterpolator0);
      double[] doubleArray2 = dummyStepInterpolator0.getInterpolatedDerivatives();
      stepProblem0.setRate((-10.0));
      dummyStepInterpolator0.storeTime(2159.35061701);
      eventState1.stepAccepted(2394.2146231497704, doubleArray2);
      double[] doubleArray3 = dummyStepInterpolator0.getInterpolatedDerivatives();
      stepProblem0.setRate((-1019.07656));
      eventState1.stepAccepted((-10.0), doubleArray3);
      EventState eventState2 = new EventState(stepProblem0, 6.0, 416, (-2826));
      eventState1.getMaxCheckInterval();
      EventState eventState3 = new EventState(stepProblem1, 416, (-1328), (-2826));
      eventState3.stop();
      DummyStepInterpolator dummyStepInterpolator1 = new DummyStepInterpolator(dummyStepInterpolator0);
      // Undeclared exception!
      eventState1.evaluateStep(dummyStepInterpolator1);
  }
}
