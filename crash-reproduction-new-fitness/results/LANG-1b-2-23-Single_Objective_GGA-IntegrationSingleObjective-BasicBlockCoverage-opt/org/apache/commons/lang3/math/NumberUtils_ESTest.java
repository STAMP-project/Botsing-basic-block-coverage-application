/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 04:11:56 UTC 2021
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils.isDigits("$t^;-Ff");
      NumberUtils.toInt("0XKu|)_", 2302);
      double[] doubleArray0 = new double[11];
      doubleArray0[1] = (double) (-5L);
      doubleArray0[3] = (double) (-5L);
      NumberUtils.max(doubleArray0);
      NumberUtils.toFloat("", 1.0F);
      NumberUtils.min((short)4994, (short) (-1051), (short) (-705));
      float[] floatArray0 = new float[7];
      floatArray0[0] = 1.0F;
      floatArray0[2] = 1.0F;
      floatArray0[4] = (float) (short) (-1051);
      floatArray0[5] = (float) (short) (-1051);
      Float float0 = new Float((double) 2302);
      NumberUtils.createBigDecimal((String) null);
      Float float1 = NumberUtils.FLOAT_MINUS_ONE;
      NumberUtils.min((byte)90, (byte)11, (byte)11);
      try { 
        NumberUtils.createNumber("#9(C");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"9(C\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
