/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 21:42:04 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      SincFunction sincFunction0 = new SincFunction();
      SincFunction sincFunction1 = new SincFunction();
      double double0 = (-2922.0);
      double double1 = 0.0;
      SecantSolver secantSolver0 = new SecantSolver(0.0);
      MonitoredFunction monitoredFunction0 = new MonitoredFunction(sincFunction0);
      // Undeclared exception!
      secantSolver0.doSolve();
  }
}
