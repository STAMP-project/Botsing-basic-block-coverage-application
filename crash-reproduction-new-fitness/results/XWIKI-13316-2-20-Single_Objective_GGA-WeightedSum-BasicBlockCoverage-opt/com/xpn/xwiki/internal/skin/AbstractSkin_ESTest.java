/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 15:10:27 UTC 2021
 */

package com.xpn.xwiki.internal.skin;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.Logger;
import com.google.inject.Injector;
import com.xpn.xwiki.internal.ReadOnlyXWikiContextProvider;
import com.xpn.xwiki.internal.skin.EnvironmentSkin;
import com.xpn.xwiki.internal.skin.InternalSkinConfiguration;
import com.xpn.xwiki.internal.skin.InternalSkinManager;
import org.apache.commons.dbcp2.PoolableConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.python.util.PyFilter;
import org.xwiki.cache.CacheManager;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.component.internal.ContextComponentManager;
import org.xwiki.component.internal.ContextRootComponentManager;
import org.xwiki.component.internal.RoleHint;
import org.xwiki.component.internal.multi.ComponentManagerManager;
import org.xwiki.context.Execution;
import org.xwiki.environment.Environment;
import org.xwiki.model.reference.EntityReferenceSerializer;
import org.xwiki.rendering.internal.syntax.DefaultSyntaxFactory;
import ucar.httpservices.CustomX509TrustManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractSkin_ESTest extends AbstractSkin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheManager cacheManager0 = mock(CacheManager.class, new ViolatedAssumptionAnswer());
      Injector injector0 = mock(Injector.class, new ViolatedAssumptionAnswer());
      Class<PoolableConnection> class0 = PoolableConnection.class;
      Injector injector1 = mock(Injector.class, new ViolatedAssumptionAnswer());
      DefaultSyntaxFactory defaultSyntaxFactory0 = new DefaultSyntaxFactory();
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager((String) null);
      ContextComponentManager contextComponentManager0 = new ContextComponentManager();
      Execution execution1 = mock(Execution.class, new ViolatedAssumptionAnswer());
      org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManager0, (Class<?>) ContextComponentManager.class, "execution", (Object) execution1);
      ContextRootComponentManager contextRootComponentManager0 = new ContextRootComponentManager();
      EmbeddableComponentManager embeddableComponentManager1 = new EmbeddableComponentManager();
      org.evosuite.runtime.javaee.injection.Injector.inject(contextRootComponentManager0, (Class<?>) ContextRootComponentManager.class, "rootComponentManager", (Object) embeddableComponentManager1);
      EmbeddableComponentManager embeddableComponentManager2 = new EmbeddableComponentManager(",:({JVo.@_M$]q3/Z");
      org.evosuite.runtime.javaee.injection.Injector.inject(contextRootComponentManager0, (Class<?>) ContextRootComponentManager.class, "userComponentManager", (Object) embeddableComponentManager2);
      org.evosuite.runtime.javaee.injection.Injector.validateBean(contextRootComponentManager0, (Class<?>) ContextRootComponentManager.class);
      org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManager0, (Class<?>) ContextComponentManager.class, "rootComponentManager", (Object) contextRootComponentManager0);
      RoleHint<PyFilter> roleHint0 = new RoleHint<PyFilter>(class0);
      ContextRootComponentManager contextRootComponentManager1 = new ContextRootComponentManager();
      Execution execution2 = mock(Execution.class, new ViolatedAssumptionAnswer());
      EntityReferenceSerializer<Integer> entityReferenceSerializer0 = (EntityReferenceSerializer<Integer>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
      ComponentManagerManager componentManagerManager0 = mock(ComponentManagerManager.class, new ViolatedAssumptionAnswer());
      Logger logger0 = (Logger)CustomX509TrustManager.logger;
      ReadOnlyXWikiContextProvider readOnlyXWikiContextProvider0 = new ReadOnlyXWikiContextProvider();
      Execution execution3 = mock(Execution.class, new ViolatedAssumptionAnswer());
      org.evosuite.runtime.javaee.injection.Injector.inject(readOnlyXWikiContextProvider0, (Class<?>) ReadOnlyXWikiContextProvider.class, "execution", (Object) execution3);
      org.evosuite.runtime.javaee.injection.Injector.validateBean(readOnlyXWikiContextProvider0, (Class<?>) ReadOnlyXWikiContextProvider.class);
      EnvironmentSkin environmentSkin0 = new EnvironmentSkin("Access to document {0} has been denied to user {1}", (InternalSkinManager) null, (InternalSkinConfiguration) null, logger0, defaultSyntaxFactory0, (Environment) null, readOnlyXWikiContextProvider0);
      // Undeclared exception!
      environmentSkin0.getOutputSyntax();
  }
}
