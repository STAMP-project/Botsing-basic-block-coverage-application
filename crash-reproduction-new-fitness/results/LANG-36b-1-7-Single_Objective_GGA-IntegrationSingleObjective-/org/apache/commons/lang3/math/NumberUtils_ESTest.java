/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:34:19 UTC 2020
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = (-1314);
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 1298;
      intArray0[6] = (-2664);
      intArray0[7] = 65;
      NumberUtils.max(intArray0);
      try { 
        NumberUtils.createNumber(">~0,L`<Jn");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // >~0,L`<Jn is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
