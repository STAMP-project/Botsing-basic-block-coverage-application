/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 17:01:40 UTC 2020
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class ChartFactory_ESTest extends ChartFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      ChartFactory.createStackedXYAreaChart("", "", "", categoryTableXYDataset0, plotOrientation0, false, false, false);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(categoryDataset0).getColumnCount();
      PlotOrientation plotOrientation1 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = false;
      ChartFactory.createStackedBarChart((String) null, "'_zc:_`x(=d`+dzA", (String) null, categoryDataset0, plotOrientation1, false, false, false);
      String string0 = "";
      PlotOrientation plotOrientation2 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      boolean boolean2 = true;
      // Undeclared exception!
      ChartFactory.createScatterPlot((String) null, "", (String) null, categoryTableXYDataset0, plotOrientation2, true, true, true);
  }
}
