/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 01:07:58 BST 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      DateTimeFieldType.dayOfYear();
      Date date0 = new Date();
      DateTimeZone.forOffsetHours(5);
      MonthDay monthDay0 = new MonthDay((long) 5);
      int[] intArray0 = new int[3];
      intArray0[0] = 5;
      intArray0[1] = (-135);
      MonthDay monthDay1 = new MonthDay(monthDay0, intArray0);
      MonthDay monthDay2 = new MonthDay(monthDay1, intArray0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) monthDay0, (ReadablePartial) monthDay2);
  }
}
