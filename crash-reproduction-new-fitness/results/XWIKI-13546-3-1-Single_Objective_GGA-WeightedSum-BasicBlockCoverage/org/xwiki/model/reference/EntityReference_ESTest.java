/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 13:28:28 UTC 2020
 */

package org.xwiki.model.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Serializable;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.model.EntityType;
import org.xwiki.model.reference.EntityReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EntityReference_ESTest extends EntityReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EntityType entityType0 = EntityType.SPACE;
      EntityReference entityReference0 = new EntityReference("An Entity Reference name cannot be null or empty", entityType0);
      Map<String, Serializable> map0 = entityReference0.getParameters();
      entityReference0.setParameters(map0);
      entityReference0.getName();
      entityReference0.getReversedReferenceChain();
      entityReference0.hashCode();
      Map<String, Serializable> map1 = entityReference0.getParameters();
      EntityReference entityReference1 = entityReference0.getRoot();
      entityReference0.equalsNonRecursive(entityReference1);
      EntityReference entityReference2 = entityReference0.getRoot();
      entityReference2.setParameters(map1);
      EntityReference entityReference3 = entityReference1.getRoot();
      entityReference2.toString();
      String string0 = "";
      EntityType entityType1 = EntityType.WIKI;
      EntityReference entityReference4 = new EntityReference("An Entity Reference name cannot be null or empty", entityType1, entityReference1);
      entityReference0.hasParent(entityReference3);
      entityReference4.equalsNonRecursive(entityReference3);
      EntityType entityType2 = EntityType.ATTACHMENT;
      EntityReference entityReference5 = new EntityReference("", entityType2);
  }
}
