/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 00:13:45 UTC 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateMidnight;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Days;
import org.joda.time.MockNullZoneChronology;
import org.joda.time.Partial;
import org.joda.time.ReadableInstant;
import org.joda.time.ReadablePartial;
import org.joda.time.Weeks;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateMidnight dateMidnight0 = DateMidnight.now();
      Days days0 = Days.daysBetween((ReadableInstant) dateMidnight0, (ReadableInstant) dateMidnight0);
      Days days1 = Days.THREE;
      Days days2 = Days.SEVEN;
      Days.daysBetween((ReadableInstant) dateMidnight0, (ReadableInstant) dateMidnight0);
      days0.toStandardDuration();
      Weeks weeks0 = Weeks.ONE;
      Days days3 = Days.THREE;
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
      MockNullZoneChronology mockNullZoneChronology0 = new MockNullZoneChronology();
      Chronology chronology0 = mockNullZoneChronology0.withUTC();
      dateTimeFieldType0.getField(chronology0);
      Partial partial0 = new Partial(dateTimeFieldType0, 6, mockNullZoneChronology0);
      int[] intArray0 = new int[8];
      intArray0[0] = Integer.MAX_VALUE;
      intArray0[1] = Integer.MAX_VALUE;
      intArray0[2] = Integer.MAX_VALUE;
      intArray0[3] = 6;
      intArray0[4] = Integer.MAX_VALUE;
      intArray0[5] = Integer.MAX_VALUE;
      intArray0[6] = Integer.MAX_VALUE;
      intArray0[7] = 6;
      Partial partial1 = new Partial(partial0, intArray0);
      Partial partial2 = new Partial(partial1, intArray0);
      partial1.indexOf(dateTimeFieldType0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) partial2, (ReadablePartial) partial1);
  }
}
