/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 13:27:31 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Map;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.BulletedListBlock;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.block.TableRowBlock;
import org.xwiki.rendering.block.XDOM;
import org.xwiki.rendering.block.match.AnyBlockMatcher;
import org.xwiki.rendering.block.match.BlockMatcher;
import org.xwiki.rendering.block.match.CompositeBlockMatcher;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.syntax.Syntax;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AnyBlockMatcher anyBlockMatcher0 = AnyBlockMatcher.ANYBLOCKMATCHER;
      ArrayList<Block> arrayList0 = new ArrayList<Block>();
      AnyBlockMatcher anyBlockMatcher1 = AnyBlockMatcher.ANYBLOCKMATCHER;
      LinkedList<BlockMatcher> linkedList0 = new LinkedList<BlockMatcher>();
      UnaryOperator<BlockMatcher> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      linkedList0.add((BlockMatcher) anyBlockMatcher0);
      CompositeBlockMatcher compositeBlockMatcher0 = new CompositeBlockMatcher(linkedList0);
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      XDOM xDOM0 = new XDOM(arrayList0);
      Syntax syntax0 = Syntax.APT_1_0;
      TransformationContext transformationContext0 = new TransformationContext(xDOM0, syntax0);
      TransformationContext transformationContext1 = transformationContext0.clone();
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext(transformationContext1);
      BulletedListBlock bulletedListBlock0 = new BulletedListBlock(arrayList0);
      Map<String, String> map0 = bulletedListBlock0.getParameters();
      MacroBlock macroBlock0 = new MacroBlock((String) null, map0, "NAEZ,;? .cK;,=4", true);
      macroTransformationContext0.setCurrentMacroBlock(macroBlock0);
      XDOM xDOM1 = XDOM.EMPTY;
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      TableRowBlock tableRowBlock0 = new TableRowBlock(arrayList0);
      // Undeclared exception!
      treeParametersBuilder0.build(tableRowBlock0, tocMacroParameters0, macroTransformationContext0);
  }
}
