/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:58:57 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Expm1Function expm1Function0 = new Expm1Function();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction(expm1Function0);
      double double0 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      expm1Function0.value(1.0E-15);
      monitoredFunction0.value((-458.4032285));
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double2 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      expm1Function0.derivative();
      Expm1Function expm1Function1 = new Expm1Function();
      MonitoredFunction monitoredFunction1 = new MonitoredFunction(monitoredFunction0);
      monitoredFunction0.setCallsCount(1219);
      double double3 = (-1120.6601110573865);
      double double4 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      monitoredFunction0.setCallsCount(1132);
      double double5 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(12, (UnivariateFunction) monitoredFunction0, (-45.060583680861114), 630.726411);
  }
}
