/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 06:53:55 UTC 2021
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StepInterpolator stepInterpolator0 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator0).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator0).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator0).isForward();
      StepProblem stepProblem0 = new StepProblem((-0.3542245050521139), (-0.3542245050521139), (-0.3542245050521139));
      EventState eventState0 = new EventState(stepProblem0, (-0.3542245050521139), (-1584.234371136533), (-240));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1560.7477581769635);
      doubleArray0[2] = (-0.3542245050521139);
      doubleArray0[3] = (-1560.7477581769635);
      doubleArray0[4] = (double) (-240);
      doubleArray0[5] = (-0.3542245050521139);
      doubleArray0[3] = (-1560.7477581769635);
      doubleArray0[7] = (-1560.7477581769635);
      eventState0.stepAccepted((-1560.7477581769635), doubleArray0);
      eventState0.stepAccepted((-0.3542245050521139), doubleArray0);
      eventState0.evaluateStep(stepInterpolator0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
      double double0 = 0.0;
      StepProblem stepProblem1 = new StepProblem(2.0, (-240), 0.0);
      stepProblem1.setRate(1.0E-6);
      eventState0.stepAccepted(1799.6843076, doubleArray0);
      dummyStepInterpolator0.storeTime(0.4);
      // Undeclared exception!
      eventState0.evaluateStep(dummyStepInterpolator0);
  }
}
