/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 16:46:51 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.TestInterval_Basics;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodParser;
import org.joda.time.format.PeriodPrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Period period0 = Period.millis(0);
      Period period1 = period0.plusMinutes(0);
      period0.withYears(0);
      period0.toStandardSeconds();
      PeriodType periodType0 = PeriodType.weeks();
      TestInterval_Basics testInterval_Basics0 = new TestInterval_Basics("]7#><!.");
      TestInterval_Basics.MockInterval testInterval_Basics_MockInterval0 = testInterval_Basics0.new MockInterval();
      Chronology chronology0 = testInterval_Basics_MockInterval0.getChronology();
      Period period2 = new Period((-1L), 0, periodType0, chronology0);
      int int0 = 1898;
      period1.plusHours(1898);
      PeriodPrinter periodPrinter0 = mock(PeriodPrinter.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(periodPrinter0).calculatePrintedLength(any(org.joda.time.ReadablePeriod.class) , any(java.util.Locale.class));
      DateTimeZone.getDefault();
      PeriodFormatter periodFormatter0 = new PeriodFormatter(periodPrinter0, (PeriodParser) null);
      period0.toString(periodFormatter0);
      // Undeclared exception!
      period2.withYears(0);
  }
}
