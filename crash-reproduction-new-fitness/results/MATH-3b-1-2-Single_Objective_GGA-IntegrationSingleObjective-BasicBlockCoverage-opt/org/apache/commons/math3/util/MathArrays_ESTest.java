/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:30:59 UTC 2021
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.MathArrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class MathArrays_ESTest extends MathArrays_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[9];
      int int0 = 18;
      intArray0[0] = 18;
      MathArrays.linearCombination((-1447.8), 1947758.8630048453, 0.0, (-342.452), 1618.52270348514, 828.428, 6.123233995736766E-17, 6.123233995736766E-17);
      float[] floatArray0 = new float[0];
      MathArrays.equalsIncludingNaN((float[]) null, floatArray0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2170.0873137549506;
      MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.DECREASING;
      MathArrays.checkOrder(doubleArray0, mathArrays_OrderDirection0, true);
      int int1 = 25;
      MathArrays.copyOf(intArray0, 25);
      // Undeclared exception!
      MathArrays.linearCombination(doubleArray0, doubleArray0);
  }
}
