/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 11:33:26 GMT 2020
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import java.util.function.Consumer;
import org.apache.commons.lang3.time.FastDateParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class FastDateParser_ESTest extends FastDateParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Locale locale0 = Locale.ENGLISH;
      Locale locale1 = FastDateParser.JAPANESE_IMPERIAL;
      String string0 = "@0SdGn]z>&K6";
      Locale locale2 = Locale.CHINA;
      Locale locale3 = Locale.FRANCE;
      TimeZone timeZone0 = TimeZone.getTimeZone("@!4SdG%]4z&K6");
      Locale locale4 = Locale.ROOT;
      Locale locale5 = Locale.forLanguageTag("(");
      int int0 = 2028;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.lookup(linkedList0, list0);
      FastDateParser fastDateParser0 = new FastDateParser("4t>lCJH66_P", timeZone0, locale2);
      fastDateParser0.equals(locale5);
      FastDateParser fastDateParser1 = new FastDateParser("GMTSST", timeZone0, locale1);
  }
}
