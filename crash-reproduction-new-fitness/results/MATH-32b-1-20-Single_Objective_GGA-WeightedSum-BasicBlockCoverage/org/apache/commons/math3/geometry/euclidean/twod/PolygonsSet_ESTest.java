/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:40:35 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.AffineTransform;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.apache.commons.math3.geometry.partitioning.Transform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      Euclidean2D euclidean2D0 = Euclidean2D.getInstance();
      Euclidean1D euclidean1D0 = euclidean2D0.getSubSpace();
      linkedList0.removeLastOccurrence(euclidean1D0);
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
      polygonsSet0.getBoundarySize();
      polygonsSet0.computeGeometricalProperties();
      polygonsSet0.computeGeometricalProperties();
      Vector3D vector3D0 = new Vector3D(0.8031699158622041, Double.POSITIVE_INFINITY);
      Vector3D vector3D1 = new Vector3D(0.0, 0.0, 0.8031699158622041);
      Plane plane0 = new Plane(vector3D0, vector3D1, vector3D0);
      Vector3D vector3D2 = Vector3D.NaN;
      Vector2D vector2D0 = plane0.toSubSpace(vector3D2);
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(vector2D0);
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getCell(vector2D0);
      bSPTree1.getCell(vector2D0);
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);
      PolygonsSet polygonsSet2 = new PolygonsSet();
      AffineTransform affineTransform0 = new AffineTransform(1746.0, 0.8031699158622041, 0.0, 2.800552834259E-8, 0.9166666666666666, 1746.0);
      Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform0);
      polygonsSet1.applyTransform(transform0);
      PolygonsSet polygonsSet3 = new PolygonsSet((-1.0E-10), 1.304E19, (-5.7618793749770706E-8), 143.88096286065522);
      // Undeclared exception!
      polygonsSet3.computeGeometricalProperties();
  }
}
