/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:21:47 UTC 2020
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils.toDouble("", (-1.0));
      long[] longArray0 = new long[1];
      longArray0[0] = 4271L;
      NumberUtils.max(longArray0);
      short short0 = (short) (-2951);
      NumberUtils.toShort("org.apache.commons.lang3.math.NumberUtils", (short) (-2951));
      NumberUtils.min(1727, 1727, 0);
      NumberUtils.toDouble("Y-__l.!0C}j3nqh");
      byte byte0 = (byte)7;
      byte byte1 = (byte) (-113);
      NumberUtils.min((byte)7, (byte) (-113), (byte)7);
      NumberUtils.toDouble("Y-__l.!0C}j3nqh", (double) 4271L);
      String string0 = "IllegalAccessException occurred";
      try { 
        NumberUtils.createNumber("IllegalAccessException occurred");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // IllegalAccessException occurred is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
