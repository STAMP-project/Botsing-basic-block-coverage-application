/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 13:02:52 CEST 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalTime;
import org.joda.time.Period;
import org.joda.time.TestDateTime_Basics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      DateTime dateTime0 = DateTime.now();
      DateTime dateTime1 = dateTime0.minusDays(6);
      DateTime dateTime2 = dateTime1.withMillisOfDay(0);
      TestDateTime_Basics testDateTime_Basics0 = new TestDateTime_Basics("D]It3h");
      TestDateTime_Basics.MockEqualsChronology testDateTime_Basics_MockEqualsChronology0 = testDateTime_Basics0.new MockEqualsChronology();
      dateTime2.weekOfWeekyear();
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(0);
      LocalTime localTime0 = new LocalTime(dateTimeZone0);
      LocalTime localTime1 = localTime0.withMinuteOfHour(6);
      LocalTime localTime2 = localTime1.withSecondOfMinute(0);
      Period period0 = Period.fieldDifference(localTime2, localTime2);
      // Undeclared exception!
      period0.withYears(3);
  }
}
