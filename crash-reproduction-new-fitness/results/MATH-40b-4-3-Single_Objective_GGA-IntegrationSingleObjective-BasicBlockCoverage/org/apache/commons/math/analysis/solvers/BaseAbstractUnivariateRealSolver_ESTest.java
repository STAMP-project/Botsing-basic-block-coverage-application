/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:12:17 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.RiddersSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SinFunction sinFunction0 = new SinFunction();
      UnivariateFunction univariateFunction0 = sinFunction0.derivative();
      SincFunction sincFunction0 = new SincFunction();
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      Expm1Function expm1Function0 = new Expm1Function();
      sinFunction0.value((-13));
      MullerSolver mullerSolver0 = new MullerSolver((-0.49031637927275473), (-13));
      NewtonSolver newtonSolver0 = new NewtonSolver();
      double double0 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double2 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      RiddersSolver riddersSolver0 = new RiddersSolver((-2036.64));
      double double3 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double[] doubleArray0 = new double[17];
      doubleArray0[0] = 0.020300358533859253;
      doubleArray0[1] = (double) 5;
      doubleArray0[2] = 1.0E-6;
      doubleArray0[3] = 306.4;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      double double4 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      bracketingNthOrderBrentSolver0.getMaximalOrder();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(5, univariateFunction0, 1.0E-6, 306.4, allowedSolution0);
  }
}
