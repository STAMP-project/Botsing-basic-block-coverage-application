/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:42:34 UTC 2020
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree.LeafMerger<Euclidean1D> bSPTree_LeafMerger0 = (BSPTree.LeafMerger<Euclidean1D>) mock(BSPTree.LeafMerger.class, new ViolatedAssumptionAnswer());
      BoundarySizeVisitor<Euclidean2D> boundarySizeVisitor0 = new BoundarySizeVisitor<Euclidean2D>();
      BoundarySizeVisitor<Euclidean2D> boundarySizeVisitor1 = new BoundarySizeVisitor<Euclidean2D>();
      BoundarySizeVisitor<Euclidean2D> boundarySizeVisitor2 = new BoundarySizeVisitor<Euclidean2D>();
      BoundarySizeVisitor<Euclidean2D> boundarySizeVisitor3 = new BoundarySizeVisitor<Euclidean2D>();
      BoundarySizeVisitor<Euclidean2D> boundarySizeVisitor4 = new BoundarySizeVisitor<Euclidean2D>();
      PolygonsSet polygonsSet0 = new PolygonsSet();
      PolygonsSet polygonsSet1 = new PolygonsSet();
      PolygonsSet polygonsSet2 = new PolygonsSet();
      PolygonsSet polygonsSet3 = new PolygonsSet();
      Vector2D vector2D0 = Vector2D.ZERO;
      Line line0 = new Line(vector2D0, 2192.8910120957);
      line0.wholeSpace();
      Integer integer0 = new Integer(4);
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(integer0);
      line0.wholeHyperplane();
      bSPTree0.getParent();
      PolygonsSet polygonsSet4 = new PolygonsSet((BSPTree<Euclidean2D>) null);
      PolygonsSet polygonsSet5 = polygonsSet4.buildNew(bSPTree0);
      // Undeclared exception!
      polygonsSet5.getSize();
  }
}
