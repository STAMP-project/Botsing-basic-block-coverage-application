/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:35:01 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (-1946.0);
      doubleArray0[4] = 169.717502;
      doubleArray0[5] = (double) 2007;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      polynomialFunction0.toString();
      double[] doubleArray1 = new double[25];
      doubleArray1[0] = (-2487.4398544957103);
      doubleArray1[1] = 670.9749943772144;
      doubleArray1[3] = 169.717502;
      doubleArray1[4] = (double) (-2144493700);
      doubleArray1[5] = 0.0;
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray1);
      PolynomialFunction polynomialFunction2 = polynomialFunction0.multiply(polynomialFunction1);
      polynomialFunction0.negate();
      double double0 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      LaguerreSolver laguerreSolver0 = new LaguerreSolver();
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2.1444937E9), (-330514.5732968199), 0.00390625, 2007);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(209, (UnivariateFunction) polynomialFunction2, 0.0, 717.23461777394, allowedSolution0);
  }
}
