/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 02:01:01 UTC 2021
 */

package com.xpn.xwiki.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseObject;
import org.dom4j.QName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.collection.PersistentSortedMap;
import org.hibernate.engine.SessionImplementor;
import org.junit.runner.RunWith;
import org.xwiki.component.manager.ComponentManager;
import org.xwiki.model.internal.reference.DefaultReferenceDocumentReferenceResolver;
import org.xwiki.model.internal.reference.DefaultStringDocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseObject_ESTest extends BaseObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseObject baseObject0 = new BaseObject();
      ComponentManager componentManager0 = mock(ComponentManager.class, new ViolatedAssumptionAnswer());
      baseObject0.setLargeStringValue("KGX}", "KGX}");
      BaseObject baseObject1 = baseObject0.clone();
      String string0 = "7>c8:RI[m";
      baseObject1.setLargeStringValue("7>c8:RI[m", "7>c8:RI[m");
      BaseObject baseObject2 = new BaseObject();
      QName.get("--help", "kc", "kc");
      BaseObject baseObject3 = new BaseObject();
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      PersistentSortedMap persistentSortedMap0 = new PersistentSortedMap(sessionImplementor0);
      DefaultStringDocumentReferenceResolver defaultStringDocumentReferenceResolver0 = new DefaultStringDocumentReferenceResolver();
      EntityReferenceResolver<DefaultReferenceDocumentReferenceResolver> entityReferenceResolver0 = (EntityReferenceResolver<DefaultReferenceDocumentReferenceResolver>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultStringDocumentReferenceResolver0, (Class<?>) DefaultStringDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(defaultStringDocumentReferenceResolver0, (Class<?>) DefaultStringDocumentReferenceResolver.class);
      baseObject2.setLargeStringValue("clubs", "PQwqGc6HU1");
      BaseObject baseObject4 = baseObject2.clone();
      baseObject3.clone();
      // Undeclared exception!
      baseObject4.equals(baseObject0);
  }
}
