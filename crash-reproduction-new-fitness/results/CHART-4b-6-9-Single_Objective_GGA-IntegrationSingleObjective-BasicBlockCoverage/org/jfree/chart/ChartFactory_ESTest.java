/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:36:03 UTC 2020
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class ChartFactory_ESTest extends ChartFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "Percentage outside valid range.";
      String string1 = "x'L:g/Vr8Ud3/+";
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(xYDataset0).toString();
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).getSeriesCount();
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      ChartFactory.createXYLineChart("Percentage outside valid range.", "x'L:g/Vr8Ud3/+", "The structure has kids.", xYDataset0, plotOrientation0, false, true, false);
      String string2 = "U E0]";
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(xYDataset1).toString();
      doReturn(0).when(xYDataset1).getSeriesCount();
      PlotOrientation plotOrientation1 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = true;
      // Undeclared exception!
      ChartFactory.createScatterPlot("U E0]", "U E0]", "U E0]", xYDataset1, plotOrientation1, true, true, true);
  }
}
