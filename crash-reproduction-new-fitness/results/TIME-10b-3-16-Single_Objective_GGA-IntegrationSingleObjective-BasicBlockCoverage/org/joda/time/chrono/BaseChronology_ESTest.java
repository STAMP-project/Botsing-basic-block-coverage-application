/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:45:02 UTC 2020
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDate;
import org.joda.time.MonthDay;
import org.joda.time.Months;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.IslamicChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BuddhistChronology.getInstance();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      LocalDate localDate0 = LocalDate.now();
      Months months0 = Months.THREE;
      LocalDate localDate1 = localDate0.plus(months0);
      int int0 = IslamicChronology.AH;
      buddhistChronology0.set(localDate1, 1);
      DateTimeZone dateTimeZone0 = null;
      MonthDay monthDay0 = new MonthDay((-2033L), (Chronology) buddhistChronology0);
      LocalDate localDate2 = monthDay0.toLocalDate(1);
      localDate2.toInterval((DateTimeZone) null);
      int int1 = IslamicChronology.AH;
      CopticChronology copticChronology0 = CopticChronology.getInstance((DateTimeZone) null);
      // Undeclared exception!
      copticChronology0.set(monthDay0, 1);
  }
}
