/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 06:57:47 UTC 2021
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.SimpleScalarValueChecker;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DirectSearchOptimizer_ESTest extends DirectSearchOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Comparator<RealPointValuePair> comparator0 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      RealPointValuePair realPointValuePair0 = mock(RealPointValuePair.class, new ViolatedAssumptionAnswer());
      double[][] doubleArray0 = new double[6][6];
      double[] doubleArray1 = new double[5];
      doubleArray1[1] = (double) (-3067);
      double[] doubleArray2 = new double[6];
      doubleArray2[2] = (-1488.65726);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[2] = (-1488.65726);
      doubleArray1[1] = (-1488.65726);
      doubleArray0[2] = doubleArray2;
      MultiDirectional multiDirectional0 = new MultiDirectional();
      SimpleScalarValueChecker simpleScalarValueChecker0 = new SimpleScalarValueChecker();
      multiDirectional0.setConvergenceChecker(simpleScalarValueChecker0);
      multiDirectional0.incrementIterationsCounter();
      multiDirectional0.setMaxEvaluations((-3067));
      multiDirectional0.setMaxIterations((-4062));
      MultiDirectional multiDirectional1 = new MultiDirectional();
      SimpleScalarValueChecker simpleScalarValueChecker1 = new SimpleScalarValueChecker();
      multiDirectional1.setConvergenceChecker(simpleScalarValueChecker0);
      try { 
        multiDirectional0.incrementIterationsCounter();
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (-4,062) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
