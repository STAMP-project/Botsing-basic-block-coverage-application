/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 20:11:24 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NaN;
      Line line0 = new Line(vector3D0, vector3D0);
      Vector3D vector3D1 = line0.getDirection();
      line0.getAbscissa(vector3D1);
      Vector3D vector3D2 = new Vector3D(1995.0705493357887, vector3D1, 1.0, vector3D1);
      line0.getOrigin();
      line0.toSubSpace(vector3D1);
      Vector3D vector3D3 = line0.getOrigin();
      Vector3D vector3D4 = Vector3D.MINUS_J;
      Line line1 = new Line(vector3D2, vector3D1);
      Vector3D vector3D5 = line0.getDirection();
      Vector3D vector3D6 = Vector3D.NEGATIVE_INFINITY;
      line0.getAbscissa(vector3D6);
      Vector3D vector3D7 = new Vector3D(1995.0705493357887, vector3D2, 3.981422857726243E-17, vector3D5);
      line0.getOrigin();
      line1.toSubSpace(vector3D6);
      line1.getOrigin();
      Vector3D vector3D8 = Vector3D.MINUS_J;
      Vector3D vector3D9 = Vector3D.ZERO;
      line1.reset(vector3D2, vector3D3);
      Line line2 = new Line(line0);
      line2.toSubSpace(vector3D5);
      Line line3 = null;
      line2.intersection(line1);
      line2.toSubSpace(vector3D2);
      Line line4 = new Line(line0);
      line4.contains(vector3D8);
      line0.contains(vector3D1);
      // Undeclared exception!
      line2.toSubSpace((Vector<Euclidean3D>) null);
  }
}
