/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 05:07:13 UTC 2020
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javatests.DiamondIterableMapMRO;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.component.internal.RootComponentManager;
import org.xwiki.filter.xml.serializer.XMLSerializerFactory;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.ExpandedMacroBlock;
import org.xwiki.rendering.block.VerbatimBlock;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.internal.renderer.AbstractBlockRenderer;
import org.xwiki.rendering.internal.renderer.xwiki20.XWikiSyntaxBlockRenderer;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.syntax.Syntax;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.xdomxmlcurrent.internal.renderer.XDOMXMLRenderer;
import org.xwiki.rendering.xml.internal.renderer.AbstractStreamRendererFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TocMacroParameters tocMacroParameters0 = mock(TocMacroParameters.class, new ViolatedAssumptionAnswer());
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext();
      MacroTransformationContext macroTransformationContext1 = new MacroTransformationContext();
      Syntax syntax0 = Syntax.EVENT_1_0;
      syntax0.toIdString();
      macroTransformationContext0.setSyntax(syntax0);
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      TocMacroParameters tocMacroParameters2 = new TocMacroParameters();
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters2.setStart(3580);
      tocMacroParameters2.setScope(tocMacroParameters_Scope0);
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      treeParametersBuilder0.build((Block) null, tocMacroParameters1, macroTransformationContext0);
      MacroTransformationContext macroTransformationContext2 = new MacroTransformationContext();
      TreeParametersBuilder treeParametersBuilder1 = new TreeParametersBuilder();
      TocMacroParameters tocMacroParameters3 = null;
      DiamondIterableMapMRO diamondIterableMapMRO0 = new DiamondIterableMapMRO();
      VerbatimBlock verbatimBlock0 = new VerbatimBlock((String) null, diamondIterableMapMRO0, false);
      treeParametersBuilder0.build(verbatimBlock0, tocMacroParameters2, (MacroTransformationContext) null);
      MacroTransformationContext macroTransformationContext3 = null;
      TocMacroParameters tocMacroParameters4 = new TocMacroParameters();
      tocMacroParameters4.setScope(tocMacroParameters_Scope0);
      MacroTransformationContext macroTransformationContext4 = macroTransformationContext2.clone();
      XWikiSyntaxBlockRenderer xWikiSyntaxBlockRenderer0 = new XWikiSyntaxBlockRenderer();
      XDOMXMLRenderer xDOMXMLRenderer0 = new XDOMXMLRenderer();
      XMLSerializerFactory xMLSerializerFactory0 = mock(XMLSerializerFactory.class, new ViolatedAssumptionAnswer());
      Injector.inject(xDOMXMLRenderer0, (Class<?>) XDOMXMLRenderer.class, "serializerFactory", (Object) xMLSerializerFactory0);
      RootComponentManager rootComponentManager0 = new RootComponentManager();
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
      Injector.inject(rootComponentManager0, (Class<?>) RootComponentManager.class, "rootComponentManager", (Object) embeddableComponentManager0);
      Injector.validateBean(rootComponentManager0, (Class<?>) RootComponentManager.class);
      Injector.inject(xDOMXMLRenderer0, (Class<?>) AbstractStreamRendererFactory.class, "componentManager", (Object) rootComponentManager0);
      Injector.validateBean(xDOMXMLRenderer0, (Class<?>) XDOMXMLRenderer.class);
      Injector.inject(xWikiSyntaxBlockRenderer0, (Class<?>) XWikiSyntaxBlockRenderer.class, "xwikiSyntaxRendererFactory", (Object) xDOMXMLRenderer0);
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      Injector.inject(xWikiSyntaxBlockRenderer0, (Class<?>) AbstractBlockRenderer.class, "logger", (Object) logger0);
      Injector.validateBean(xWikiSyntaxBlockRenderer0, (Class<?>) XWikiSyntaxBlockRenderer.class);
      ExpandedMacroBlock expandedMacroBlock0 = new ExpandedMacroBlock((String) null, diamondIterableMapMRO0, xWikiSyntaxBlockRenderer0, true, embeddableComponentManager0);
      macroTransformationContext4.setCurrentMacroBlock(expandedMacroBlock0);
      // Undeclared exception!
      treeParametersBuilder0.build((Block) null, tocMacroParameters4, macroTransformationContext4);
  }
}
