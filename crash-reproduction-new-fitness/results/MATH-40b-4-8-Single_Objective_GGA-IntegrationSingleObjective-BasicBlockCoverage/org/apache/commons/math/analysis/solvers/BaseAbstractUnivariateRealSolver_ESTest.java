/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:13:46 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = 567;
      QuinticFunction quinticFunction0 = new QuinticFunction();
      quinticFunction0.derivative();
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      double double0 = (-23.974455096809802);
      bracketingNthOrderBrentSolver0.getEvaluations();
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      SincFunction sincFunction0 = new SincFunction();
      quinticFunction0.derivative();
      SincFunction sincFunction1 = new SincFunction();
      double double2 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      BrentSolver brentSolver0 = new BrentSolver((-2790), 567);
      double double3 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      bracketingNthOrderBrentSolver0.getMaximalOrder();
      BisectionSolver bisectionSolver0 = new BisectionSolver((-13.179582037479353), 1.0E-6);
      double double4 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      sincFunction1.derivative();
      double double5 = 0.0;
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(5, (UnivariateFunction) sincFunction1, 0.0, 713.4258787894673, allowedSolution0);
  }
}
