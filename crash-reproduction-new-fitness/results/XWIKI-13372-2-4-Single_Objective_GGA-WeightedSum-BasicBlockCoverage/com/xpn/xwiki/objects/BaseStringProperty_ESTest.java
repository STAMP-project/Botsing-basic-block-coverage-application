/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 19:39:52 UTC 2020
 */

package com.xpn.xwiki.objects;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.BaseStringProperty;
import com.xpn.xwiki.objects.LargeStringProperty;
import com.xpn.xwiki.objects.StringProperty;
import java.io.File;
import javax.swing.filechooser.FileSystemView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.model.reference.SpaceReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseStringProperty_ESTest extends BaseStringProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseStringProperty baseStringProperty0 = new BaseStringProperty();
      FileSystemView fileSystemView0 = FileSystemView.getFileSystemView();
      File file0 = fileSystemView0.getDefaultDirectory();
      StringProperty stringProperty0 = new StringProperty();
      baseStringProperty0.equals(stringProperty0);
      BaseCollection<SpaceReference> baseCollection0 = (BaseCollection<SpaceReference>) mock(BaseCollection.class, new ViolatedAssumptionAnswer());
      fileSystemView0.getChild(file0, ">P;4@T@X&`9;#p(");
      baseStringProperty0.setObject(baseCollection0);
      File file1 = fileSystemView0.getHomeDirectory();
      fileSystemView0.isFileSystemRoot(file1);
      LargeStringProperty largeStringProperty0 = new LargeStringProperty();
      Object object0 = new Object();
      // Undeclared exception!
      baseStringProperty0.equals((Object) null);
  }
}
