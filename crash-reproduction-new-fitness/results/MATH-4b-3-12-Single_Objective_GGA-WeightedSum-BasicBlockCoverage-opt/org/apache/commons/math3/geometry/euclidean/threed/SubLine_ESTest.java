/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 20:10:42 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Segment;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Segment segment0 = mock(Segment.class, new ViolatedAssumptionAnswer());
      Vector3D vector3D0 = Vector3D.PLUS_K;
      Vector3D vector3D1 = new Vector3D(1821.3541324056, vector3D0, 1958.18509183641, vector3D0, 1821.3541324056, vector3D0);
      Vector3D vector3D2 = Vector3D.POSITIVE_INFINITY;
      Line line0 = new Line(vector3D1, vector3D2);
      SubLine subLine0 = line0.wholeLine();
      SubLine subLine1 = line0.wholeLine();
      subLine0.getSegments();
      // Undeclared exception!
      subLine0.intersection(subLine1, true);
  }
}
