/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:48:12 UTC 2021
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.Interval;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Euclidean3D euclidean3D0 = Euclidean3D.getInstance();
      Euclidean3D euclidean3D1 = Euclidean3D.getInstance();
      Euclidean3D.getInstance();
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(euclidean3D0);
      LinkedList<Interval> linkedList0 = new LinkedList<Interval>();
      Euclidean3D.getInstance();
      BSPTree<Euclidean3D> bSPTree1 = new BSPTree<Euclidean3D>(euclidean3D1);
      Euclidean2D euclidean2D0 = euclidean3D0.getSubSpace();
      Vector3D vector3D0 = Vector3D.MINUS_I;
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(euclidean2D0);
      Vector2D vector2D0 = new Vector2D(0.16666666666666666, 7.848361555046424E-8);
      Vector2D vector2D1 = new Vector2D(0.3936265707015991, vector2D0);
      BSPTree<Euclidean2D> bSPTree3 = bSPTree0.getCell(vector2D0);
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
      LinkedList<Interval> linkedList1 = new LinkedList<Interval>();
      PolygonsSet polygonsSet1 = new PolygonsSet(bSPTree3);
      // Undeclared exception!
      polygonsSet1.getSize();
  }
}
