/*
 * This file was automatically generated by EvoSuite
 * Fri May 15 12:24:36 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.field.OffsetDateTimeField;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      DateTimeParserBucket.SavedField[] dateTimeParserBucket_SavedFieldArray0 = new DateTimeParserBucket.SavedField[16];
      Chronology chronology1 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      doReturn((DateTimeZone) null).when(chronology1).getZone();
      doReturn((Chronology) null).when(chronology1).withUTC();
      Integer integer0 = new Integer((-5100));
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(3591L, chronology1, (Locale) null, integer0);
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
      Integer integer1 = dateTimeParserBucket_SavedState0.iOffset;
      dateTimeParserBucket0.setPivotYear((Integer) null);
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
      dateTimeZone0.getStandardOffset((-274L));
      DateTimeField dateTimeField0 = buddhistChronology0.dayOfWeek();
      OffsetDateTimeField offsetDateTimeField0 = new OffsetDateTimeField(dateTimeField0, (-5100));
      int int0 = 1;
      dateTimeParserBucket0.saveField(dateTimeField0, (-5100));
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(true, "");
  }
}
