/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 20:19:08 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = (-1326.1);
      IntervalsSet intervalsSet0 = new IntervalsSet((-1326.1), (-1326.1));
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      SubLine subLine0 = new SubLine(vector3D0, vector3D0);
      Line line0 = mock(Line.class, new ViolatedAssumptionAnswer());
      SubLine subLine1 = new SubLine(vector3D0, vector3D0);
      subLine1.getSegments();
      // Undeclared exception!
      subLine0.intersection(subLine1, true);
  }
}
