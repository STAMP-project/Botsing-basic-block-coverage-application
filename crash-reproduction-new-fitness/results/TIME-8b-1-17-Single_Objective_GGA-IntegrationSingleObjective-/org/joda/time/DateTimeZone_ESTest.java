/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 18:40:23 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTime;
import org.joda.time.DateTimeUtils;
import org.joda.time.DateTimeZone;
import org.joda.time.MockZone;
import org.joda.time.ReadableInstant;
import org.joda.time.tz.FixedDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeZone_ESTest extends DateTimeZone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.UTC;
      Integer integer0 = new Integer(86399999);
      Integer integer1 = new Integer(86399999);
      MockZone mockZone0 = new MockZone((long) integer1, 86399999, 239);
      DateTimeUtils.setCurrentMillisSystem();
      TimeZone.getDefault();
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      Integer integer2 = new Integer(239);
      fixedDateTimeZone0.getOffset((long) 239);
      fixedDateTimeZone0.isStandardOffset(1L);
      DateTime dateTime0 = DateTime.now((DateTimeZone) mockZone0);
      dateTimeZone0.getOffset((ReadableInstant) dateTime0);
      try { 
        DateTimeZone.forOffsetHoursMinutes(0, 239);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Minutes out of range: 239
         //
         verifyException("org.joda.time.DateTimeZone", e);
      }
  }
}
