/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 22:43:49 UTC 2021
 */

package org.xwiki.extension.job.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.dbcp2.DelegatingConnection;
import org.apache.commons.dbcp2.PoolingConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.extension.job.internal.AbstractInstallPlanJob;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest extends AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PoolingConnection poolingConnection0 = mock(PoolingConnection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(poolingConnection0).isClosed();
      doReturn(false).when(poolingConnection0).isValid(anyInt());
      DelegatingConnection<PoolingConnection> delegatingConnection0 = new DelegatingConnection<PoolingConnection>(poolingConnection0);
      delegatingConnection0.isValid(1249);
      PoolingConnection poolingConnection1 = new PoolingConnection(delegatingConnection0);
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      DefaultExtensionPlanNode defaultExtensionPlanNode0 = new DefaultExtensionPlanNode();
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree1 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      abstractInstallPlanJob_ModifableExtensionPlanTree1.remove(delegatingConnection0);
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree2 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      abstractInstallPlanJob_ModifableExtensionPlanTree0.parallelStream();
      abstractInstallPlanJob_ModifableExtensionPlanTree2.parallelStream();
      abstractInstallPlanJob_ModifableExtensionPlanTree2.toString();
      abstractInstallPlanJob_ModifableExtensionPlanTree2.removeAll(abstractInstallPlanJob_ModifableExtensionPlanTree1);
      abstractInstallPlanJob_ModifableExtensionPlanTree0.addIfAbsent(defaultExtensionPlanNode0);
      abstractInstallPlanJob_ModifableExtensionPlanTree2.add(defaultExtensionPlanNode0);
      int int0 = (-2988);
      // Undeclared exception!
      abstractInstallPlanJob_ModifableExtensionPlanTree2.clone();
  }
}
