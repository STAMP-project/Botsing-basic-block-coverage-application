/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 05:21:02 UTC 2020
 */

package org.xwiki.extension.job.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.PriorityQueue;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.extension.InstalledExtension;
import org.xwiki.extension.job.internal.AbstractInstallPlanJob;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode;
import org.xwiki.extension.version.internal.DefaultVersionConstraint;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest extends AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      PriorityQueue<DefaultExtensionPlanNode> priorityQueue0 = new PriorityQueue<DefaultExtensionPlanNode>();
      abstractInstallPlanJob_ModifableExtensionPlanTree0.addAll(priorityQueue0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) abstractInstallPlanJob_ModifableExtensionPlanTree0);
      abstractInstallPlanJob_ModifableExtensionPlanTree0.removeIf(predicate0);
      DefaultVersionConstraint defaultVersionConstraint0 = new DefaultVersionConstraint("ga");
      DefaultExtensionPlanNode defaultExtensionPlanNode0 = new DefaultExtensionPlanNode((ExtensionPlanAction) null, abstractInstallPlanJob_ModifableExtensionPlanTree0, defaultVersionConstraint0);
      DefaultExtensionPlanNode defaultExtensionPlanNode1 = new DefaultExtensionPlanNode(defaultExtensionPlanNode0);
      defaultExtensionPlanNode1.getChildren();
      abstractInstallPlanJob_ModifableExtensionPlanTree0.add(defaultExtensionPlanNode1);
      abstractInstallPlanJob_ModifableExtensionPlanTree0.indexOf((Object) priorityQueue0);
      InstalledExtension installedExtension0 = mock(InstalledExtension.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) abstractInstallPlanJob_ModifableExtensionPlanTree0;
      // Undeclared exception!
      abstractInstallPlanJob_ModifableExtensionPlanTree0.clone();
  }
}
