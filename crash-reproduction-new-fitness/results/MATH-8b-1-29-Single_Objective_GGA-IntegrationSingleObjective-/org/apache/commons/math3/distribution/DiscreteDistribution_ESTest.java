/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:34:52 UTC 2020
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.distribution.DiscreteDistribution;
import org.apache.commons.math3.random.ISAACRandom;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DiscreteDistribution_ESTest extends DiscreteDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      LinkedList<Pair<Object, Double>> linkedList1 = new LinkedList<Pair<Object, Double>>();
      Byte byte0 = new Byte((byte)36);
      Double double0 = new Double(0.689333717255254);
      Long long0 = new Long((byte)36);
      Double double1 = new Double(0.2081885);
      Pair<Object, Double> pair0 = new Pair<Object, Double>(long0, double1);
      Pair<Object, Double> pair1 = new Pair<Object, Double>(pair0);
      linkedList1.add(pair1);
      DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(linkedList1);
      Byte byte1 = new Byte((byte) (-59));
      Double double2 = new Double(0.689333717255254);
      Long long1 = new Long((byte)36);
      Double double3 = new Double((byte)36);
      Double double4 = new Double(0.5764106578648427);
      Pair<Object, Double> pair2 = new Pair<Object, Double>(double3, double4);
      Pair<Object, Double> pair3 = new Pair<Object, Double>(pair2);
      linkedList1.add(pair2);
      DiscreteDistribution<Object> discreteDistribution1 = new DiscreteDistribution<Object>(linkedList1);
      discreteDistribution0.sample();
      // Undeclared exception!
      discreteDistribution1.sample((int) (byte)36);
  }
}
