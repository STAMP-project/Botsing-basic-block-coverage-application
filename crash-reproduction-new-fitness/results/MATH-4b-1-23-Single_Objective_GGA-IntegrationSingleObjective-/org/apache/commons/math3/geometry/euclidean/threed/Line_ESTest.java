/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:34:40 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
      Line line0 = new Line(vector3D0, vector3D0);
      Vector3D vector3D1 = Vector3D.MINUS_I;
      Vector3D vector3D2 = new Vector3D(0.0, 0.0, 0.0);
      line0.getAbscissa(vector3D1);
      Locale locale0 = Locale.TAIWAN;
      NumberFormat.getInstance(locale0);
      vector3D1.toString();
      Line line1 = new Line(line0);
      line0.distance(line1);
      Line line2 = new Line(line1);
      Vector3D vector3D3 = new Vector3D(Double.NEGATIVE_INFINITY, (-1412.531));
      line1.getAbscissa(vector3D3);
      line0.intersection(line1);
      Vector3D vector3D4 = line0.pointAt(2685.6);
      line0.distance(line2);
      Line line3 = new Line(vector3D1, vector3D4);
      line3.contains(vector3D2);
      Vector1D vector1D0 = Vector1D.NEGATIVE_INFINITY;
      line1.toSpace(vector1D0);
      line3.toSubSpace(vector3D1);
      line0.wholeLine();
      // Undeclared exception!
      line0.getAbscissa((Vector3D) null);
  }
}
