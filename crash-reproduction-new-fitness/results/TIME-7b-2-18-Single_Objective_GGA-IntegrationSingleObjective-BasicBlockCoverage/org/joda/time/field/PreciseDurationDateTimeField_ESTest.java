/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 17:44:46 UTC 2020
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDateTime;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.field.TestPreciseDurationDateTimeField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PreciseDurationDateTimeField_ESTest extends PreciseDurationDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTime dateTime0 = DateTime.now();
      int int0 = 292278993;
      dateTime0.plusSeconds(292278993);
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      ISOChronology.getInstanceUTC();
      int[] intArray0 = new int[5];
      intArray0[1] = 292278993;
      intArray0[2] = 292278993;
      intArray0[3] = 292278993;
      intArray0[3] = 292278993;
      Chronology chronology0 = buddhistChronology0.withZone((DateTimeZone) null);
      int int1 = 492;
      chronology0.weekOfWeekyear();
      LocalDateTime localDateTime0 = new LocalDateTime((Chronology) buddhistChronology0);
      Locale locale0 = Locale.CHINA;
      int int2 = (-505);
      int int3 = 28;
      localDateTime0.withMillisOfSecond(492);
      int int4 = (-298);
      TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
      // Undeclared exception!
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set((long) 28, (-1));
  }
}
