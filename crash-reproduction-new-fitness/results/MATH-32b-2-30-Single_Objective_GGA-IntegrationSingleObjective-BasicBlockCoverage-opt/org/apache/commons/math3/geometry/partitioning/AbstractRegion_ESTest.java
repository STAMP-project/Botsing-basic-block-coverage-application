/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 11:12:48 UTC 2021
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.Hyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Hyperplane<Euclidean3D>[] hyperplaneArray0 = (Hyperplane<Euclidean3D>[]) Array.newInstance(Hyperplane.class, 1);
      PolygonsSet polygonsSet0 = new PolygonsSet();
      Vector3D vector3D0 = Vector3D.MINUS_J;
      double double0 = (-2801.494867912);
      Vector2D vector2D0 = Vector2D.ZERO;
      Line line0 = new Line(vector2D0, vector2D0);
      PolygonsSet polygonsSet1 = line0.wholeSpace();
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(line0);
      PolygonsSet polygonsSet2 = polygonsSet1.buildNew(bSPTree0);
      // Undeclared exception!
      polygonsSet2.getSize();
  }
}
