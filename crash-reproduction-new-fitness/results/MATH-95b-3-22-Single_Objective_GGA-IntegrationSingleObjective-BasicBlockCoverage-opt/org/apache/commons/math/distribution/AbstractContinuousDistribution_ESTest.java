/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 07:15:31 UTC 2021
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.BetaDistributionImpl;
import org.apache.commons.math.distribution.FDistributionImpl;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      double double0 = 434.9;
      normalDistributionImpl0.setStandardDeviation(434.9);
      Double double1 = new Double(0.0);
      BetaDistributionImpl betaDistributionImpl0 = new BetaDistributionImpl(0.0, 0.9999999999999971);
      betaDistributionImpl0.getBeta();
      Double.max(0.9999999999999971, 0.9999999999999971);
      FDistributionImpl fDistributionImpl0 = new FDistributionImpl(Double.POSITIVE_INFINITY, 0.9999999999999971);
      double double2 = 587.1375933;
      // Undeclared exception!
      fDistributionImpl0.inverseCumulativeProbability(0.9999999999999971);
  }
}
