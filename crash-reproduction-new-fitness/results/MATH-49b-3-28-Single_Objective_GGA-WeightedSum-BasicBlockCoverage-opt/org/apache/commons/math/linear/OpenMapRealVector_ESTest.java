/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 21:37:29 UTC 2021
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1558.934394;
      doubleArray0[1] = 439.77193162174;
      doubleArray0[2] = 2427.403;
      doubleArray0[3] = (-1650.7160974478138);
      doubleArray0[4] = (-922.425333687);
      doubleArray0[5] = (-847.85);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      openMapRealVector0.combine(2427.403, 582.616683262845, (RealVector) openMapRealVector0);
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.unitVector();
      UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
      RealVector realVector0 = openMapRealVector0.map(univariateRealFunction0);
      // Undeclared exception!
      openMapRealVector1.ebeMultiply(realVector0);
  }
}
