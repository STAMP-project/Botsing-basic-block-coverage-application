/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 20:46:39 UTC 2020
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short) (-1184);
      short short0 = (short)0;
      shortArray0[1] = (short)0;
      shortArray0[2] = (short) (-776);
      shortArray0[3] = (short) (-1389);
      shortArray0[4] = (short)0;
      shortArray0[5] = (short)0;
      shortArray0[6] = (short)975;
      shortArray0[7] = (short)2298;
      NumberUtils.min(shortArray0);
      NumberUtils.toShort("", (short) (-1389));
      NumberUtils.min((float) (short) (-1389), (float) (short)975, 0.0F);
      NumberUtils.max(shortArray0);
      NumberUtils.max((double) (short)0, (double) (short) (-776), (-1.0));
      // Undeclared exception!
      NumberUtils.createInteger("Array cannot be empty.");
  }
}
