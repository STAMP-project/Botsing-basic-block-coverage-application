/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:31:30 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BracketingNthOrderBrentSolver_ESTest extends BracketingNthOrderBrentSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      bracketingNthOrderBrentSolver0.isSequence(1512.7350618783234, 1512.7350618783234, 4614.066338656817);
      UnivariateFunction univariateFunction0 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(univariateFunction0).value(anyDouble());
      bracketingNthOrderBrentSolver0.solve(141, univariateFunction0, 1512.7350618783234);
      bracketingNthOrderBrentSolver0.getMaximalOrder();
      bracketingNthOrderBrentSolver0.getMaximalOrder();
      bracketingNthOrderBrentSolver0.getRelativeAccuracy();
      bracketingNthOrderBrentSolver0.getEvaluations();
      bracketingNthOrderBrentSolver0.getRelativeAccuracy();
      bracketingNthOrderBrentSolver0.doSolve();
      bracketingNthOrderBrentSolver0.verifySequence((-1652.8866087017), (-1.0), 1.0E-14);
      bracketingNthOrderBrentSolver0.incrementEvaluationCount();
      bracketingNthOrderBrentSolver0.getFunctionValueAccuracy();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver1 = new BracketingNthOrderBrentSolver();
      SincFunction sincFunction0 = new SincFunction();
      // Undeclared exception!
      bracketingNthOrderBrentSolver1.solve(5, (UnivariateFunction) sincFunction0, 0.4132472276687622, 1512.7350618783234, allowedSolution0);
  }
}
