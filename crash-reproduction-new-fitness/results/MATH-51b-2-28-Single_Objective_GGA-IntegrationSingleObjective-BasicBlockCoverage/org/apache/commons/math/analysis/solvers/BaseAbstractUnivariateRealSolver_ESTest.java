/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:45:05 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
      double double0 = (-1461.6080678305);
      int int0 = 2333;
      QuinticFunction quinticFunction0 = new QuinticFunction();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2204.4659895817645));
      LaguerreSolver laguerreSolver0 = new LaguerreSolver(14.850971613019757);
      laguerreSolver0.isSequence(56.181827, (-1811.0023894412), (-0.9099307615643824));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-0.9099307615643824);
      doubleArray0[1] = 1.0E-14;
      doubleArray0[2] = (-0.9099307615643824);
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      polynomialFunction0.value(3354.2917583582);
      laguerreSolver0.setup((-626), polynomialFunction0, (-1811.0023894412), 0.0, 1285.6109);
      double double1 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double2 = 2377.0;
      NewtonSolver newtonSolver0 = new NewtonSolver(2377.0);
      QuinticFunction quinticFunction1 = new QuinticFunction();
      // Undeclared exception!
      newtonSolver0.doSolve();
  }
}
