/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 06:58:26 UTC 2021
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.SimpleScalarValueChecker;
import org.apache.commons.math.optimization.direct.NelderMead;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DirectSearchOptimizer_ESTest extends DirectSearchOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NelderMead nelderMead0 = new NelderMead();
      SimpleScalarValueChecker simpleScalarValueChecker0 = new SimpleScalarValueChecker();
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[2];
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2332.394980258);
      doubleArray0[2] = (-298.936708077147);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2962.020896);
      doubleArray0[5] = 0.559;
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, (-997.58059));
      RealPointValuePair realPointValuePair1 = new RealPointValuePair(doubleArray0, (-2962.020896));
      nelderMead0.setMaxIterations((-352));
      try { 
        nelderMead0.incrementIterationsCounter();
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (-352) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
