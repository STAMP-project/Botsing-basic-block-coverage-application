/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 13:23:16 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.field.DelegatedDateTimeField;
import org.joda.time.format.DateTimeParserBucket;
import org.joda.time.tz.FixedDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.UTC;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      DateTimeField dateTimeField0 = buddhistChronology0.yearOfEra();
      Locale locale0 = Locale.PRC;
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(dateTimeField0, "Cc7{<|6P8TyVtwv$R", locale0);
      DelegatedDateTimeField delegatedDateTimeField0 = new DelegatedDateTimeField(dateTimeField0);
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField1 = new DateTimeParserBucket.SavedField(delegatedDateTimeField0, "Cc7{<|6P8TyVtwv$R", locale0);
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField2 = new DateTimeParserBucket.SavedField(dateTimeField0, "3", locale0);
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField3 = new DateTimeParserBucket.SavedField(delegatedDateTimeField0, 365);
      dateTimeParserBucket_SavedField3.compareTo(dateTimeParserBucket_SavedField0);
      Integer integer0 = Integer.valueOf(57);
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(365, buddhistChronology0, locale0, integer0);
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      dateTimeParserBucket0.saveField(dateTimeFieldType0, (String) null, locale0);
      DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
      DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState1 = dateTimeParserBucket0.new SavedState();
      Integer integer1 = dateTimeParserBucket_SavedState1.iOffset;
      Integer integer2 = new Integer(0);
      dateTimeParserBucket0.setPivotYear(integer2);
      DateTimeFieldType.era();
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(true, "3");
  }
}
