/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:48:58 UTC 2020
 */

package org.apache.commons.math.special;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.MaxIterationsExceededException;
import org.apache.commons.math.special.Gamma;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Gamma_ESTest extends Gamma_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = (-1166.0);
      double double1 = 822.7591943893098;
      Gamma.regularizedGammaQ((-1166.0), 822.7591943893098, 822.7591943893098, Integer.MAX_VALUE);
      Gamma.regularizedGammaQ(Double.NaN, (-1166.0));
      double double2 = 0.0;
      Gamma.logGamma(0.0);
      Gamma.regularizedGammaP((-638.8687039884176), 0.0, Double.NaN, Integer.MAX_VALUE);
      double double3 = 2554.410344896052;
      int int0 = 0;
      try { 
        Gamma.regularizedGammaP(2554.410344896052, 2554.410344896052, 822.7591943893098, 0);
        fail("Expecting exception: MaxIterationsExceededException");
      
      } catch(MaxIterationsExceededException e) {
         //
         // Maximal number of iterations (0) exceeded
         //
         verifyException("org.apache.commons.math.special.Gamma", e);
      }
  }
}
