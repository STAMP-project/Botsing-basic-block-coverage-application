/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 22:55:42 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Hashtable;
import javax.inject.Provider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.component.descriptor.DefaultComponentDescriptor;
import org.xwiki.rendering.block.DefinitionDescriptionBlock;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.internal.macro.toc.TocMacro;
import org.xwiki.rendering.internal.renderer.DefaultLinkLabelGenerator;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.parser.Parser;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TocMacro_ESTest extends TocMacro_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultLinkLabelGenerator defaultLinkLabelGenerator0 = new DefaultLinkLabelGenerator();
      Parser parser0 = mock(Parser.class, new ViolatedAssumptionAnswer());
      TocMacro tocMacro0 = new TocMacro();
      Injector.inject(tocMacro0, (Class<?>) TocMacro.class, "linkLabelGenerator", (Object) defaultLinkLabelGenerator0);
      Injector.inject(tocMacro0, (Class<?>) TocMacro.class, "plainTextParser", (Object) parser0);
      Provider<DefinitionDescriptionBlock> provider0 = (Provider<DefinitionDescriptionBlock>) mock(Provider.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(provider0).get();
      Injector.inject(tocMacro0, (Class<?>) TocMacro.class, "wikiModelProvider", (Object) provider0);
      DefaultComponentDescriptor<DefinitionDescriptionBlock> defaultComponentDescriptor0 = new DefaultComponentDescriptor<DefinitionDescriptionBlock>();
      DefaultComponentDescriptor<DefinitionDescriptionBlock> defaultComponentDescriptor1 = new DefaultComponentDescriptor<DefinitionDescriptionBlock>();
      DefaultComponentDescriptor<DefinitionDescriptionBlock> defaultComponentDescriptor2 = new DefaultComponentDescriptor<DefinitionDescriptionBlock>();
      DefaultComponentDescriptor<DefinitionDescriptionBlock> defaultComponentDescriptor3 = new DefaultComponentDescriptor<DefinitionDescriptionBlock>();
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      TransformationContext transformationContext0 = null;
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext((TransformationContext) null);
      Hashtable<String, String> hashtable0 = new Hashtable<String, String>();
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      MacroBlock macroBlock0 = new MacroBlock("Navigation", hashtable0, true);
      macroTransformationContext0.setCurrentMacroBlock(macroBlock0);
      String string0 = null;
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      // Undeclared exception!
      tocMacro0.execute(tocMacroParameters0, "SuspectedMemberIsNull", macroTransformationContext0);
  }
}
