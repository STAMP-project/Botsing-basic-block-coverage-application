/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 20:11:16 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
      Line line0 = new Line(vector3D0, vector3D0);
      Line line1 = new Line(vector3D0, vector3D0);
      line1.isSimilarTo(line1);
      Vector3D vector3D1 = line1.getOrigin();
      Line line2 = new Line(line0);
      line1.isSimilarTo(line0);
      Vector3D vector3D2 = line1.getOrigin();
      Vector3D vector3D3 = new Vector3D(0.19999999999923582, vector3D2, 1.0, vector3D0);
      line0.toSubSpace(vector3D1);
      Vector3D vector3D4 = new Vector3D((-528.0), vector3D3, 79.9741163677, vector3D1);
      line1.reset(vector3D4, vector3D4);
      Vector3D vector3D5 = null;
      line2.reset(vector3D1, vector3D3);
      line0.pointAt((-1.0));
      line2.wholeLine();
      // Undeclared exception!
      line1.getAbscissa((Vector3D) null);
  }
}
