/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 05:41:33 UTC 2020
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.GroupBlock;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.listener.Listener;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.syntax.Syntax;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      MacroTransformationContext macroTransformationContext0 = mock(MacroTransformationContext.class, new ViolatedAssumptionAnswer());
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      TransformationContext transformationContext0 = new TransformationContext();
      ArrayList<Block> arrayList0 = new ArrayList<Block>();
      Map<String, String> map0 = Listener.EMPTY_PARAMETERS;
      GroupBlock groupBlock0 = new GroupBlock();
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      ArrayList<Block> arrayList1 = new ArrayList<Block>();
      Map<String, String> map1 = Listener.EMPTY_PARAMETERS;
      GroupBlock groupBlock1 = new GroupBlock(arrayList1, map0);
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      treeParametersBuilder0.build(block0, tocMacroParameters1, macroTransformationContext0);
      Syntax syntax0 = Syntax.EVENT_1_0;
      MacroTransformationContext macroTransformationContext1 = new MacroTransformationContext();
      macroTransformationContext1.getXDOM();
      MacroTransformationContext macroTransformationContext2 = new MacroTransformationContext();
      MacroTransformationContext macroTransformationContext3 = new MacroTransformationContext();
      macroTransformationContext3.getTransformation();
      treeParametersBuilder0.build((Block) null, tocMacroParameters0, macroTransformationContext1);
      TocMacroParameters tocMacroParameters2 = new TocMacroParameters();
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters2.setScope(tocMacroParameters_Scope0);
      syntax0.equals(tocMacroParameters2);
      TocMacroParameters tocMacroParameters3 = new TocMacroParameters();
      MacroTransformationContext macroTransformationContext4 = macroTransformationContext1.clone();
      tocMacroParameters2.setDepth(1);
      MacroTransformationContext macroTransformationContext5 = macroTransformationContext4.clone();
      Map<String, String> map2 = ZoneId.SHORT_IDS;
      MacroBlock macroBlock0 = new MacroBlock("Dqh", map2, "eli", false);
      macroTransformationContext5.setCurrentMacroBlock(macroBlock0);
      tocMacroParameters0.setReference((String) null);
      // Undeclared exception!
      treeParametersBuilder0.build(groupBlock0, tocMacroParameters2, macroTransformationContext5);
  }
}
