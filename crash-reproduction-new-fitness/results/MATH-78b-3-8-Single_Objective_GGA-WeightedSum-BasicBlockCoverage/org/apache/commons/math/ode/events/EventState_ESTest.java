/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 22:15:45 UTC 2020
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      StepProblem stepProblem0 = new StepProblem((-1071.415353965678), (-12), (-1071.415353965678));
      EventState eventState0 = new EventState(stepProblem0, (-1.0), (-1.0), (-12));
      double[] doubleArray0 = new double[24];
      doubleArray0[5] = (double) (-12);
      eventState0.stepAccepted(1895.342322614235, doubleArray0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) (-12);
      doubleArray0[5] = (-1071.415353965678);
      eventState0.stepAccepted(2411.088681138495, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted((-1.0), doubleArray0);
      EventState eventState1 = new EventState(eventHandler0, (-1.0), 1042.103140323048, 355);
      dummyStepInterpolator0.storeTime(2984.625988489267);
      eventState1.getEventHandler();
      // Undeclared exception!
      eventState0.evaluateStep(dummyStepInterpolator0);
  }
}
