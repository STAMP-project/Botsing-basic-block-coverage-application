/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 16:37:52 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DurationField;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.field.SkipUndoDateTimeField;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      DateTimeField dateTimeField0 = buddhistChronology0.dayOfYear();
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(dateTimeField0, (-2253));
      Locale locale0 = Locale.CHINA;
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-2253), buddhistChronology0, locale0);
      DurationField durationField0 = buddhistChronology0.millis();
      DateTimeParserBucket.compareReverse(durationField0, durationField0);
      SkipUndoDateTimeField skipUndoDateTimeField0 = new SkipUndoDateTimeField(chronology0, dateTimeField0);
      skipUndoDateTimeField0.getLeapDurationField();
      DateTimeParserBucket.compareReverse((DurationField) null, (DurationField) null);
      dateTimeParserBucket0.saveField(dateTimeFieldType0, (-2253));
      Integer integer0 = new Integer((-2253));
      dateTimeParserBucket0.saveState();
      dateTimeParserBucket0.getPivotYear();
      dateTimeParserBucket0.getPivotYear();
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(true, "");
  }
}
