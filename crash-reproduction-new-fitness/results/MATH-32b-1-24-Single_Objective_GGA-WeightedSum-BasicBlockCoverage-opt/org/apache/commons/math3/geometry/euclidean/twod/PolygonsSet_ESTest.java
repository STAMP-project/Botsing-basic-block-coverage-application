/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:54:18 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet();
      double double0 = (-2084.359935);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      double double1 = (-1856.0);
      PolygonsSet polygonsSet1 = new PolygonsSet((-1721.1), 1866.828841148, (-2084.359935), (-698.6367));
      Vector<Euclidean2D> vector0 = polygonsSet0.getBarycenter();
      polygonsSet1.checkPoint(vector0);
      polygonsSet1.getBoundarySize();
      BSPTree<Euclidean2D> bSPTree0 = polygonsSet1.getTree(false);
      Vector2D vector2D0 = Vector2D.ZERO;
      Line line0 = new Line(vector2D0, 1866.828841148);
      SubLine subLine0 = line0.wholeHyperplane();
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.split(subLine0);
      PolygonsSet polygonsSet2 = polygonsSet0.buildNew(bSPTree0);
      PolygonsSet polygonsSet3 = new PolygonsSet(linkedList0);
      polygonsSet3.copySelf();
      polygonsSet2.intersection(subLine0);
      bSPTree1.insertInTree(bSPTree0, false);
      polygonsSet3.isEmpty();
      // Undeclared exception!
      polygonsSet2.computeGeometricalProperties();
  }
}
