/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 15:30:31 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import com.xpn.xwiki.web.Utils;
import javax.inject.Provider;
import org.apache.commons.chain.web.servlet.ServletWebContext;
import org.apache.commons.dbcp2.PoolingConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Query;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.junit.runner.RunWith;
import org.xwiki.component.manager.ComponentManager;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.query.internal.EscapeLikeParametersFilter;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Utils.setComponentManager((ComponentManager) null);
      ContextualAuthorizationManager contextualAuthorizationManager1 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Provider<PoolingConnection> provider0 = (Provider<PoolingConnection>) mock(Provider.class, new ViolatedAssumptionAnswer());
      DefaultQuery defaultQuery0 = new DefaultQuery("\"!~\"", hqlQueryExecutor0);
      EscapeLikeParametersFilter escapeLikeParametersFilter0 = new EscapeLikeParametersFilter();
      escapeLikeParametersFilter0.filterQuery(defaultQuery0);
      String string0 = "hql";
      DefaultQuery defaultQuery1 = new DefaultQuery("hql", (String) null, hqlQueryExecutor0);
      defaultQuery1.addFilter(escapeLikeParametersFilter0);
      String string1 = "select doc.fullName from XWikiDocument doc ";
      defaultQuery0.bindValue("TvXHp1CK4(me%#5HL");
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      ServletWebContext servletWebContext0 = new ServletWebContext();
      ParameterMetadata parameterMetadata0 = new ParameterMetadata((OrdinalParameterDescriptor[]) null, servletWebContext0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("TvXHp1CK4(me%#5HL", defaultQuery0, sessionImplementor0, parameterMetadata0);
      Query query0 = collectionFilterImpl0.setReadOnly(true);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(query0, defaultQuery0);
  }
}
