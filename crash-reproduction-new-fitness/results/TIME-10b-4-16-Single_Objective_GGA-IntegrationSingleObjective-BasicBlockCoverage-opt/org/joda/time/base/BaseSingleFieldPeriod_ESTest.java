/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 09:25:27 UTC 2021
 */

package org.joda.time.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.MonthDay;
import org.joda.time.Months;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePartial;
import org.joda.time.chrono.JulianChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSingleFieldPeriod_ESTest extends BaseSingleFieldPeriod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Calendar.getInstance();
      Calendar calendar0 = Calendar.getInstance();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar();
      GregorianCalendar gregorianCalendar1 = new GregorianCalendar();
      Days days0 = Days.SEVEN;
      PeriodType.years();
      days0.toString();
      TimeZone.getTimeZone("");
      int int0 = (-1406);
      Hours hours0 = Hours.ONE;
      days0.toStandardSeconds();
      days0.getFieldType();
      JulianChronology.getInstance();
      Date date0 = calendar0.getTime();
      MonthDay monthDay0 = MonthDay.fromDateFields(date0);
      MonthDay monthDay1 = monthDay0.withMonthOfYear(2);
      // Undeclared exception!
      Months.monthsBetween((ReadablePartial) monthDay0, (ReadablePartial) monthDay1);
  }
}
