/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 07:11:10 UTC 2021
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.distribution.DiscreteDistribution;
import org.apache.commons.math3.random.Well44497a;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DiscreteDistribution_ESTest extends DiscreteDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a();
      LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
      Well44497a well44497a1 = new Well44497a();
      LinkedList<Pair<Object, Double>> linkedList1 = new LinkedList<Pair<Object, Double>>();
      Short short0 = new Short((short)0);
      Double double0 = new Double((short)1259);
      Short short1 = new Short((short)0);
      Long long0 = new Long((short)1259);
      Double double1 = new Double((short)0);
      Pair<Long, Double> pair0 = new Pair<Long, Double>(long0, double1);
      Pair<Object, Double> pair1 = new Pair<Object, Double>(pair0);
      linkedList1.offer(pair1);
      Pair<Short, Double> pair2 = new Pair<Short, Double>(short1, double0);
      Pair<Object, Double> pair3 = new Pair<Object, Double>(pair2);
      linkedList1.addLast(pair3);
      DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(linkedList1);
      discreteDistribution0.sample();
      int int0 = 1498;
      // Undeclared exception!
      discreteDistribution0.sample(373);
  }
}
