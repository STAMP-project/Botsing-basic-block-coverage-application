/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:42:53 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1792.0));
      illinoisSolver0.solve(14, univariateRealFunction0, (-860.1406921), (double) 14, (-688.1241827));
      SincFunction sincFunction0 = new SincFunction();
      // Undeclared exception!
      illinoisSolver0.solve(3, (UnivariateRealFunction) sincFunction0, (-1.0), 413.732481205705, 573001.0);
  }
}
