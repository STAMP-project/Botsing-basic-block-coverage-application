/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:05:28 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = (-819.856615708062);
      QuinticFunction quinticFunction0 = new QuinticFunction();
      SinFunction sinFunction0 = new SinFunction();
      sinFunction0.derivative();
      BaseSecantSolver.Method baseSecantSolver_Method0 = BaseSecantSolver.Method.PEGASUS;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      int int0 = 150;
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      quinticFunction0.derivative();
      // Undeclared exception!
      regulaFalsiSolver0.solve(150, (UnivariateRealFunction) sinFunction0, (-819.856615708062), 1.1817542653083615, 1333.1188, allowedSolution0);
  }
}
