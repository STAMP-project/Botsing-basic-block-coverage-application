/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 04:13:53 UTC 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.LinkedHashSet;
import java.util.function.Consumer;
import org.apache.commons.lang3.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(consumer0).toString();
      linkedHashSet0.forEach(consumer0);
      Object[] objectArray0 = new Object[3];
      CharBuffer.allocate(1471);
      CharBuffer charBuffer0 = CharBuffer.allocate(13);
      linkedHashSet0.add(charBuffer0);
      StringUtils.join(objectArray0, "RQSlAVq");
      String string0 = "Vb";
      StringUtils.containsNone((CharSequence) "RQSlAVqRQSlAVq", "Vb");
      Object object0 = new Object();
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) consumer0;
      objectArray1[1] = (Object) "RQSlAVq";
      // Undeclared exception!
      StringUtils.join(objectArray1, "sun.text.Normalizer is aot available");
  }
}
