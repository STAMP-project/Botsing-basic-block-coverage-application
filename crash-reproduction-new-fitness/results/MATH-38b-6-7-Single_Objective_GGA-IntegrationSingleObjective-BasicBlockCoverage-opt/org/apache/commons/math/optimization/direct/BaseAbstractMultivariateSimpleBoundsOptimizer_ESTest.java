/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:26:41 UTC 2021
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MultivariateFunction;
import org.apache.commons.math.analysis.SumSincFunction;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.direct.BOBYQAOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractMultivariateSimpleBoundsOptimizer_ESTest extends BaseAbstractMultivariateSimpleBoundsOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultivariateFunction multivariateFunction0 = mock(MultivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(multivariateFunction0).value(any(double[].class));
      int int0 = 23;
      double double0 = (-1930.1);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(23, (-1930.1), 2.2250738585072014E-306);
      SumSincFunction sumSincFunction0 = new SumSincFunction(2037.8671514287);
      int int1 = 477;
      sumSincFunction0.partialDerivative(477);
      sumSincFunction0.partialDerivative(794);
      GoalType goalType0 = GoalType.MINIMIZE;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1615.9775248520841;
      doubleArray0[1] = 533.186;
      doubleArray0[2] = (-1930.1);
      doubleArray0[3] = (double) 477;
      doubleArray0[4] = (double) 794;
      doubleArray0[5] = (-1930.1);
      doubleArray0[6] = (double) 190;
      doubleArray0[7] = (-1930.1);
      doubleArray0[8] = (double) 23;
      // Undeclared exception!
      bOBYQAOptimizer0.optimize(190, multivariateFunction0, goalType0, doubleArray0);
  }
}
