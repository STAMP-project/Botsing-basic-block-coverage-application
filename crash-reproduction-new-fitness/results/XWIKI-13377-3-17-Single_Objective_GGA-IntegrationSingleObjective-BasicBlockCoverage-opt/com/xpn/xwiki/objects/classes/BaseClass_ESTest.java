/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 01 16:04:43 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.BaseObject;
import com.xpn.xwiki.objects.classes.BaseClass;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JLayeredPane;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hibernate.engine.RowSelection;
import org.junit.runner.RunWith;
import org.xwiki.model.reference.DocumentReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentReference documentReference0 = mock(DocumentReference.class, new ViolatedAssumptionAnswer());
      XWikiContext xWikiContext0 = new XWikiContext();
      BaseObject baseObject0 = new BaseObject();
      BaseClass baseClass0 = new BaseClass();
      baseClass0.addPasswordField("_", "CACHE_ENTRY_EXPIRED", (-583));
      baseClass0.safeget("CACHE_ENTRY_EXPIRED");
      baseClass0.getCustomMapping();
      baseClass0.getField("");
      TreeMap<String, Integer> treeMap0 = new TreeMap<String, Integer>();
      RowSelection rowSelection0 = new RowSelection();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = new Integer((-1599));
      Integer integer2 = GVTAttributedCharacterIterator.TextAttribute.WRITING_MODE_TTB;
      rowSelection0.setTimeout(integer2);
      rowSelection0.setTimeout(integer1);
      rowSelection0.getMaxRows();
      treeMap0.put("numberType", integer0);
      baseClass0.addTemplateField("numberType", "");
      // Undeclared exception!
      baseClass0.fromMap((Map<String, ?>) treeMap0, (BaseCollection) baseObject0);
  }
}
