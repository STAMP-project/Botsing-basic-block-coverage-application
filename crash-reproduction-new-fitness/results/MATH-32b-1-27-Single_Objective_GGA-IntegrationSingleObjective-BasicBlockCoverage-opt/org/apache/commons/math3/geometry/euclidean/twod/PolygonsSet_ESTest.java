/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 11:10:40 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector2D vector2D0 = Vector2D.NaN;
      Vector2D vector2D1 = new Vector2D((-494.5707630405338), vector2D0);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet0 = new PolygonsSet();
      Line line0 = new Line(vector2D1, (-494.5707630405338));
      SubLine subLine0 = line0.wholeHyperplane();
      Vector1D vector1D0 = Vector1D.ZERO;
      OrientedPoint orientedPoint0 = new OrientedPoint(vector1D0, true);
      orientedPoint0.copySelf();
      IntervalsSet intervalsSet0 = new IntervalsSet();
      orientedPoint0.wholeHyperplane();
      AbstractSubHyperplane<Euclidean2D, Euclidean1D> abstractSubHyperplane0 = subLine0.buildNew(line0, intervalsSet0);
      subLine0.getSegments();
      polygonsSet0.intersection(abstractSubHyperplane0);
      polygonsSet0.getVertices();
      vector2D0.distance1(vector2D1);
      Vector2D vector2D2 = new Vector2D((-494.5707630405338), vector2D1, (-494.5707630405338), vector2D1, (-494.5707630405338), vector2D0);
      Euclidean2D.getInstance();
      BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.split(abstractSubHyperplane0);
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);
      PolygonsSet polygonsSet2 = polygonsSet1.buildNew(bSPTree1);
      polygonsSet2.checkPoint(vector2D2);
      // Undeclared exception!
      polygonsSet1.computeGeometricalProperties();
  }
}
