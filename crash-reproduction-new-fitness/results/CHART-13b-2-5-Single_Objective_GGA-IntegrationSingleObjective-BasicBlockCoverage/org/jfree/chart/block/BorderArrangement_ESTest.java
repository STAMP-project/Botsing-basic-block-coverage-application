/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:09:57 UTC 2020
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.block.Block;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BorderArrangement_ESTest extends BorderArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BorderArrangement borderArrangement0 = new BorderArrangement();
      borderArrangement0.add((Block) null, (Object) null);
      borderArrangement0.add((Block) null, (Object) null);
      Object object0 = new Object();
      borderArrangement0.equals(object0);
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangleConstraint0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangleConstraint0).getWidth();
      borderArrangement0.arrangeFF((BlockContainer) null, (Graphics2D) null, rectangleConstraint0);
      borderArrangement0.clear();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultMultiValueCategoryDataset0.getRangeBounds(false);
      Size2D size2D0 = borderArrangement0.arrangeRR((BlockContainer) null, range0, range0, (Graphics2D) null);
      Object object1 = new Object();
      borderArrangement0.clear();
      size2D0.setWidth(0.0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.0);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      Range range1 = new Range(2.0E7, 0.0);
  }
}
