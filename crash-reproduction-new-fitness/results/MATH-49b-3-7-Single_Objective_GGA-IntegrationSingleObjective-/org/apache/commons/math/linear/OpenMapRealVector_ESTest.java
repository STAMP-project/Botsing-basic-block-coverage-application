/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:18:33 UTC 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-5.8256569);
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      openMapRealVector0.cosine((RealVector) openMapRealVector0);
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd((-5.8256569));
      OpenMapRealVector openMapRealVector2 = openMapRealVector1.copy();
      OpenMapRealVector openMapRealVector3 = openMapRealVector1.mapAdd((-5.8256569));
      openMapRealVector1.getMaxIndex();
      OpenMapRealVector openMapRealVector4 = (OpenMapRealVector)openMapRealVector3.mapSubtractToSelf((-5.8256569));
      openMapRealVector1.getMinValue();
      OpenMapRealVector openMapRealVector5 = openMapRealVector1.ebeMultiply((RealVector) openMapRealVector4);
      openMapRealVector2.combineToSelf(0.0, (-463.29), (RealVector) openMapRealVector0);
      openMapRealVector1.mapDivide(0.0);
      OpenMapRealVector openMapRealVector6 = openMapRealVector5.subtract(doubleArray0);
      openMapRealVector3.getDistance(openMapRealVector6);
      // Undeclared exception!
      openMapRealVector4.ebeMultiply((RealVector) openMapRealVector2);
  }
}
