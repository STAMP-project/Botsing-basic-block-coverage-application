/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 21:00:10 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BisectionSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.LaguerreSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BisectionSolver bisectionSolver0 = new BisectionSolver();
      bisectionSolver0.getEvaluations();
      double double0 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      LaguerreSolver laguerreSolver0 = new LaguerreSolver((-6.570567295532957), (-6.570567295532957));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1790;
      doubleArray0[1] = (-6.570567295532957);
      doubleArray0[2] = 1.0E-6;
      doubleArray0[3] = (double) 1790;
      doubleArray0[4] = 1.0E-6;
      doubleArray0[5] = 1.0E-6;
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      laguerreSolver0.isSequence(737.50020477, 1.0E-6, 1.0E-6);
      bisectionSolver0.getEvaluations();
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
      polynomialFunction0.multiply(polynomialFunction1);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      int int0 = 1138;
      polynomialFunction0.derivative();
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(1138, (UnivariateFunction) polynomialFunction0, (-623.35), 1.0E-6, (-414.69475));
  }
}
