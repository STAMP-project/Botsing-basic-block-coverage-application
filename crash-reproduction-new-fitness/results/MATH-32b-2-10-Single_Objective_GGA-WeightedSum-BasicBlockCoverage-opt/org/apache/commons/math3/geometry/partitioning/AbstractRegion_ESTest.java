/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 15:13:34 UTC 2021
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Euclidean3D euclidean3D0 = Euclidean3D.getInstance();
      Euclidean2D euclidean2D0 = euclidean3D0.getSubSpace();
      Euclidean1D euclidean1D0 = euclidean2D0.getSubSpace();
      BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>(euclidean1D0);
      Euclidean1D.getInstance();
      Euclidean2D euclidean2D1 = Euclidean2D.getInstance();
      Euclidean2D euclidean2D2 = Euclidean2D.getInstance();
      Euclidean3D.getInstance();
      IntervalsSet intervalsSet0 = new IntervalsSet(bSPTree0);
      OrientedPoint orientedPoint0 = new OrientedPoint((Vector1D) null, false);
      OrientedPoint orientedPoint1 = orientedPoint0.copySelf();
      euclidean2D2.getSubSpace();
      BSPTree<Euclidean1D> bSPTree1 = new BSPTree<Euclidean1D>("u");
      Euclidean1D.getInstance();
      IntervalsSet intervalsSet1 = new IntervalsSet(bSPTree1);
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(orientedPoint1);
      BSPTree<Euclidean1D> bSPTree3 = new BSPTree<Euclidean1D>(orientedPoint1);
      Euclidean1D.getInstance();
      Euclidean1D.getInstance();
      Euclidean2D.getInstance();
      Euclidean3D.getInstance();
      IntervalsSet intervalsSet2 = new IntervalsSet(bSPTree3);
      OrientedPoint orientedPoint2 = new OrientedPoint((Vector1D) null, true);
      euclidean2D1.getSubSpace();
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree2);
      // Undeclared exception!
      polygonsSet0.getSize();
  }
}
