/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:34:33 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D(3885.19346815, 3885.19346815);
      Vector3D vector3D1 = Vector3D.MINUS_K;
      vector3D0.toString();
      Vector3D.dotProduct(vector3D0, vector3D1);
      Vector3D vector3D2 = Vector3D.NEGATIVE_INFINITY;
      Vector3D vector3D3 = new Vector3D(1.0E-10, vector3D1, (-1376.23914844), vector3D0, (-0.8172624219370355), vector3D1);
      Line line0 = new Line(vector3D3, vector3D1);
      Line line1 = new Line(line0);
      line0.toSubSpace(vector3D0);
      Vector3D vector3D4 = new Vector3D(2861.97047755532, vector3D3, (-1376.23914844), vector3D1, (-1.0), vector3D3);
      Line line2 = new Line(vector3D0, vector3D4);
      Line line3 = new Line(line0);
      line3.revert();
      Line line4 = new Line(line3);
      // Undeclared exception!
      line3.getAbscissa((Vector3D) null);
  }
}
