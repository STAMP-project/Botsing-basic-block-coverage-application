/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 04:11:06 UTC 2021
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.chaining.BlockStateChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BlockStateChainingListener_ESTest extends BlockStateChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ListenerChain listenerChain0 = new ListenerChain();
      BlockStateChainingListener blockStateChainingListener0 = new BlockStateChainingListener(listenerChain0);
      blockStateChainingListener0.onSpecialSymbol('h');
      BlockStateChainingListener blockStateChainingListener1 = new BlockStateChainingListener(listenerChain0);
      Map<String, String> map0 = null;
      BlockStateChainingListener blockStateChainingListener2 = new BlockStateChainingListener(listenerChain0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Format format0 = Format.MONOSPACE;
      ListenerChain listenerChain1 = new ListenerChain();
      BlockStateChainingListener blockStateChainingListener3 = new BlockStateChainingListener(listenerChain1);
      Format format1 = Format.UNDERLINED;
      listenerChain1.addListener(blockStateChainingListener2);
      blockStateChainingListener3.endFormat(format1, (Map<String, String>) null);
      blockStateChainingListener3.popLinkDepth();
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain0);
      listenerChain1.addListener(emptyBlockChainingListener0);
      // Undeclared exception!
      blockStateChainingListener3.endFormat(format0, (Map<String, String>) null);
  }
}
