/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:44:36 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.function.Consumer;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean2D> bSPTree0 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      polygonsSet0.isEmpty();
      polygonsSet0.computeGeometricalProperties();
      BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>();
      Euclidean1D euclidean1D0 = Euclidean1D.getInstance();
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(euclidean1D0);
      Vector3D vector3D0 = Vector3D.MINUS_K;
      Plane plane0 = new Plane(vector3D0, vector3D0);
      Vector2D vector2D0 = plane0.toSubSpace(vector3D0);
      Vector2D vector2D1 = new Vector2D((-3224.1952663), vector2D0, (-713.132), vector2D0, (-2762.294), vector2D0, 1.9987994582857286E-8, vector2D0);
      bSPTree2.getCell(vector2D1);
      Line line0 = new Line(vector2D1, (-2762.294));
      Vector1D vector1D0 = line0.toSubSpace(vector2D0);
      Vector1D vector1D1 = new Vector1D(1102.7913830088146, vector1D0, 4.623565122E7, vector1D0, (-2762.294), vector1D0);
      line0.getPointAt(vector1D1, 3.141592653589793);
      bSPTree1.insertCut(line0);
      Vector2D.distance(vector2D0, vector2D0);
      BSPTree<Euclidean2D> bSPTree3 = new BSPTree<Euclidean2D>();
      bSPTree1.getCell(vector2D0);
      PolygonsSet polygonsSet1 = new PolygonsSet(4.623565122E7, 3.4028234663852886E38, 680.7099999999998, 1057.9183426706923);
      polygonsSet1.buildNew(bSPTree0);
      polygonsSet0.getVertices();
      // Undeclared exception!
      polygonsSet1.computeGeometricalProperties();
  }
}
