/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:58:07 UTC 2020
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      doReturn((-2579.436627782), 0.0, 3.7416573867739413, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      StepInterpolator stepInterpolator0 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator0).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator0).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator0).isForward();
      double[] doubleArray0 = new double[2];
      EventState eventState0 = new EventState(eventHandler0, (-8.124931659496278), 0.0, (-2145262336));
      eventState0.stepAccepted((-3712.241018), doubleArray0);
      eventState0.reset(0.0, doubleArray0);
      Double double0 = new Double((-2533.38));
      StepProblem stepProblem0 = new StepProblem(Double.NaN, (-2533.38), 0.0);
      EventState eventState1 = new EventState(stepProblem0, (-973.7241724704714), (-8.124931659496278), 6);
      eventState1.stepAccepted((-1813.0658255), doubleArray0);
      eventState1.reinitializeBegin((-2408.386600458751), doubleArray0);
      eventState0.evaluateStep(stepInterpolator0);
      eventState0.getEventHandler();
      eventState1.getMaxCheckInterval();
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
      DummyStepInterpolator dummyStepInterpolator1 = new DummyStepInterpolator(dummyStepInterpolator0);
      eventState0.evaluateStep(dummyStepInterpolator0);
  }
}
