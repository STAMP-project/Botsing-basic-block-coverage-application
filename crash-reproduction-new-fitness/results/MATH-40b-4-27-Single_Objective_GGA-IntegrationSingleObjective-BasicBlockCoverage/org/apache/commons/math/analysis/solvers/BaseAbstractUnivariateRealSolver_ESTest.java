/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:37:21 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Expm1Function expm1Function0 = new Expm1Function();
      QuinticFunction quinticFunction0 = new QuinticFunction();
      int int0 = (-2);
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      expm1Function0.derivative();
      double double0 = 1.0;
      xMinus5Function0.derivative();
      double double1 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      xMinus5Function0.derivative();
      xMinus5Function0.derivative();
      double double2 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2), 1.0E-6, (-1930.9), 2462);
      double double3 = 6.803356100690879E-7;
      bracketingNthOrderBrentSolver0.setup(1687, xMinus5Function0, Double.NaN, 1.0, (-2));
      double double4 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      NewtonSolver newtonSolver0 = new NewtonSolver();
      SinFunction sinFunction0 = new SinFunction();
      double double5 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(1687, (UnivariateFunction) sinFunction0, 1.0E-6, 2723.707148, allowedSolution0);
  }
}
