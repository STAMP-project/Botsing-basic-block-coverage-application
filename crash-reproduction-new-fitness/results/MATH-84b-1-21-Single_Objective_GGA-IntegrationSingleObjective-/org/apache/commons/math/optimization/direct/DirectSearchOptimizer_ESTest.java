/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:27:06 UTC 2020
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.SimpleRealPointChecker;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DirectSearchOptimizer_ESTest extends DirectSearchOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional(0.644, 0.644);
      SimpleRealPointChecker simpleRealPointChecker0 = new SimpleRealPointChecker();
      multiDirectional0.setConvergenceChecker(simpleRealPointChecker0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.644;
      multiDirectional0.setMaxEvaluations((-1789));
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[1];
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, 0.0, false);
      realPointValuePairArray0[0] = realPointValuePair0;
      multiDirectional0.simplex = realPointValuePairArray0;
      doubleArray0[4] = 0.644;
      multiDirectional0.getEvaluations();
      multiDirectional0.setMaxIterations(2881);
      multiDirectional0.setMaxIterations((-2468));
      multiDirectional0.setMaxIterations((-2468));
      multiDirectional0.setConvergenceChecker(simpleRealPointChecker0);
      try { 
        multiDirectional0.incrementIterationsCounter();
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (-2,468) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
