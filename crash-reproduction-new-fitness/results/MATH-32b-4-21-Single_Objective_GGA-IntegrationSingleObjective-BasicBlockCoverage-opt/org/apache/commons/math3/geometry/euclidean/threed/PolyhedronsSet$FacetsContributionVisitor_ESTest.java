/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 11:04:17 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet;
import org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolyhedronsSet$FacetsContributionVisitor_ESTest extends PolyhedronsSet$FacetsContributionVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean3D> bSPTree0 = (BSPTree<Euclidean3D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      BSPTree<Euclidean3D> bSPTree1 = (BSPTree<Euclidean3D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      BSPTree<Euclidean3D> bSPTree2 = new BSPTree<Euclidean3D>();
      Vector3D vector3D0 = Vector3D.PLUS_J;
      RotationOrder rotationOrder0 = RotationOrder.ZYX;
      Vector3D vector3D1 = rotationOrder0.getA3();
      PolyhedronsSet polyhedronsSet0 = new PolyhedronsSet((-3.4028234663852886E38), (-1.0E-10), (-1798.084655), (-922.39), (-1.0E-10), 3282.8126952499156);
      Vector3D vector3D2 = rotationOrder0.getA3();
      Vector3D.dotProduct(vector3D2, vector3D1);
      // Undeclared exception!
      polyhedronsSet0.computeGeometricalProperties();
  }
}
