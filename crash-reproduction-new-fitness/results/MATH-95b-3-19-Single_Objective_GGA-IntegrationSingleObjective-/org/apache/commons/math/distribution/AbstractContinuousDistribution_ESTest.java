/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:36:35 UTC 2020
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.CauchyDistributionImpl;
import org.apache.commons.math.distribution.ChiSquaredDistributionImpl;
import org.apache.commons.math.distribution.GammaDistributionImpl;
import org.apache.commons.math.distribution.TDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CauchyDistributionImpl cauchyDistributionImpl0 = new CauchyDistributionImpl();
      double double0 = 0.5;
      cauchyDistributionImpl0.setScale(0.5);
      TDistributionImpl tDistributionImpl0 = new TDistributionImpl(3.6899182659531625E-6);
      ChiSquaredDistributionImpl chiSquaredDistributionImpl0 = new ChiSquaredDistributionImpl(4.0E-6);
      chiSquaredDistributionImpl0.inverseCumulativeProbability(1.0);
      GammaDistributionImpl gammaDistributionImpl0 = new GammaDistributionImpl(1.0E-6, Double.POSITIVE_INFINITY);
      ChiSquaredDistributionImpl chiSquaredDistributionImpl1 = new ChiSquaredDistributionImpl(1.0E-6, gammaDistributionImpl0);
      // Undeclared exception!
      chiSquaredDistributionImpl1.inverseCumulativeProbability(3.6899182659531625E-6);
  }
}
