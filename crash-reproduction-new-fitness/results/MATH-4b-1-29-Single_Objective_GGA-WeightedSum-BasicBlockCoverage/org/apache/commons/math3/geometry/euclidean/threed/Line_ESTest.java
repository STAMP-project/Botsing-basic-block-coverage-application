/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 00:56:20 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector<Euclidean3D> vector0 = (Vector<Euclidean3D>) mock(Vector.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.008336750013465571;
      doubleArray0[1] = 0.008336750013465571;
      doubleArray0[2] = 0.008336750013465571;
      Vector3D vector3D0 = new Vector3D(doubleArray0);
      Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);
      Vector3D vector3D2 = new Vector3D(0.008336750013465571, vector3D1, 0.008336750013465571, vector3D1, 729.634732587, vector3D0, (-1.0), vector3D1);
      Line line0 = new Line(vector3D2, vector3D0);
      Line line1 = new Line(line0);
      Line line2 = new Line(line0);
      line0.closestPoint(line1);
      Vector3D vector3D3 = line1.pointAt((-1928.60896));
      line2.toSubSpace(vector3D1);
      Vector3D vector3D4 = Vector3D.MINUS_I;
      Line line3 = new Line(vector3D1, vector3D3);
      Vector3D vector3D5 = Vector3D.MINUS_I;
      Line line4 = new Line(vector3D1, vector3D0);
      Line line5 = new Line(line3);
      line5.distance(line3);
      line5.getDirection();
      // Undeclared exception!
      line2.getAbscissa((Vector3D) null);
  }
}
