/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:50:39 UTC 2020
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.distribution.DiscreteDistribution;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DiscreteDistribution_ESTest extends DiscreteDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      LinkedList<Pair<Byte, Double>> linkedList1 = new LinkedList<Pair<Byte, Double>>();
      Byte byte0 = new Byte((byte)0);
      Byte byte1 = new Byte((byte)0);
      LinkedList<Pair<Object, Double>> linkedList2 = new LinkedList<Pair<Object, Double>>();
      Double double0 = new Double((byte)0);
      Double.isFinite(642.5360181722095);
      Pair<Object, Double> pair0 = new Pair<Object, Double>(linkedList2, double0);
      linkedList2.add(pair0);
      Double double1 = new Double(496.59593587101);
      Double.max(496.59593587101, 2936.17892749928);
      Pair<Object, Double> pair1 = new Pair<Object, Double>(byte0, double1);
      linkedList2.add(pair1);
      DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(linkedList2);
      discreteDistribution0.getSamples();
      LinkedList<Pair<String, Double>> linkedList3 = new LinkedList<Pair<String, Double>>();
      // Undeclared exception!
      discreteDistribution0.sample(854);
  }
}
