/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 05:15:35 UTC 2020
 */

package org.xwiki.extension.job.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.InstalledExtension;
import org.xwiki.extension.job.internal.AbstractInstallPlanJob;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanAction;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode;
import org.xwiki.extension.test.EmptyExtension;
import org.xwiki.extension.version.Version;
import org.xwiki.extension.version.internal.DefaultVersion;
import org.xwiki.extension.version.internal.DefaultVersionConstraint;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest extends AbstractInstallPlanJob$ModifableExtensionPlanTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      ArrayDeque<InstalledExtension> arrayDeque0 = new ArrayDeque<InstalledExtension>();
      ArrayDeque<InstalledExtension> arrayDeque1 = new ArrayDeque<InstalledExtension>();
      ExtensionId extensionId0 = new ExtensionId(" 4", (Version) null);
      EmptyExtension emptyExtension0 = new EmptyExtension(extensionId0, " 4");
      ExtensionPlanAction.Action extensionPlanAction_Action0 = ExtensionPlanAction.Action.REPAIR;
      DefaultExtensionPlanAction defaultExtensionPlanAction0 = new DefaultExtensionPlanAction(emptyExtension0, arrayDeque1, extensionPlanAction_Action0, "", false);
      DefaultVersion defaultVersion0 = new DefaultVersion("");
      DefaultVersionConstraint defaultVersionConstraint0 = new DefaultVersionConstraint((Version) null);
      DefaultExtensionPlanNode defaultExtensionPlanNode0 = new DefaultExtensionPlanNode(defaultExtensionPlanAction0, abstractInstallPlanJob_ModifableExtensionPlanTree0, defaultVersionConstraint0);
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree1 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      abstractInstallPlanJob_ModifableExtensionPlanTree1.add(0, (ExtensionPlanNode) defaultExtensionPlanNode0);
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree2 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree3 = abstractInstallPlanJob_ModifableExtensionPlanTree2.clone();
      abstractInstallPlanJob_ModifableExtensionPlanTree3.subList(0, 0);
      abstractInstallPlanJob_ModifableExtensionPlanTree3.clear();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      abstractInstallPlanJob_ModifableExtensionPlanTree3.removeAll(arrayDeque0);
      // Undeclared exception!
      abstractInstallPlanJob_ModifableExtensionPlanTree1.clone();
  }
}
