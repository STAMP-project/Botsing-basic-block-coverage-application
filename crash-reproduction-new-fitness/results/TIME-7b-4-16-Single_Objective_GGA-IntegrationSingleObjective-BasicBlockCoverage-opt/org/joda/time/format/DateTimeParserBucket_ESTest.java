/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:06:07 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      DateTimeField dateTimeField0 = buddhistChronology0.millisOfSecond();
      IslamicChronology.LeapYearPatternType islamicChronology_LeapYearPatternType0 = IslamicChronology.LEAP_YEAR_16_BASED;
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0, islamicChronology_LeapYearPatternType0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      int int0 = 1057;
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(43200000L, islamicChronology0, locale0);
      Integer integer0 = new Integer(1057);
      DateTimeParserBucket dateTimeParserBucket1 = new DateTimeParserBucket(816L, buddhistChronology0, locale0, integer0, 1057);
      dateTimeParserBucket0.saveState();
      dateTimeParserBucket1.saveField(dateTimeField0, 1057);
      DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket1.new SavedState();
      boolean boolean0 = false;
      buddhistChronology0.monthOfYear();
      int int1 = (-1865);
      DateTimeField dateTimeField1 = buddhistChronology0.dayOfWeek();
      dateTimeParserBucket0.saveField(dateTimeField1, 1057);
      DateTimeParserBucket dateTimeParserBucket2 = new DateTimeParserBucket(60009L, buddhistChronology0, locale0, integer0, 1);
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(false, "");
  }
}
