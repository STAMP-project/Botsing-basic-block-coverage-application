/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:39:55 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MonitoredFunction;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BrentSolver_ESTest extends BrentSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuinticFunction quinticFunction0 = new QuinticFunction();
      UnivariateRealFunction univariateRealFunction0 = quinticFunction0.derivative();
      MonitoredFunction monitoredFunction0 = new MonitoredFunction(univariateRealFunction0);
      BrentSolver brentSolver0 = new BrentSolver(monitoredFunction0);
      brentSolver0.resetAbsoluteAccuracy();
      brentSolver0.getMaximalIterationCount();
      brentSolver0.getAbsoluteAccuracy();
      brentSolver0.setResult(100, 1.0E-6, 100);
      double double0 = 0.0;
      // Undeclared exception!
      brentSolver0.solve((UnivariateRealFunction) monitoredFunction0, 0.0, 1.0E-6);
  }
}
