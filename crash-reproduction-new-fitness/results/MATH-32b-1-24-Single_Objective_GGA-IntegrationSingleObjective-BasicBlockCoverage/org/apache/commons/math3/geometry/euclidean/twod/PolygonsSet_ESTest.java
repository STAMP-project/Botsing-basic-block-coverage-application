/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:44:36 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.Hyperplane;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
      polygonsSet0.computeGeometricalProperties();
      PolygonsSet polygonsSet1 = new PolygonsSet(linkedList0);
      Hyperplane<Euclidean2D> hyperplane0 = (Hyperplane<Euclidean2D>) mock(Hyperplane.class, new ViolatedAssumptionAnswer());
      doReturn((SubHyperplane) null).when(hyperplane0).wholeHyperplane();
      polygonsSet0.side(hyperplane0);
      polygonsSet0.computeGeometricalProperties();
      polygonsSet1.getVertices();
      polygonsSet0.contains(polygonsSet1);
      Euclidean2D euclidean2D0 = Euclidean2D.getInstance();
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(euclidean2D0);
      PolygonsSet polygonsSet2 = new PolygonsSet(bSPTree0);
      // Undeclared exception!
      polygonsSet2.getSize();
  }
}
