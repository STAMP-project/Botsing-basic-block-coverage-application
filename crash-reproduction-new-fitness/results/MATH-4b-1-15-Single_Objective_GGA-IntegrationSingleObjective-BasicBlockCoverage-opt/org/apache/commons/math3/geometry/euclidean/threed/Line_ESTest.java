/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 03:39:36 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector1D vector1D0 = Vector1D.POSITIVE_INFINITY;
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Vector3D vector3D1 = new Vector3D((-1.1231167254254628), vector3D0, (-1.1231167254254628), vector3D0);
      Line line0 = new Line(vector3D1, vector3D0);
      Line line1 = new Line(line0);
      Vector3D vector3D2 = Vector3D.MINUS_J;
      Vector3D vector3D3 = new Vector3D(1894.629866166465, vector3D2, (-1.1231167254254628), vector3D0, 1894.629866166465, vector3D1);
      Vector3D.crossProduct(vector3D3, vector3D1);
      line1.getAbscissa(vector3D0);
      line1.getAbscissa(vector3D2);
      Line line2 = new Line(line0);
      Vector3D vector3D4 = new Vector3D(1.0, 1.0, 1351.9529345);
      Vector3D vector3D5 = new Vector3D(3536.5, vector3D0, 3.141592653489793, vector3D1, 1.6715578222594704E-16, vector3D4, 3.141592653489793, vector3D1);
      // Undeclared exception!
      line0.getAbscissa((Vector3D) null);
  }
}
