/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 05:32:14 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = (-1313.818163777083);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      SinFunction sinFunction0 = new SinFunction();
      SinFunction sinFunction1 = new SinFunction();
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      double double2 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      Expm1Function expm1Function0 = new Expm1Function();
      double double3 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-986), (-1313.818163777083), 1.0E-6, 860);
      double double4 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(860, (UnivariateFunction) sinFunction0, (-0.4), 1.9276698418065647E249, allowedSolution0);
  }
}
