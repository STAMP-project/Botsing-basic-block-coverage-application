/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:54:07 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor;
import org.apache.commons.math3.geometry.partitioning.Transform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolyhedronsSet$FacetsContributionVisitor_ESTest extends PolyhedronsSet$FacetsContributionVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean3D> bSPTree0 = new BSPTree<Euclidean3D>();
      BSPTree<Euclidean3D> bSPTree1 = bSPTree0.copySelf();
      bSPTree0.copySelf();
      BSPTree<Euclidean3D> bSPTree2 = new BSPTree<Euclidean3D>();
      Vector3D vector3D0 = Vector3D.MINUS_I;
      bSPTree0.getCell(vector3D0);
      Vector3D vector3D1 = Vector3D.MINUS_K;
      bSPTree1.copySelf();
      double double0 = (-1448.6326923928707);
      Vector3D vector3D2 = Vector3D.NEGATIVE_INFINITY;
      Transform<Euclidean3D, Euclidean2D> transform0 = (Transform<Euclidean3D, Euclidean2D>) mock(Transform.class, new ViolatedAssumptionAnswer());
      BSPTreeVisitor<Euclidean3D> bSPTreeVisitor0 = (BSPTreeVisitor<Euclidean3D>) mock(BSPTreeVisitor.class, new ViolatedAssumptionAnswer());
      double double1 = 1.633123935319537E16;
      PolyhedronsSet polyhedronsSet0 = new PolyhedronsSet((-1448.6326923928707), 1.633123935319537E16, (-1448.6326923928707), 1.633123935319537E16, (-1448.6326923928707), 1.633123935319537E16);
      // Undeclared exception!
      polyhedronsSet0.getSize();
  }
}
