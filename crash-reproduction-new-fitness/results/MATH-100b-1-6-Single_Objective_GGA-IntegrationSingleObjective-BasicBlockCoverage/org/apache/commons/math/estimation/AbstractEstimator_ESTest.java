/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 11:40:58 UTC 2020
 */

package org.apache.commons.math.estimation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import junit.framework.TestCase;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest;
import org.apache.commons.math.estimation.SimpleEstimationProblem;
import org.apache.commons.math.estimation.WeightedMeasurement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractEstimator_ESTest extends AbstractEstimator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
      LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
      levenbergMarquardtEstimator0.initializeEstimate(simpleEstimationProblem0);
      WeightedMeasurement[] weightedMeasurementArray0 = new WeightedMeasurement[7];
      WeightedMeasurement weightedMeasurement0 = mock(WeightedMeasurement.class, new ViolatedAssumptionAnswer());
      weightedMeasurementArray0[0] = weightedMeasurement0;
      weightedMeasurementArray0[1] = weightedMeasurement0;
      weightedMeasurementArray0[2] = weightedMeasurement0;
      weightedMeasurementArray0[4] = weightedMeasurementArray0[3];
      weightedMeasurementArray0[5] = weightedMeasurementArray0[4];
      weightedMeasurementArray0[6] = weightedMeasurementArray0[5];
      levenbergMarquardtEstimator0.measurements = weightedMeasurementArray0;
      int int0 = (-1146);
      int int1 = 1;
      levenbergMarquardtEstimator0.setMaxCostEval(1);
      LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest("19%hiw<.1o8oGV<");
      TestCase.assertTrue(true);
      LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addMeasurement(weightedMeasurement0);
      // Undeclared exception!
      levenbergMarquardtEstimator0.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
  }
}
