/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 21:01:30 UTC 2021
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = 3.694501104954271E225;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(3.694501104954271E225, (-310.9875628));
      int int0 = 2158;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-1033.34437338), (-1033.34437338));
      regulaFalsiSolver0.getStartValue();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      SinFunction sinFunction0 = new SinFunction();
      // Undeclared exception!
      regulaFalsiSolver0.solve(2158, (UnivariateRealFunction) sinFunction0, (-293.071397), (-1.0), (-1.0), allowedSolution0);
  }
}
