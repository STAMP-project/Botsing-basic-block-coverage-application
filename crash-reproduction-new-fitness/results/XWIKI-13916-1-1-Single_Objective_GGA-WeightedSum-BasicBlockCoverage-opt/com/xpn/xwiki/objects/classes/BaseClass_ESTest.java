/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 16:23:34 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.internal.objects.meta.PropertyMetaClassInterface;
import com.xpn.xwiki.objects.meta.BooleanMetaClass;
import com.xpn.xwiki.objects.meta.PageMetaClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.model.reference.DocumentReference;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentReference documentReference0 = mock(DocumentReference.class, new ViolatedAssumptionAnswer());
      String string0 = "corrupted stream detected";
      PageMetaClass pageMetaClass0 = new PageMetaClass();
      BooleanMetaClass booleanMetaClass0 = new BooleanMetaClass();
      PropertyMetaClassInterface propertyMetaClassInterface0 = booleanMetaClass0.getDefinition();
      pageMetaClass0.addField("corrupted stream detected", propertyMetaClassInterface0);
      int int0 = 133;
      // Undeclared exception!
      pageMetaClass0.addTextAreaField("corrupted stream detected", "corrupted stream detected", 133, (-2105376123), "> ", "corrupted stream detected");
  }
}
