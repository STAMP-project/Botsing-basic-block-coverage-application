/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 21:34:28 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.DifferentiableUnivariateFunction;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.XMinus5Function;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Expm1Function expm1Function0 = new Expm1Function();
      NewtonSolver newtonSolver0 = new NewtonSolver(0.9628876015192063);
      expm1Function0.derivative();
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      double double0 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      QuinticFunction quinticFunction0 = new QuinticFunction();
      quinticFunction0.derivative();
      newtonSolver0.solve(2916, (DifferentiableUnivariateFunction) expm1Function0, 0.0, 0.0);
      newtonSolver0.getEvaluations();
      double double1 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      expm1Function0.value(0.0);
      newtonSolver0.doSolve();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(2, (UnivariateFunction) xMinus5Function0, (-1.0), (double) 2916, allowedSolution0);
  }
}
