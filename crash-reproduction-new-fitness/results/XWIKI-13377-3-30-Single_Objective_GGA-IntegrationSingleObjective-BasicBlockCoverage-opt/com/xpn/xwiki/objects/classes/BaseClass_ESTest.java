/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 01 16:46:36 UTC 2021
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.classes.BaseClass;
import java.util.Map;
import java.util.TreeMap;
import org.dom4j.util.IndexedElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.collection.PersistentSortedMap;
import org.hibernate.engine.SessionImplementor;
import org.junit.runner.RunWith;
import org.xwiki.model.internal.reference.ExplicitReferenceDocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseClass baseClass0 = new BaseClass();
      BaseClass baseClass1 = baseClass0.clone();
      PersistentSortedMap persistentSortedMap0 = new PersistentSortedMap();
      BaseCollection baseCollection0 = baseClass1.fromMap((Map<String, ?>) persistentSortedMap0, (BaseCollection) baseClass0);
      baseClass1.addUsersField(" 2GOTsn!WO&", " 2GOTsn!WO&");
      baseClass1.addDBTreeListField("epartpor", " 2GOTsn!WO&", "_`X)R#EzG=Z)t,cYsYh");
      PersistentSortedMap persistentSortedMap1 = new PersistentSortedMap((SessionImplementor) null);
      baseClass0.getNameField();
      TreeMap<String, ExplicitReferenceDocumentReferenceResolver> treeMap0 = new TreeMap<String, ExplicitReferenceDocumentReferenceResolver>();
      ExplicitReferenceDocumentReferenceResolver explicitReferenceDocumentReferenceResolver0 = new ExplicitReferenceDocumentReferenceResolver();
      EntityReferenceResolver<IndexedElement> entityReferenceResolver0 = (EntityReferenceResolver<IndexedElement>) mock(EntityReferenceResolver.class, new ViolatedAssumptionAnswer());
      Injector.inject(explicitReferenceDocumentReferenceResolver0, (Class<?>) ExplicitReferenceDocumentReferenceResolver.class, "entityReferenceResolver", (Object) entityReferenceResolver0);
      Injector.validateBean(explicitReferenceDocumentReferenceResolver0, (Class<?>) ExplicitReferenceDocumentReferenceResolver.class);
      treeMap0.put("epartpor", explicitReferenceDocumentReferenceResolver0);
      // Undeclared exception!
      baseClass1.fromMap((Map<String, ?>) treeMap0, (BaseCollection) baseCollection0);
  }
}
