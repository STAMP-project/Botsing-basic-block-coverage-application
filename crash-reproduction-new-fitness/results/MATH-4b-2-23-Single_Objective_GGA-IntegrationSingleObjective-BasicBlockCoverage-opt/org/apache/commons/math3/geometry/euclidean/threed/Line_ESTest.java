/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 03:39:49 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;
      Line line0 = new Line(vector3D0, vector3D0);
      line0.contains(vector3D0);
      Vector3D vector3D1 = new Vector3D(42.123202516, 0.041666663879186654);
      Vector3D vector3D2 = new Vector3D(0.0, vector3D0, 2613.76077, vector3D0, 2613.76077, vector3D1, 0.0, vector3D1);
      Vector3D vector3D3 = new Vector3D(42.123202516, vector3D2, 55.221, vector3D1, (-2807.851243), vector3D1);
      Line line1 = new Line(vector3D3, vector3D2);
      line1.distance(vector3D2);
      line1.closestPoint(line0);
      line1.reset(vector3D2, vector3D1);
      Line line2 = new Line(vector3D2, vector3D2);
      line0.intersection(line2);
      line2.getAbscissa(vector3D0);
      Line line3 = new Line(line2);
      line1.intersection(line3);
      Line line4 = new Line(vector3D3, vector3D1);
      line4.getDirection();
      Line line5 = new Line(line4);
      // Undeclared exception!
      line1.toSubSpace((Vector<Euclidean3D>) null);
  }
}
