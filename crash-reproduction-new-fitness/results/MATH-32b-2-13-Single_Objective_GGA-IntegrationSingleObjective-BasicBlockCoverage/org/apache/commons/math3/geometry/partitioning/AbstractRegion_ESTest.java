/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:23:58 UTC 2020
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.AffineTransform;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.Transform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntervalsSet intervalsSet0 = new IntervalsSet();
      PolygonsSet polygonsSet0 = new PolygonsSet();
      IntervalsSet intervalsSet1 = new IntervalsSet((-913.2593716), 0.6);
      PolygonsSet polygonsSet1 = new PolygonsSet(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, (-1.275482236233145), 0.0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(Double.POSITIVE_INFINITY, (-1.275482236233145));
      Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform0);
      polygonsSet0.applyTransform(transform0);
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(polygonsSet0);
      Vector2D vector2D0 = new Vector2D((-913.2593716), (-18.9628));
      Vector2D vector2D1 = new Vector2D(0.6, vector2D0, (-1.275482236233145), vector2D0, 2751.06480930671, vector2D0);
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getCell(vector2D1);
      PolygonsSet polygonsSet2 = new PolygonsSet(bSPTree1);
      // Undeclared exception!
      polygonsSet2.getSize();
  }
}
