/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 10:56:57 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.AffineTransform;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean2D> bSPTree0 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      BSPTree<Euclidean2D> bSPTree1 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList2 = new LinkedList<SubHyperplane<Euclidean2D>>();
      AffineTransform affineTransform0 = new AffineTransform();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList3 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList3);
      Object object0 = new Object();
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(object0);
      bSPTree2.getCut();
      Object object1 = new Object();
      BSPTree<Euclidean2D> bSPTree3 = new BSPTree<Euclidean2D>((SubHyperplane<Euclidean2D>) null, bSPTree0, bSPTree2, object1);
      BSPTree<Euclidean2D> bSPTree4 = bSPTree3.copySelf();
      BSPTree<Euclidean2D> bSPTree5 = bSPTree4.split((SubHyperplane<Euclidean2D>) null);
      BSPTree<Euclidean2D> bSPTree6 = bSPTree5.getMinus();
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree6);
      // Undeclared exception!
      polygonsSet1.computeGeometricalProperties();
  }
}
