/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 10:00:54 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.partitioning.AbstractRegion;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BSPTree<Euclidean2D> bSPTree0 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
      PolygonsSet polygonsSet1 = new PolygonsSet();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet2 = new PolygonsSet(linkedList0);
      AbstractRegion<Euclidean2D, Euclidean1D> abstractRegion0 = polygonsSet1.copySelf();
      polygonsSet2.checkPoint((Vector<Euclidean2D>) null);
      Vector3D vector3D0 = new Vector3D(3265.6782811210232, (-341.232), (-5122.8));
      polygonsSet2.computeGeometricalProperties();
      polygonsSet1.getVertices();
      BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(abstractRegion0);
      PolygonsSet polygonsSet3 = new PolygonsSet(bSPTree1);
      // Undeclared exception!
      polygonsSet3.computeGeometricalProperties();
  }
}
