/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:37:48 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.BrentSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      BrentSolver brentSolver0 = new BrentSolver();
      double double0 = (-915.85974);
      double double1 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double2 = (-6.728780884897008);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-6.728780884897008);
      doubleArray0[1] = 2522.6110856278387;
      doubleArray0[3] = (-463.9284);
      PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
      doubleArray0[0] = (-490.08845396000794);
      doubleArray0[5] = (-6.728780884897008);
      PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
      PolynomialFunction polynomialFunction2 = new PolynomialFunction(doubleArray0);
      polynomialFunction1.add(polynomialFunction2);
      polynomialFunction1.toString();
      polynomialFunction1.polynomialDerivative();
      double double3 = 1746.5127;
      bracketingNthOrderBrentSolver0.getMaximalOrder();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(4, (UnivariateFunction) polynomialFunction0, (-915.85974), 4106.48340536, allowedSolution0);
  }
}
