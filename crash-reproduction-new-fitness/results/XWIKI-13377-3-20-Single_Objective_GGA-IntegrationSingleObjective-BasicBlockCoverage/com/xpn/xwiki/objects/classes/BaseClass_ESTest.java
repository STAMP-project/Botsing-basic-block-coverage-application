/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 18:26:38 UTC 2020
 */

package com.xpn.xwiki.objects.classes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.objects.BaseCollection;
import com.xpn.xwiki.objects.ObjectDiff;
import com.xpn.xwiki.objects.classes.BaseClass;
import java.util.Hashtable;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hibernate.collection.PersistentMap;
import org.hibernate.engine.SessionImplementor;
import org.junit.runner.RunWith;
import org.xwiki.model.internal.reference.ExplicitReferenceDocumentReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseClass_ESTest extends BaseClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseClass baseClass0 = new BaseClass();
      baseClass0.getPropertyNames();
      baseClass0.getIntValue(")l1PQ");
      baseClass0.getCustomClass();
      baseClass0.getEnabledProperties();
      BaseClass baseClass1 = baseClass0.clone();
      baseClass1.setDefaultViewSheet(")l1PQ");
      String string0 = "number";
      baseClass0.addDBTreeListField("", ")l1PQ", 0, true, true, "number");
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      Hashtable<ObjectDiff, ExplicitReferenceDocumentReferenceResolver> hashtable0 = new Hashtable<ObjectDiff, ExplicitReferenceDocumentReferenceResolver>();
      PersistentMap persistentMap0 = new PersistentMap(sessionImplementor0, hashtable0);
      baseClass1.setFields(persistentMap0);
      baseClass1.addDateField("", "", "");
      baseClass0.getNameField();
      baseClass1.setDirty(true);
      baseClass0.addDBListField("", ")l1PQ", "number");
      baseClass1.addLevelsField("idField", "wZ4+hH#50DCNVCt0o", 730);
      baseClass1.removeField("o");
      // Undeclared exception!
      baseClass1.fromMap((Map<String, ?>) persistentMap0, (BaseCollection) baseClass0);
  }
}
