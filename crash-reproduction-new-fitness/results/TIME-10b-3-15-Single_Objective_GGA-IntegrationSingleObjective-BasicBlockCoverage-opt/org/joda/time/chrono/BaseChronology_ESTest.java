/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 09:22:51 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.Days;
import org.joda.time.Duration;
import org.joda.time.MockZone;
import org.joda.time.MonthDay;
import org.joda.time.MutablePeriod;
import org.joda.time.Seconds;
import org.joda.time.chrono.BuddhistChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      int int0 = 518;
      MockZone mockZone0 = new MockZone((-530L), (-620), 518);
      Chronology chronology0 = buddhistChronology0.withZone(mockZone0);
      MonthDay monthDay0 = MonthDay.now();
      MonthDay monthDay1 = monthDay0.plusMonths((-620));
      Seconds seconds0 = Seconds.MAX_VALUE;
      MonthDay monthDay2 = monthDay1.minus(seconds0);
      buddhistChronology0.set(monthDay0, (-1L));
      Duration duration0 = Duration.millis((-530L));
      Duration duration1 = duration0.plus((long) (-620));
      Days days0 = duration1.toStandardDays();
      MutablePeriod mutablePeriod0 = days0.toMutablePeriod();
      monthDay0.minus(mutablePeriod0);
      // Undeclared exception!
      chronology0.set(monthDay2, (-5443200001L));
  }
}
