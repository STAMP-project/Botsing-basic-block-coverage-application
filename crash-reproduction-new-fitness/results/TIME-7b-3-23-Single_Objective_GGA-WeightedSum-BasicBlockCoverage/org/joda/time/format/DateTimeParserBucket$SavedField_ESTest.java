/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 16:48:52 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DurationField;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.field.DividedDateTimeField;
import org.joda.time.field.RemainderDateTimeField;
import org.joda.time.field.UnsupportedDateTimeField;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket$SavedField_ESTest extends DateTimeParserBucket$SavedField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      DateTimeField dateTimeField0 = buddhistChronology0.dayOfYear();
      DividedDateTimeField dividedDateTimeField0 = new DividedDateTimeField(dateTimeField0, dateTimeFieldType0, 1475);
      RemainderDateTimeField remainderDateTimeField0 = new RemainderDateTimeField(dividedDateTimeField0, dateTimeFieldType0);
      DividedDateTimeField dividedDateTimeField1 = new DividedDateTimeField(remainderDateTimeField0, dateTimeFieldType0);
      DurationField durationField0 = dividedDateTimeField1.getRangeDurationField();
      UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(unsupportedDateTimeField0, 1475);
      DividedDateTimeField dividedDateTimeField2 = new DividedDateTimeField(remainderDateTimeField0, dateTimeFieldType0, 1475);
      RemainderDateTimeField remainderDateTimeField1 = new RemainderDateTimeField(dividedDateTimeField1, dateTimeFieldType0);
      RemainderDateTimeField remainderDateTimeField2 = new RemainderDateTimeField(dividedDateTimeField2, dateTimeFieldType0);
      DividedDateTimeField dividedDateTimeField3 = new DividedDateTimeField(remainderDateTimeField2, dateTimeFieldType0);
      dividedDateTimeField1.getRangeDurationField();
      UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);
      DateTimeField dateTimeField1 = buddhistChronology0.dayOfYear();
      DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField1 = new DateTimeParserBucket.SavedField(dateTimeField1, 1475);
      // Undeclared exception!
      dateTimeParserBucket_SavedField1.set(0L, true);
  }
}
