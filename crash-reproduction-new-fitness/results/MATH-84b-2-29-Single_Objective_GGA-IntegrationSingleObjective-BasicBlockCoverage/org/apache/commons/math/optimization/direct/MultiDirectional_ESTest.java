/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:22:17 UTC 2020
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.apache.commons.math.optimization.OptimizationException;
import org.apache.commons.math.optimization.RealConvergenceChecker;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class MultiDirectional_ESTest extends MultiDirectional_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = (-1759.56459);
      MultiDirectional multiDirectional0 = new MultiDirectional((-1759.56459), (-1759.56459));
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1759.56459);
      doubleArray0[1] = (-1759.56459);
      doubleArray0[2] = (-1759.56459);
      doubleArray0[3] = (-1759.56459);
      doubleArray0[4] = (-1759.56459);
      doubleArray0[5] = (-1759.56459);
      doubleArray0[6] = (-1759.56459);
      doubleArray0[7] = (-1759.56459);
      doubleArray0[8] = (-1759.56459);
      multiDirectional0.setStartConfiguration(doubleArray0);
      RealConvergenceChecker realConvergenceChecker0 = multiDirectional0.getConvergenceChecker();
      multiDirectional0.setMaxIterations(0);
      multiDirectional0.setStartConfiguration(doubleArray0);
      multiDirectional0.getMaxIterations();
      multiDirectional0.setConvergenceChecker(realConvergenceChecker0);
      Comparator<RealPointValuePair> comparator0 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      try { 
        multiDirectional0.iterateSimplex(comparator0);
        fail("Expecting exception: OptimizationException");
      
      } catch(OptimizationException e) {
         //
         // org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (0) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
