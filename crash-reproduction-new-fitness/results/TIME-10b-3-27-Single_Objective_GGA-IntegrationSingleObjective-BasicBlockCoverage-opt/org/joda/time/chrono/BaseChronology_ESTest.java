/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 09:25:38 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDateTime;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.field.MillisDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone dateTimeZone0 = mock(DateTimeZone.class, new ViolatedAssumptionAnswer());
      ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();
      iSOChronology0.halfdays();
      iSOChronology0.secondOfMinute();
      iSOChronology0.halfdays();
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance();
      islamicChronology0.secondOfMinute();
      LocalDateTime localDateTime0 = new LocalDateTime((-945L), (Chronology) iSOChronology0);
      iSOChronology0.set(localDateTime0, 2154L);
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      iSOChronology0.millisOfSecond();
      int int0 = (-1);
      localDateTime0.withWeekyear((-1));
      localDateTime0.millisOfSecond();
      // Undeclared exception!
      islamicChronology0.set(localDateTime0, (-2525L));
  }
}
