/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 11:27:52 CEST 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import junit.framework.TestCase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.DurationFieldType;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.TestInterval_Constructors;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeZone.getDefault();
      MonthDay monthDay0 = MonthDay.now();
      DateTimeZone.getDefault();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();
      DurationFieldType durationFieldType0 = DurationFieldType.HOURS_TYPE;
      Days.daysBetween((ReadablePartial) monthDay0, (ReadablePartial) monthDay0);
      TestInterval_Constructors testInterval_Constructors0 = new TestInterval_Constructors("minuend");
      TestInterval_Constructors.MockInterval testInterval_Constructors_MockInterval0 = testInterval_Constructors0.new MockInterval();
      testInterval_Constructors_MockInterval0.equals(testInterval_Constructors0);
      Object object0 = new Object();
      TestCase.assertNotNull("minuend", object0);
      testInterval_Constructors_MockInterval0.toDuration();
      MonthDay monthDay1 = monthDay0.minusMonths((-2188));
      monthDay0.indexOf(dateTimeFieldType0);
      monthDay1.isEqual(monthDay0);
      testInterval_Constructors_MockInterval0.getChronology();
      MonthDay monthDay2 = MonthDay.now();
      int int0 = (-2147483634);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) monthDay2, (ReadablePartial) monthDay1);
  }
}
