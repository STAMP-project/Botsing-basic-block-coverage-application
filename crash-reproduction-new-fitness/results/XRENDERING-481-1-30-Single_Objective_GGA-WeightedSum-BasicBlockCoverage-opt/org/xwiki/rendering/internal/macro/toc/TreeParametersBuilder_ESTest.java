/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 03:14:14 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import javatests.DiamondIterableMapMRO;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.HeaderBlock;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.block.WordBlock;
import org.xwiki.rendering.internal.macro.toc.TreeParameters;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.listener.HeaderLevel;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext();
      MacroTransformationContext macroTransformationContext1 = macroTransformationContext0.clone();
      MacroTransformationContext macroTransformationContext2 = macroTransformationContext1.clone();
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      tocMacroParameters0.setStart((-1));
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      tocMacroParameters1.setScope(tocMacroParameters_Scope0);
      LinkedList<Block> linkedList0 = new LinkedList<Block>();
      HeaderLevel headerLevel0 = HeaderLevel.LEVEL2;
      DiamondIterableMapMRO diamondIterableMapMRO0 = new DiamondIterableMapMRO();
      macroTransformationContext0.getCurrentMacroBlock();
      MacroBlock macroBlock0 = new MacroBlock((String) null, diamondIterableMapMRO0, true);
      macroTransformationContext2.setCurrentMacroBlock(macroBlock0);
      HeaderBlock headerBlock0 = new HeaderBlock(linkedList0, headerLevel0, diamondIterableMapMRO0, (String) null);
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      TreeParameters treeParameters0 = treeParametersBuilder0.build(headerBlock0, tocMacroParameters0, macroTransformationContext0);
      headerBlock0.clone();
      TreeParametersBuilder treeParametersBuilder1 = new TreeParametersBuilder();
      MacroTransformationContext macroTransformationContext3 = new MacroTransformationContext();
      treeParametersBuilder1.build(treeParameters0.rootBlock, tocMacroParameters0, macroTransformationContext3);
      MacroTransformationContext macroTransformationContext4 = new MacroTransformationContext((TransformationContext) null);
      treeParametersBuilder1.build(macroBlock0, tocMacroParameters0, macroTransformationContext4);
      WordBlock wordBlock0 = new WordBlock((String) null);
      // Undeclared exception!
      treeParametersBuilder1.build((Block) null, tocMacroParameters1, macroTransformationContext2);
  }
}
