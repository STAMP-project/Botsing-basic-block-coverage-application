/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 00:20:07 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateMidnight;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.TestMonthDay_Basics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateMidnight dateMidnight0 = DateMidnight.now();
      DateMidnight dateMidnight1 = dateMidnight0.withZoneRetainFields((DateTimeZone) null);
      dateMidnight0.getHourOfDay();
      DateMidnight dateMidnight2 = dateMidnight1.minusYears((-820));
      TestMonthDay_Basics testMonthDay_Basics0 = new TestMonthDay_Basics("");
      TestMonthDay_Basics.MockMD testMonthDay_Basics_MockMD0 = testMonthDay_Basics0.new MockMD();
      Chronology chronology0 = testMonthDay_Basics_MockMD0.getChronology();
      DateTime dateTime0 = dateMidnight2.toDateTime(chronology0);
      dateTime0.toLocalDateTime();
      DateMidnight dateMidnight3 = dateMidnight2.withYear((-955));
      dateMidnight3.minusYears(4);
      TestMonthDay_Basics testMonthDay_Basics1 = new TestMonthDay_Basics("EKII9IJ");
      TestMonthDay_Basics.MockMD testMonthDay_Basics_MockMD1 = testMonthDay_Basics1.new MockMD();
      TestMonthDay_Basics.MockMD testMonthDay_Basics_MockMD2 = testMonthDay_Basics0.new MockMD();
      testMonthDay_Basics_MockMD2.getChronology();
      dateMidnight1.toDateTime(chronology0);
      dateTime0.toLocalDateTime();
      Date date0 = new Date((-820));
      MonthDay monthDay0 = MonthDay.fromDateFields(date0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) testMonthDay_Basics_MockMD2, (ReadablePartial) monthDay0);
  }
}
