/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 16:37:40 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.GregorianChronology;
import org.joda.time.field.OffsetDateTimeField;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeParserBucket.SavedField[] dateTimeParserBucket_SavedFieldArray0 = new DateTimeParserBucket.SavedField[12];
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
      Locale locale0 = Locale.CANADA_FRENCH;
      DateTimeField dateTimeField0 = dateTimeFieldType0.getField(gregorianChronology0);
      Integer integer0 = new Integer(100);
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-31), gregorianChronology0, locale0, integer0, 1);
      Locale locale1 = Locale.ITALIAN;
      dateTimeParserBucket0.computeMillis(false, "Illegal instant du to time zone offset transition (");
      dateTimeParserBucket0.computeMillis(false);
      DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
      DateTimeParserBucket dateTimeParserBucket1 = new DateTimeParserBucket(389L, gregorianChronology0, locale0, integer0);
      Integer.divideUnsigned(20503125, 1);
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      buddhistChronology0.toString();
      Integer.divideUnsigned((-1210), 8);
      BuddhistChronology buddhistChronology1 = BuddhistChronology.getInstance();
      buddhistChronology1.toString();
      DateTimeField dateTimeField1 = buddhistChronology0.monthOfYear();
      OffsetDateTimeField offsetDateTimeField0 = new OffsetDateTimeField(dateTimeField1, (-1471));
      dateTimeParserBucket0.saveField(dateTimeField0, 501);
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis();
  }
}
