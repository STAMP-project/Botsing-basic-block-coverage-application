/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:20:52 UTC 2020
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.NordsieckStepInterpolator;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      doReturn(0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, (-20.526855507004456), (-20.526855507004456), (-6));
      StepInterpolator stepInterpolator0 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator0).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator0).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator0).isForward();
      StepInterpolator stepInterpolator1 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator1).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator1).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator1).isForward();
      StepProblem stepProblem0 = new StepProblem((-1936.4), (-6), (-6));
      EventState eventState1 = new EventState(stepProblem0, 13.0, 13.0, (-6));
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = (-1936.4);
      doubleArray0[2] = (-1936.4);
      eventState1.reinitializeBegin((-6), doubleArray0);
      eventState1.evaluateStep(stepInterpolator1);
      NordsieckStepInterpolator nordsieckStepInterpolator0 = new NordsieckStepInterpolator();
      stepProblem0.eventOccurred((-20.526855507004456), doubleArray0, true);
      eventState1.reinitializeBegin((-20.526855507004456), doubleArray0);
      StepProblem stepProblem1 = new StepProblem((-1936.4), (-1936.4), (-273.326802869));
      eventState0.reinitializeBegin((-6), doubleArray0);
      eventState0.getEventHandler();
      stepProblem1.eventOccurred(3.3571218022850497, doubleArray0, true);
      EventState eventState2 = new EventState(stepProblem1, (-1936.4), 1936.0, 2);
      stepProblem0.eventOccurred(0.0, (double[]) null, true);
      eventState1.stepAccepted(400.7860183741065, doubleArray0);
      // Undeclared exception!
      eventState1.evaluateStep(stepInterpolator0);
  }
}
