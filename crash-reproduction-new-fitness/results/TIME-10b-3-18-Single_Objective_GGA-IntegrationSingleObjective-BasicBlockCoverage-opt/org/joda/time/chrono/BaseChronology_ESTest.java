/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 09:23:19 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.DurationField;
import org.joda.time.MonthDay;
import org.joda.time.chrono.AssembledChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.ZonedChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AssembledChronology.Fields assembledChronology_Fields0 = new AssembledChronology.Fields();
      DateTimeZone.forOffsetHours(56);
      ZonedChronology.useTimeArithmetic((DurationField) null);
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance((DateTimeZone) null);
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(56, 56);
      ZonedChronology zonedChronology0 = ZonedChronology.getInstance(islamicChronology0, dateTimeZone0);
      zonedChronology0.toString();
      MonthDay monthDay0 = new MonthDay((-1L));
      int int0 = 1755;
      monthDay0.plusDays(1755);
      int int1 = (-292269054);
      zonedChronology0.add((-47520L), 1443792297600000L, 1755);
      // Undeclared exception!
      zonedChronology0.set(monthDay0, (-292269054));
  }
}
