/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:33:26 UTC 2020
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.BetaDistributionImpl;
import org.apache.commons.math.distribution.ExponentialDistributionImpl;
import org.apache.commons.math.distribution.FDistributionImpl;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      BetaDistributionImpl betaDistributionImpl0 = new BetaDistributionImpl(0.0, 819.65155618);
      betaDistributionImpl0.cumulativeProbability(0.5);
      betaDistributionImpl0.setBeta(2.0);
      BetaDistributionImpl betaDistributionImpl1 = new BetaDistributionImpl((-816.672), 2.0);
      betaDistributionImpl1.setAlpha(0.5);
      NormalDistributionImpl normalDistributionImpl1 = new NormalDistributionImpl();
      betaDistributionImpl1.inverseCumulativeProbability(0.5);
      ExponentialDistributionImpl exponentialDistributionImpl0 = new ExponentialDistributionImpl(0.5);
      betaDistributionImpl0.getAlpha();
      FDistributionImpl fDistributionImpl0 = new FDistributionImpl(0.5, 0.5);
      FDistributionImpl fDistributionImpl1 = new FDistributionImpl(2342.756948, 0.5);
      fDistributionImpl0.cumulativeProbability(3.141592653589793);
      // Undeclared exception!
      fDistributionImpl0.inverseCumulativeProbability(0.6063232601757405);
  }
}
