/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 00:09:20 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeZone;
import org.joda.time.MonthDay;
import org.joda.time.chrono.AssembledChronology;
import org.joda.time.chrono.BasicFixedMonthChronology;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.JulianChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AssembledChronology.Fields assembledChronology_Fields0 = new AssembledChronology.Fields();
      AssembledChronology.Fields assembledChronology_Fields1 = new AssembledChronology.Fields();
      assembledChronology_Fields0.year = null;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      BuddhistChronology.getInstance();
      DateTimeField dateTimeField0 = assembledChronology_Fields0.era;
      GJChronology.getInstance();
      BuddhistChronology.getInstance();
      MonthDay monthDay0 = new MonthDay((-2259L));
      int int0 = (-4629);
      long long0 = BasicFixedMonthChronology.MILLIS_PER_YEAR;
      MonthDay monthDay1 = new MonthDay((-2259L));
      long long1 = BasicFixedMonthChronology.MILLIS_PER_YEAR;
      int int1 = 6;
      BuddhistChronology.getInstanceUTC();
      JulianChronology.getInstance();
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      buddhistChronology0.withZone(dateTimeZone0);
      JulianChronology.getInstanceUTC();
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      // Undeclared exception!
      copticChronology0.set(monthDay0, (-2483L));
  }
}
