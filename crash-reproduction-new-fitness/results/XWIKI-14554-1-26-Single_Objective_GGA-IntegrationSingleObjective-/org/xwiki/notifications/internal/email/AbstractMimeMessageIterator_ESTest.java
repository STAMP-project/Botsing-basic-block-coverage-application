/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 20:43:20 UTC 2020
 */

package org.xwiki.notifications.internal.email;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParsePosition;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.eventstream.internal.DefaultEvent;
import org.xwiki.notifications.CompositeEvent;
import org.xwiki.notifications.internal.email.PeriodicMimeMessageIterator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractMimeMessageIterator_ESTest extends AbstractMimeMessageIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PeriodicMimeMessageIterator periodicMimeMessageIterator0 = new PeriodicMimeMessageIterator();
      DefaultEvent defaultEvent0 = new DefaultEvent();
      CompositeEvent compositeEvent0 = new CompositeEvent(defaultEvent0);
      compositeEvent0.getUsers();
      compositeEvent0.getType();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      periodicMimeMessageIterator0.forEach(consumer0);
      ParsePosition parsePosition0 = new ParsePosition(1377);
      periodicMimeMessageIterator0.hasNext();
      periodicMimeMessageIterator0.hasNext();
      periodicMimeMessageIterator0.iterator();
      periodicMimeMessageIterator0.iterator();
      periodicMimeMessageIterator0.iterator();
      // Undeclared exception!
      periodicMimeMessageIterator0.next();
  }
}
