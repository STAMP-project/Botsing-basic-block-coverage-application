/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:08:34 UTC 2020
 */

package org.apache.commons.math.estimation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.estimation.EstimatedParameter;
import org.apache.commons.math.estimation.EstimationProblem;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractEstimator_ESTest extends AbstractEstimator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EstimationProblem estimationProblem0 = mock(EstimationProblem.class, new ViolatedAssumptionAnswer());
      LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
      LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest("&#(/EjX!`e");
      levenbergMarquardtEstimator0.setInitialStepBoundFactor((-2045.9541898949442));
      double[] doubleArray0 = new double[0];
      levenbergMarquardtEstimator0.jacobian = doubleArray0;
      LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
      EstimatedParameter estimatedParameter0 = new EstimatedParameter("&#(/EjX!`e", 0.140653, false);
      EstimatedParameter estimatedParameter1 = new EstimatedParameter(estimatedParameter0);
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addParameter(estimatedParameter1);
      double double0 = 1523.3574796387782;
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addPoint(1523.3574796387782, 1.0E-15, 1523.3574796387782);
      levenbergMarquardtEstimatorTest_QuadraticProblem0.getAllParameters();
      LevenbergMarquardtEstimator levenbergMarquardtEstimator1 = new LevenbergMarquardtEstimator();
      // Undeclared exception!
      levenbergMarquardtEstimator0.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
  }
}
