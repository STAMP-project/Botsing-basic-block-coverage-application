/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:01:57 UTC 2021
 */

package org.apache.commons.math.estimation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.estimation.GaussNewtonEstimator;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest;
import org.apache.commons.math.estimation.SimpleEstimationProblem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractEstimator_ESTest extends AbstractEstimator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
      SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
      simpleEstimationProblem0.getMeasurements();
      GaussNewtonEstimator gaussNewtonEstimator0 = new GaussNewtonEstimator(74, (-1.0), (-1.0));
      GaussNewtonEstimator gaussNewtonEstimator1 = new GaussNewtonEstimator((-2287), (-592.852557384457), 0.0);
      LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest("aFH3[YVP+p@hq");
      LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest1 = new LevenbergMarquardtEstimatorTest("34.e9DuT");
      LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest1.new QuadraticProblem();
      levenbergMarquardtEstimatorTest_QuadraticProblem0.getUnboundParameters();
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addPoint((-878.478913531), 0.0, (-1713.1));
      gaussNewtonEstimator1.initializeEstimate(simpleEstimationProblem0);
      // Undeclared exception!
      gaussNewtonEstimator1.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
  }
}
