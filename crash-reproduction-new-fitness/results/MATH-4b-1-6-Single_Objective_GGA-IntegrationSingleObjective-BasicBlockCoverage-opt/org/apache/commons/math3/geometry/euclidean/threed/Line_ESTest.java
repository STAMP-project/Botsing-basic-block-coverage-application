/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 03:39:11 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Line_ESTest extends Line_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector1D vector1D0 = Vector1D.NaN;
      Vector1D vector1D1 = Vector1D.POSITIVE_INFINITY;
      Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
      Line line0 = new Line(vector3D0, vector3D0);
      vector3D0.toString();
      line0.contains(vector3D0);
      Vector3D vector3D1 = new Vector3D((-2596.6), vector3D0, 1475.1029, vector3D0);
      Vector3D vector3D2 = vector3D0.subtract((Vector<Euclidean3D>) vector3D1);
      line0.distance(line0);
      line0.contains(vector3D0);
      line0.getAbscissa(vector3D1);
      line0.getAbscissa(vector3D0);
      Line line1 = new Line(vector3D0, vector3D0);
      line0.isSimilarTo(line1);
      Line line2 = new Line(vector3D1, vector3D0);
      line2.pointAt(3.914213562373095);
      Vector3D vector3D3 = new Vector3D(1072.215052, 0.0);
      Line line3 = new Line(line1);
      line3.intersection(line1);
      Vector3D vector3D4 = vector3D0.add((Vector<Euclidean3D>) vector3D2);
      Line line4 = new Line(vector3D4, vector3D1);
      line1.wholeLine();
      // Undeclared exception!
      line4.getAbscissa((Vector3D) null);
  }
}
