/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 10:28:25 GMT+01:00 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DurationFieldType;
import org.joda.time.Hours;
import org.joda.time.MonthDay;
import org.joda.time.Weeks;
import org.joda.time.chrono.AssembledChronology;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.GregorianChronology;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.JulianChronology;
import org.joda.time.field.UnsupportedDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MonthDay monthDay0 = MonthDay.now();
      Hours hours0 = Hours.EIGHT;
      Weeks weeks0 = Weeks.ONE;
      Weeks weeks1 = Weeks.MAX_VALUE;
      DurationFieldType durationFieldType0 = DurationFieldType.centuries();
      ISOChronology iSOChronology0 = ISOChronology.getInstance();
      durationFieldType0.isSupported(iSOChronology0);
      UnsupportedDurationField.getInstance(durationFieldType0);
      DurationFieldType.years();
      Hours hours1 = Hours.SEVEN;
      weeks0.toStandardSeconds();
      JulianChronology.getInstance();
      long long0 = (-1013L);
      int int0 = BuddhistChronology.BE;
      GregorianChronology.getInstanceUTC();
      AssembledChronology.Fields assembledChronology_Fields0 = new AssembledChronology.Fields();
      IslamicChronology islamicChronology0 = IslamicChronology.getInstanceUTC();
      long long1 = (-513L);
      // Undeclared exception!
      islamicChronology0.set(monthDay0, 7L);
  }
}
