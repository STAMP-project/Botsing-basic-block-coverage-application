/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:41:43 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint;
import org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint;
import org.apache.commons.math3.geometry.euclidean.oned.Vector1D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
      PolygonsSet polygonsSet0 = new PolygonsSet();
      Vector2D vector2D0 = Vector2D.POSITIVE_INFINITY;
      SubLine subLine0 = new SubLine(vector2D0, vector2D0);
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.copySelf();
      Vector1D vector1D0 = new Vector1D(1595.7683007400037);
      Vector1D vector1D1 = new Vector1D((-214.54914), vector1D0, (-214.54914), vector1D0);
      OrientedPoint orientedPoint0 = new OrientedPoint(vector1D1, false);
      orientedPoint0.wholeHyperplane();
      SubOrientedPoint subOrientedPoint0 = orientedPoint0.wholeHyperplane();
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(subLine0, bSPTree1, bSPTree1, subOrientedPoint0);
      BSPTree<Euclidean2D> bSPTree3 = bSPTree0.getCell(vector2D0);
      BSPTree<Euclidean2D> bSPTree4 = new BSPTree<Euclidean2D>(bSPTree3);
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree4);
      polygonsSet0.computeGeometricalProperties();
      polygonsSet0.getVertices();
      // Undeclared exception!
      polygonsSet1.computeGeometricalProperties();
  }
}
