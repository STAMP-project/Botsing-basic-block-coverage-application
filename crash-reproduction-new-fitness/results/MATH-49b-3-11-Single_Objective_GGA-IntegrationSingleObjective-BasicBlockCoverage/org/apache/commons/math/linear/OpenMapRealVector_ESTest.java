/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:15:29 UTC 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.SincFunction;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      openMapRealVector0.getMinValue();
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
      OpenMapRealVector openMapRealVector2 = openMapRealVector1.ebeMultiply((RealVector) openMapRealVector0);
      OpenMapRealVector openMapRealVector3 = new OpenMapRealVector(openMapRealVector0);
      openMapRealVector2.getLInfDistance(doubleArray0);
      openMapRealVector2.combine(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, (RealVector) openMapRealVector0);
      openMapRealVector2.hashCode();
      openMapRealVector2.getDistance((RealVector) openMapRealVector3);
      OpenMapRealVector openMapRealVector4 = new OpenMapRealVector((RealVector) openMapRealVector2);
      Expm1Function expm1Function0 = new Expm1Function();
      SincFunction sincFunction0 = new SincFunction();
      OpenMapRealVector openMapRealVector5 = (OpenMapRealVector)openMapRealVector1.map(sincFunction0);
      openMapRealVector3.getMaxIndex();
      OpenMapRealVector openMapRealVector6 = openMapRealVector4.add(openMapRealVector0);
      openMapRealVector6.sparseIterator();
      openMapRealVector5.getLInfDistance((RealVector) openMapRealVector6);
      // Undeclared exception!
      openMapRealVector5.ebeMultiply((RealVector) openMapRealVector6);
  }
}
