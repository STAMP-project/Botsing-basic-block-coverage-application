/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 20:19:30 UTC 2021
 */

package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
      Vector2D vector2D0 = new Vector2D(8.0, 2802.4809577751107);
      Vector2D vector2D1 = Vector2D.POSITIVE_INFINITY;
      Vector2D vector2D2 = vector2D1.subtract((-705.544), (Vector<Euclidean2D>) vector2D0);
      vector2D0.add((Vector<Euclidean2D>) vector2D1);
      vector2D0.negate();
      Vector2D vector2D3 = Vector2D.NaN;
      Plane plane0 = new Plane(vector3D0);
      Plane plane1 = new Plane(plane0);
      Line line0 = plane0.intersection(plane1);
      BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>(vector2D2);
      IntervalsSet intervalsSet0 = new IntervalsSet(bSPTree0);
      RotationOrder rotationOrder0 = RotationOrder.XYX;
      rotationOrder0.getA1();
      SubLine subLine0 = new SubLine(line0, intervalsSet0);
      SubLine subLine1 = new SubLine(line0, intervalsSet0);
      // Undeclared exception!
      subLine0.intersection(subLine1, false);
  }
}
