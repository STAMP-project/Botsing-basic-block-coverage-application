/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 16:51:13 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalTime;
import org.joda.time.MutableDateTime;
import org.joda.time.PeriodType;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      buddhistChronology0.withUTC();
      DateTimeFieldType.clockhourOfDay();
      LocalTime.fromMillisOfDay((-1192L));
      PeriodType.time();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
      DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, 1345, false);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);
      BuddhistChronology.getInstance();
      BuddhistChronology.getInstanceUTC();
      DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-878));
      MutableDateTime mutableDateTime0 = new MutableDateTime((Chronology) null);
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-878));
      MutableDateTime mutableDateTime1 = MutableDateTime.now(dateTimeZone0);
      int int0 = 1;
      // Undeclared exception!
      dateTimeFormatter1.parseInto(mutableDateTime1, "L0=0Pe'yd+.g{JC\"nn#", 1);
  }
}
