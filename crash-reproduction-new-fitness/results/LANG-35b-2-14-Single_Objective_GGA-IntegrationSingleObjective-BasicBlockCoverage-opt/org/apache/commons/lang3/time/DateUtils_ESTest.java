/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 04:22:41 UTC 2021
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import org.apache.commons.lang3.time.DateUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateUtils_ESTest extends DateUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Calendar calendar0 = mock(Calendar.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(calendar0).get(anyInt());
      DateUtils.isSameLocalTime(calendar0, calendar0);
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L).when(date0).getTime();
      DateUtils.isSameDay(date0, date0);
      Calendar calendar1 = mock(Calendar.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(calendar1).get(anyInt());
      DateUtils.isSameLocalTime(calendar1, calendar1);
      Calendar calendar2 = mock(Calendar.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(calendar2).get(anyInt());
      DateUtils.isSameLocalTime(calendar2, calendar2);
      Date date1 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date1).getTime();
      int int0 = 4368;
      Date date2 = DateUtils.addDays(date1, 4368);
      int int1 = 1048;
      DateUtils.addWeeks(date2, 1048);
      String[] stringArray0 = new String[0];
      try { 
        DateUtils.parseDate("", stringArray0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unable to parse the date: 
         //
         verifyException("org.apache.commons.lang3.time.DateUtils", e);
      }
  }
}
