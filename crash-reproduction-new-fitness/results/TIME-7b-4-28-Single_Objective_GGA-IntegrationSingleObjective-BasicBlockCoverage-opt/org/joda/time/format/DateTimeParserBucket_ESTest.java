/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:08:08 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      doReturn((DateTimeZone) null).when(chronology0).getZone();
      doReturn((Chronology) null).when(chronology0).withUTC();
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(24L, chronology0, (Locale) null);
      Chronology chronology1 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      doReturn((DateTimeZone) null).when(chronology1).getZone();
      doReturn((Chronology) null).when(chronology1).withUTC();
      Integer integer0 = new Integer(2);
      DateTimeParserBucket dateTimeParserBucket1 = new DateTimeParserBucket(24L, chronology1, (Locale) null, integer0, (-11));
      dateTimeParserBucket1.setOffset((-11));
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      DateTimeField dateTimeField0 = buddhistChronology0.clockhourOfHalfday();
      dateTimeParserBucket0.saveField(dateTimeField0, 2);
      dateTimeParserBucket0.computeMillis(false, " R}Jc22U7");
      dateTimeParserBucket0.saveState();
      dateTimeParserBucket0.setOffset(169);
      BuddhistChronology.getInstance();
      DateTimeField dateTimeField1 = buddhistChronology0.clockhourOfHalfday();
      dateTimeParserBucket1.saveField(dateTimeField1, 0);
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
      dateTimeParserBucket1.saveField(dateTimeFieldType0, 169);
      // Undeclared exception!
      dateTimeParserBucket1.computeMillis(true, " R}Jc22U7");
  }
}
