/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 10:26:17 UTC 2021
 */

package org.xwiki.model.internal.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.EntityType;
import org.xwiki.model.internal.reference.AbstractStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.DefaultStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.DefaultSymbolScheme;
import org.xwiki.model.internal.reference.ExplicitStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.SymbolScheme;
import org.xwiki.model.reference.EntityReference;
import org.xwiki.model.reference.EntityReferenceProvider;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractStringEntityReferenceResolver_ESTest extends AbstractStringEntityReferenceResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EntityReferenceProvider entityReferenceProvider0 = mock(EntityReferenceProvider.class, new ViolatedAssumptionAnswer());
      DefaultSymbolScheme defaultSymbolScheme0 = new DefaultSymbolScheme();
      defaultSymbolScheme0.initialize();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) defaultSymbolScheme0;
      defaultSymbolScheme0.initialize();
      ExplicitStringEntityReferenceResolver explicitStringEntityReferenceResolver0 = new ExplicitStringEntityReferenceResolver();
      DefaultSymbolScheme defaultSymbolScheme1 = new DefaultSymbolScheme();
      Injector.inject(explicitStringEntityReferenceResolver0, (Class<?>) AbstractStringEntityReferenceResolver.class, "symbolScheme", (Object) defaultSymbolScheme1);
      Injector.validateBean(explicitStringEntityReferenceResolver0, (Class<?>) ExplicitStringEntityReferenceResolver.class);
      SymbolScheme symbolScheme0 = explicitStringEntityReferenceResolver0.getSymbolScheme();
      explicitStringEntityReferenceResolver0.initialize();
      EntityType entityType0 = EntityType.BLOCK;
      EntityReference entityReference0 = explicitStringEntityReferenceResolver0.resolve("w``jyFwf+ZQU_p?v", entityType0, objectArray0);
      DefaultStringEntityReferenceResolver defaultStringEntityReferenceResolver0 = new DefaultStringEntityReferenceResolver();
      EntityReferenceProvider entityReferenceProvider1 = mock(EntityReferenceProvider.class, new ViolatedAssumptionAnswer());
      doReturn((EntityReference) null).when(entityReferenceProvider1).getDefaultReference(any(org.xwiki.model.EntityType.class));
      Injector.inject(defaultStringEntityReferenceResolver0, (Class<?>) DefaultStringEntityReferenceResolver.class, "provider", (Object) entityReferenceProvider1);
      DefaultSymbolScheme defaultSymbolScheme2 = new DefaultSymbolScheme();
      Injector.inject(defaultStringEntityReferenceResolver0, (Class<?>) AbstractStringEntityReferenceResolver.class, "symbolScheme", (Object) defaultSymbolScheme2);
      Injector.validateBean(defaultStringEntityReferenceResolver0, (Class<?>) DefaultStringEntityReferenceResolver.class);
      EntityType entityType1 = EntityType.CLASS_PROPERTY;
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) entityReference0;
      objectArray1[1] = (Object) defaultSymbolScheme2;
      objectArray1[2] = (Object) defaultSymbolScheme0;
      objectArray1[3] = (Object) null;
      objectArray1[4] = (Object) symbolScheme0;
      Object object0 = new Object();
      objectArray1[5] = object0;
      defaultStringEntityReferenceResolver0.getDefaultReference(entityType1, objectArray1);
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = object0;
      objectArray2[1] = (Object) entityType0;
      objectArray2[2] = (Object) defaultSymbolScheme2;
      objectArray2[3] = (Object) defaultSymbolScheme1;
      objectArray2[4] = (Object) entityReferenceProvider0;
      objectArray2[5] = object0;
      objectArray2[6] = (Object) entityReference0;
      Object object1 = new Object();
      objectArray2[7] = object1;
      objectArray2[8] = (Object) entityType1;
      // Undeclared exception!
      explicitStringEntityReferenceResolver0.resolve((String) null, entityType1, objectArray2);
  }
}
