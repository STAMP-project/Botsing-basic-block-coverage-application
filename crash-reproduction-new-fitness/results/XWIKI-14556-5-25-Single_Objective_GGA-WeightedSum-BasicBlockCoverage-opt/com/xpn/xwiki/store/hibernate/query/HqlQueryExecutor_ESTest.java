/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 15:34:49 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import com.xpn.xwiki.web.DeleteVersionsForm;
import com.xpn.xwiki.web.XWikiServletRequest;
import com.xpn.xwiki.web.XWikiServletResponseStub;
import javax.inject.Provider;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.chain.web.servlet.ServletWebContext;
import org.apache.struts.chain.contexts.ServletActionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Query;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.hibernate.type.PostgresUUIDType;
import org.hibernate.type.TimeType;
import org.hibernate.type.Type;
import org.hibernate.type.UrlType;
import org.hibernate.type.WrapperBinaryType;
import org.junit.runner.RunWith;
import org.xwiki.query.internal.DefaultQueryParameter;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Provider<DefaultQueryParameter> provider0 = (Provider<DefaultQueryParameter>) mock(Provider.class, new ViolatedAssumptionAnswer());
      OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = new OrdinalParameterDescriptor[0];
      DeleteVersionsForm deleteVersionsForm0 = new DeleteVersionsForm();
      deleteVersionsForm0.getRequest();
      XWikiServletRequest xWikiServletRequest0 = new XWikiServletRequest((HttpServletRequest) null);
      xWikiServletRequest0.getServletContext();
      XWikiServletResponseStub xWikiServletResponseStub0 = new XWikiServletResponseStub();
      xWikiServletResponseStub0.getHttpServletResponse();
      ServletWebContext servletWebContext0 = new ServletWebContext((ServletContext) null, (HttpServletRequest) null, (HttpServletResponse) null);
      ServletActionContext servletActionContext0 = new ServletActionContext(servletWebContext0);
      ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, servletActionContext0);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl("", (Object) null, (SessionImplementor) null, parameterMetadata0);
      Type[] typeArray0 = new Type[4];
      PostgresUUIDType postgresUUIDType0 = PostgresUUIDType.INSTANCE;
      typeArray0[0] = (Type) postgresUUIDType0;
      TimeType timeType0 = new TimeType();
      typeArray0[1] = (Type) timeType0;
      WrapperBinaryType wrapperBinaryType0 = new WrapperBinaryType();
      typeArray0[2] = (Type) wrapperBinaryType0;
      UrlType urlType0 = UrlType.INSTANCE;
      typeArray0[3] = (Type) urlType0;
      Query query0 = collectionFilterImpl0.setProperties((Object) typeArray0[0]);
      Object object0 = new Object();
      // Undeclared exception!
      hqlQueryExecutor0.setNamedParameter(query0, "", object0);
  }
}
