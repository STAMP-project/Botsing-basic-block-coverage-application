/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 13:27:29 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javatests.DiamondIterableMapMRO;
import javax.inject.Provider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.component.descriptor.DefaultComponentDescriptor;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.properties.BeanManager;
import org.xwiki.rendering.block.BulletedListBlock;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.block.ParagraphBlock;
import org.xwiki.rendering.internal.macro.toc.TocMacro;
import org.xwiki.rendering.internal.parser.AbstractBlockParser;
import org.xwiki.rendering.internal.parser.plain.PlainTextBlockParser;
import org.xwiki.rendering.listener.InlineFilterListener;
import org.xwiki.rendering.listener.Listener;
import org.xwiki.rendering.macro.AbstractMacro;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.renderer.reference.link.LinkLabelGenerator;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TocMacro_ESTest extends TocMacro_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkLabelGenerator linkLabelGenerator0 = mock(LinkLabelGenerator.class, new ViolatedAssumptionAnswer());
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext();
      MacroTransformationContext macroTransformationContext1 = macroTransformationContext0.clone();
      DiamondIterableMapMRO diamondIterableMapMRO0 = new DiamondIterableMapMRO();
      MacroBlock macroBlock0 = new MacroBlock("", diamondIterableMapMRO0, true);
      InlineFilterListener inlineFilterListener0 = new InlineFilterListener();
      inlineFilterListener0.getWrappedListener();
      macroBlock0.before((Listener) null);
      macroTransformationContext1.setCurrentMacroBlock(macroBlock0);
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      TocMacro tocMacro0 = new TocMacro();
      Injector.inject(tocMacro0, (Class<?>) TocMacro.class, "linkLabelGenerator", (Object) linkLabelGenerator0);
      macroTransformationContext1.setCurrentMacroBlock(macroBlock0);
      PlainTextBlockParser plainTextBlockParser0 = new PlainTextBlockParser();
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager("Navigation");
      Injector.inject(plainTextBlockParser0, (Class<?>) AbstractBlockParser.class, "componentManager", (Object) embeddableComponentManager0);
      Injector.validateBean(plainTextBlockParser0, (Class<?>) PlainTextBlockParser.class);
      Injector.inject(tocMacro0, (Class<?>) TocMacro.class, "plainTextParser", (Object) plainTextBlockParser0);
      Provider<ParagraphBlock> provider0 = (Provider<ParagraphBlock>) mock(Provider.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(provider0).get();
      Injector.inject(tocMacro0, (Class<?>) TocMacro.class, "wikiModelProvider", (Object) provider0);
      BeanManager beanManager0 = mock(BeanManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(tocMacro0, (Class<?>) AbstractMacro.class, "beanManager", (Object) beanManager0);
      DefaultComponentDescriptor<TocMacroParameters> defaultComponentDescriptor0 = new DefaultComponentDescriptor<TocMacroParameters>();
      Injector.inject(tocMacro0, (Class<?>) AbstractMacro.class, "componentDescriptor", (Object) defaultComponentDescriptor0);
      Injector.validateBean(tocMacro0, (Class<?>) TocMacro.class);
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      DefaultComponentDescriptor<BulletedListBlock> defaultComponentDescriptor1 = new DefaultComponentDescriptor<BulletedListBlock>();
      DefaultComponentDescriptor<Object> defaultComponentDescriptor2 = new DefaultComponentDescriptor<Object>();
      defaultComponentDescriptor2.equals(macroTransformationContext1);
      tocMacro0.supportsInlineMode();
      TransformationContext transformationContext0 = new TransformationContext();
      MacroTransformationContext macroTransformationContext2 = new MacroTransformationContext(transformationContext0);
      // Undeclared exception!
      tocMacro0.execute(tocMacroParameters0, "", macroTransformationContext1);
  }
}
