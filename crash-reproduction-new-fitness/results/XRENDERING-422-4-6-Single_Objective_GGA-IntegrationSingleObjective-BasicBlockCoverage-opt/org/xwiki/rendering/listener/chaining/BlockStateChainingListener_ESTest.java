/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 15:03:36 UTC 2021
 */

package org.xwiki.rendering.listener.chaining;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xwiki.rendering.listener.Format;
import org.xwiki.rendering.listener.MetaData;
import org.xwiki.rendering.listener.chaining.BlockStateChainingListener;
import org.xwiki.rendering.listener.chaining.ChainingListener;
import org.xwiki.rendering.listener.chaining.ConsecutiveNewLineStateChainingListener;
import org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;
import org.xwiki.rendering.listener.chaining.ListenerChain;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BlockStateChainingListener_ESTest extends BlockStateChainingListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlockStateChainingListener.Event.values();
      BlockStateChainingListener.Event.values();
      BlockStateChainingListener.Event.values();
      BlockStateChainingListener.Event.values();
      BlockStateChainingListener.Event.values();
      BlockStateChainingListener.Event.values();
      BlockStateChainingListener.Event.values();
      ListenerChain listenerChain0 = new ListenerChain();
      BlockStateChainingListener blockStateChainingListener0 = new BlockStateChainingListener(listenerChain0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MetaData metaData0 = new MetaData(hashMap0);
      blockStateChainingListener0.beginMetaData(metaData0);
      Class<ChainingListener> class0 = ChainingListener.class;
      listenerChain0.removeListener(class0);
      BlockStateChainingListener blockStateChainingListener1 = new BlockStateChainingListener(listenerChain0);
      listenerChain0.addListener(blockStateChainingListener0);
      ConsecutiveNewLineStateChainingListener consecutiveNewLineStateChainingListener0 = new ConsecutiveNewLineStateChainingListener(listenerChain0);
      EmptyBlockChainingListener emptyBlockChainingListener0 = new EmptyBlockChainingListener(listenerChain0);
      listenerChain0.addListener(emptyBlockChainingListener0);
      Format format0 = Format.ITALIC;
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      BlockStateChainingListener blockStateChainingListener2 = new BlockStateChainingListener(listenerChain0);
      // Undeclared exception!
      blockStateChainingListener2.endFormat(format0, hashMap1);
  }
}
