/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 17:44:49 UTC 2020
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeField;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.ZonedChronology;
import org.joda.time.field.FieldUtils;
import org.joda.time.field.StrictDateTimeField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class FieldUtils_ESTest extends FieldUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfDay();
      CopticChronology copticChronology0 = CopticChronology.getInstance();
      GJChronology gJChronology0 = GJChronology.getInstance();
      DateTimeZone dateTimeZone0 = gJChronology0.getZone();
      ZonedChronology zonedChronology0 = ZonedChronology.getInstance(copticChronology0, dateTimeZone0);
      DateTimeField dateTimeField0 = dateTimeFieldType0.getField(zonedChronology0);
      DateTimeField dateTimeField1 = StrictDateTimeField.getInstance(dateTimeField0);
      int int0 = Integer.MIN_VALUE;
      FieldUtils.verifyValueBounds(dateTimeField1, Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MIN_VALUE);
      int int1 = 0;
      // Undeclared exception!
      FieldUtils.verifyValueBounds(dateTimeField0, Integer.MIN_VALUE, 0, 0);
  }
}
