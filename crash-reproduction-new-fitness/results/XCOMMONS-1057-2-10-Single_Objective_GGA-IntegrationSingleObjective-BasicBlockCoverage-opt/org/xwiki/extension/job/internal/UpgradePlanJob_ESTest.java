/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 10:28:33 UTC 2021
 */

package org.xwiki.extension.job.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jgroups.util.TimeScheduler3;
import org.junit.runner.RunWith;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.job.internal.AbstractInstallPlanJob;
import org.xwiki.extension.job.internal.UpgradePlanJob;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.repository.xwiki.internal.XWikiExtensionRepository;
import org.xwiki.extension.version.internal.DefaultVersion;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class UpgradePlanJob_ESTest extends UpgradePlanJob_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UpgradePlanJob upgradePlanJob0 = new UpgradePlanJob();
      ArrayList<TimeScheduler3.Task> arrayList0 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList1 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList2 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList3 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList4 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList5 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList6 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList7 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList8 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList9 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList10 = new ArrayList<TimeScheduler3.Task>();
      AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
      upgradePlanJob0.extensionTree = abstractInstallPlanJob_ModifableExtensionPlanTree0;
      ArrayList<TimeScheduler3.Task> arrayList11 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList12 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList13 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList14 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList15 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList16 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList17 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList18 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList19 = new ArrayList<TimeScheduler3.Task>();
      ArrayList<TimeScheduler3.Task> arrayList20 = new ArrayList<TimeScheduler3.Task>();
      DefaultVersion defaultVersion0 = (DefaultVersion)XWikiExtensionRepository.VERSION11;
      ExtensionPlanNode extensionPlanNode0 = mock(ExtensionPlanNode.class, new ViolatedAssumptionAnswer());
      abstractInstallPlanJob_ModifableExtensionPlanTree0.add(extensionPlanNode0);
      ExtensionId extensionId0 = new ExtensionId("Npj|`mpEfX");
      extensionId0.equals(arrayList7);
      // Undeclared exception!
      upgradePlanJob0.tryInstallExtension(extensionId0, "Npj|`mpEfX");
  }
}
