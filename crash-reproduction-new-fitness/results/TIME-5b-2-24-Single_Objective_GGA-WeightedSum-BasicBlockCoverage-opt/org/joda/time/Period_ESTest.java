/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 16:36:27 UTC 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.DurationFieldType;
import org.joda.time.LocalTime;
import org.joda.time.Months;
import org.joda.time.MutableDateTime;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Period_ESTest extends Period_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Days days0 = Days.MIN_VALUE;
      Period period0 = Period.ZERO;
      int int0 = (-1092);
      Period.months((-1092));
      Months months0 = Months.FOUR;
      LocalTime localTime0 = LocalTime.MIDNIGHT;
      DurationFieldType durationFieldType0 = DurationFieldType.millis();
      LocalTime localTime1 = localTime0.withFieldAdded(durationFieldType0, (-2868));
      localTime1.plusSeconds((-2633));
      MutableDateTime mutableDateTime0 = new MutableDateTime((long) (-2633), (DateTimeZone) null);
      PeriodType periodType0 = days0.getPeriodType();
      PeriodType periodType1 = periodType0.withMonthsRemoved();
      Period period1 = new Period(mutableDateTime0, mutableDateTime0, periodType1);
      // Undeclared exception!
      period1.withYears((-1));
  }
}
