/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 23:21:54 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.LinkedList;
import java.util.Map;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.ExpandedMacroBlock;
import org.xwiki.rendering.block.SectionBlock;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.renderer.BlockRenderer;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.TransformationContext;
import org.xwiki.rendering.util.IdGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      Block block1 = null;
      Stack<SectionBlock> stack0 = new Stack<SectionBlock>();
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      IdGenerator idGenerator0 = new IdGenerator();
      LinkedList<Block> linkedList0 = new LinkedList<Block>();
      TransformationContext transformationContext0 = new TransformationContext();
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext(transformationContext0);
      macroTransformationContext0.clone();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ExpandedMacroBlock expandedMacroBlock0 = new ExpandedMacroBlock("", map0, (BlockRenderer) null, true);
      macroTransformationContext0.setCurrentMacroBlock(expandedMacroBlock0);
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      // Undeclared exception!
      treeParametersBuilder0.build((Block) null, tocMacroParameters0, macroTransformationContext0);
  }
}
