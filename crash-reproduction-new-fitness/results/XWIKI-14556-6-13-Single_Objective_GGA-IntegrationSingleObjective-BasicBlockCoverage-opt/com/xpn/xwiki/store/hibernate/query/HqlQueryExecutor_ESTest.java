/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 09:06:55 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.store.hibernate.HibernateSessionFactory;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import java.util.Stack;
import javax.inject.Provider;
import org.apache.commons.chain.web.servlet.ServletWebContext;
import org.apache.struts.chain.contexts.ServletActionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Query;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.QueryImpl;
import org.junit.runner.RunWith;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.context.Execution;
import org.xwiki.job.event.status.JobProgressManager;
import org.xwiki.query.SecureQuery;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.query.internal.DefaultQueryParameter;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
      Provider<DefaultQueryParameter> provider0 = (Provider<DefaultQueryParameter>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider0);
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "execution", (Object) execution0);
      JobProgressManager jobProgressManager0 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "progress", (Object) jobProgressManager0);
      HibernateSessionFactory hibernateSessionFactory0 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
      Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "sessionFactory", (Object) hibernateSessionFactory0);
      Injector.validateBean(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class);
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
      Query query0 = mock(Query.class, new ViolatedAssumptionAnswer());
      doReturn((Query) null).when(query0).setFirstResult(anyInt());
      doReturn((Query) null).when(query0).setParameter(anyString() , any());
      org.xwiki.query.Query query1 = mock(org.xwiki.query.Query.class, new ViolatedAssumptionAnswer());
      DefaultQuery defaultQuery0 = new DefaultQuery(",", hqlQueryExecutor0);
      SecureQuery secureQuery0 = defaultQuery0.checkCurrentAuthor(false);
      DefaultQuery defaultQuery1 = (DefaultQuery)((DefaultQuery) secureQuery0).setOffset(1674);
      DefaultQuery defaultQuery2 = (DefaultQuery)defaultQuery1.checkCurrentAuthor(false);
      DefaultQuery defaultQuery3 = (DefaultQuery)defaultQuery1.setOffset(345);
      defaultQuery1.bindValue("\"{fn\"", (Object) defaultQuery0);
      secureQuery0.checkCurrentAuthor(false);
      Stack<Object> stack0 = new Stack<Object>();
      defaultQuery2.bindValues(stack0);
      defaultQuery1.checkCurrentUser(false);
      HqlQueryExecutor.isSafeSelect(",");
      hqlQueryExecutor0.populateParameters(query0, defaultQuery2);
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      ServletWebContext servletWebContext0 = new ServletWebContext();
      ServletActionContext servletActionContext0 = new ServletActionContext(servletWebContext0);
      ParameterMetadata parameterMetadata0 = new ParameterMetadata((OrdinalParameterDescriptor[]) null, servletActionContext0);
      QueryImpl queryImpl0 = new QueryImpl("order by :", sessionImplementor0, parameterMetadata0);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(queryImpl0, defaultQuery3);
  }
}
