/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:17:31 UTC 2020
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.AffineTransform;
import org.apache.commons.math3.geometry.Vector;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.AbstractRegion;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.apache.commons.math3.geometry.partitioning.Transform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PolygonsSet_ESTest extends PolygonsSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet();
      polygonsSet0.computeGeometricalProperties();
      polygonsSet0.computeGeometricalProperties();
      AbstractRegion<Euclidean2D, Euclidean1D> abstractRegion0 = polygonsSet0.copySelf();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0);
      Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform0);
      polygonsSet0.applyTransform(transform0);
      polygonsSet0.contains(abstractRegion0);
      polygonsSet0.computeGeometricalProperties();
      polygonsSet0.getSize();
      BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(false);
      BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getCell((Vector<Euclidean2D>) null);
      Vector3D vector3D0 = Vector3D.MINUS_I;
      Plane plane0 = new Plane(vector3D0, vector3D0);
      Vector2D vector2D0 = plane0.toSubSpace(vector3D0);
      Line line0 = new Line(vector2D0, vector2D0);
      Line line1 = new Line(line0);
      SubLine subLine0 = line1.wholeHyperplane();
      SubHyperplane<Euclidean2D> subHyperplane0 = polygonsSet0.intersection(subLine0);
      BSPTree<Euclidean2D> bSPTree2 = bSPTree1.split(subHyperplane0);
      BSPTree<Euclidean2D> bSPTree3 = bSPTree2.copySelf();
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);
      // Undeclared exception!
      polygonsSet1.computeGeometricalProperties();
  }
}
