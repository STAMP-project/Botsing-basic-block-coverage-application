/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 13:17:17 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.properties.BeanManager;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.internal.transformation.macro.MacroTransformation;
import org.xwiki.rendering.listener.Listener;
import org.xwiki.rendering.macro.MacroManager;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.RenderingContext;
import org.xwiki.rendering.util.ErrorBlockGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext();
      EmbeddableComponentManager embeddableComponentManager1 = new EmbeddableComponentManager();
      MacroTransformation macroTransformation0 = new MacroTransformation();
      BeanManager beanManager0 = mock(BeanManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "beanManager", (Object) beanManager0);
      ErrorBlockGenerator errorBlockGenerator0 = mock(ErrorBlockGenerator.class, new ViolatedAssumptionAnswer());
      Map<String, String> map0 = Listener.EMPTY_PARAMETERS;
      MacroBlock macroBlock0 = new MacroBlock(";2", map0, ";2", false);
      macroTransformationContext0.setCurrentMacroBlock(macroBlock0);
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "errorBlockGenerator", (Object) errorBlockGenerator0);
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "logger", (Object) logger0);
      MacroManager macroManager0 = mock(MacroManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "macroManager", (Object) macroManager0);
      RenderingContext renderingContext0 = mock(RenderingContext.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "renderingContext", (Object) renderingContext0);
      Injector.validateBean(macroTransformation0, (Class<?>) MacroTransformation.class);
      macroTransformationContext0.setTransformation(macroTransformation0);
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      tocMacroParameters0.setNumbered(false);
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      // Undeclared exception!
      treeParametersBuilder0.build(macroBlock0, tocMacroParameters0, macroTransformationContext0);
  }
}
