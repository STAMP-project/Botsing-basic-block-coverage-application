/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 09:23:02 UTC 2021
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Days;
import org.joda.time.DurationFieldType;
import org.joda.time.Instant;
import org.joda.time.Partial;
import org.joda.time.ReadablePartial;
import org.joda.time.TestMutableInterval_Constructors;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Days days0 = Days.ZERO;
      days0.multipliedBy((-2904));
      Instant.now();
      days0.isLessThan(days0);
      DurationFieldType durationFieldType0 = DurationFieldType.MILLIS_TYPE;
      TestMutableInterval_Constructors testMutableInterval_Constructors0 = new TestMutableInterval_Constructors("![:C2vvT;9{}g");
      TestMutableInterval_Constructors.MockInterval testMutableInterval_Constructors_MockInterval0 = testMutableInterval_Constructors0.new MockInterval();
      Chronology chronology0 = testMutableInterval_Constructors_MockInterval0.getChronology();
      durationFieldType0.getField(chronology0);
      days0.isSupported(durationFieldType0);
      DurationFieldType durationFieldType1 = DurationFieldType.YEARS_TYPE;
      days0.getFieldType();
      DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[1];
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();
      dateTimeFieldTypeArray0[0] = dateTimeFieldType0;
      int[] intArray0 = new int[4];
      intArray0[0] = (-1101);
      intArray0[1] = (-3100);
      intArray0[2] = (-3100);
      intArray0[3] = (-1101);
      Partial partial0 = new Partial(chronology0, dateTimeFieldTypeArray0, intArray0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) partial0, (ReadablePartial) partial0);
  }
}
