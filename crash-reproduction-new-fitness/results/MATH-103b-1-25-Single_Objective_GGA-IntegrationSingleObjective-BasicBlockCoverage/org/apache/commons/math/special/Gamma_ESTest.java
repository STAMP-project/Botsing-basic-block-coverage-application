/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:07:31 UTC 2020
 */

package org.apache.commons.math.special;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.MaxIterationsExceededException;
import org.apache.commons.math.special.Gamma;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Gamma_ESTest extends Gamma_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Gamma.regularizedGammaP(1231.65584, 1231.65584, 1231.65584, 11);
      Gamma.logGamma((-1420.120847307518));
      Gamma.regularizedGammaP(0.0, (-304.506), 3303.017, Integer.MAX_VALUE);
      Gamma.regularizedGammaQ(1231.65584, 0.011366741838719505);
      double double0 = 2.1743961811521265E-4;
      Gamma.regularizedGammaQ(2.1743961811521265E-4, (-304.506));
      Gamma.regularizedGammaP(0.0, Double.NaN, (-0.4919138160976202), 11);
      Gamma.logGamma(Integer.MAX_VALUE);
      int int0 = (-1);
      try { 
        Gamma.regularizedGammaP(2.1743961811521265E-4, (double) 11, (double) 11, (-1));
        fail("Expecting exception: MaxIterationsExceededException");
      
      } catch(MaxIterationsExceededException e) {
         //
         // Maximal number of iterations (-1) exceeded
         //
         verifyException("org.apache.commons.math.special.Gamma", e);
      }
  }
}
