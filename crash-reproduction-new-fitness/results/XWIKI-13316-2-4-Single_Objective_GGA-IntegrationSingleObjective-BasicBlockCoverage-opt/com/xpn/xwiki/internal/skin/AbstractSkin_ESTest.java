/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 20:01:30 UTC 2021
 */

package com.xpn.xwiki.internal.skin;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.Logger;
import com.google.inject.Injector;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.internal.XWikiContextProvider;
import com.xpn.xwiki.internal.skin.EnvironmentSkin;
import com.xpn.xwiki.internal.skin.InternalSkinConfiguration;
import com.xpn.xwiki.internal.skin.InternalSkinManager;
import com.xpn.xwiki.util.XWikiStubContextProvider;
import java.time.LocalDate;
import javax.inject.Provider;
import javax.swing.JToolBar;
import org.apache.commons.dbcp2.PoolingConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hibernate.loader.custom.sql.SQLCustomQuery;
import org.junit.runner.RunWith;
import org.slf4j.event.SubstituteLoggingEvent;
import org.slf4j.helpers.NOPLogger;
import org.xwiki.bridge.DocumentAccessBridge;
import org.xwiki.cache.CacheManager;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.component.internal.RoleHint;
import org.xwiki.component.internal.multi.ComponentManagerManager;
import org.xwiki.configuration.ConfigurationSource;
import org.xwiki.configuration.internal.AbstractConfigurationSourceProvider;
import org.xwiki.configuration.internal.RestrictedConfigurationSourceProvider;
import org.xwiki.context.Execution;
import org.xwiki.environment.Environment;
import org.xwiki.model.reference.EntityReferenceSerializer;
import org.xwiki.rendering.block.DefinitionDescriptionBlock;
import org.xwiki.rendering.internal.syntax.DefaultSyntaxFactory;
import org.xwiki.wiki.descriptor.WikiDescriptorManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractSkin_ESTest extends AbstractSkin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<DefinitionDescriptionBlock> class0 = DefinitionDescriptionBlock.class;
      Injector injector0 = mock(Injector.class, new ViolatedAssumptionAnswer());
      SubstituteLoggingEvent substituteLoggingEvent0 = new SubstituteLoggingEvent();
      EntityReferenceSerializer<LocalDate> entityReferenceSerializer0 = (EntityReferenceSerializer<LocalDate>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
      EntityReferenceSerializer<PoolingConnection> entityReferenceSerializer1 = (EntityReferenceSerializer<PoolingConnection>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
      WikiDescriptorManager wikiDescriptorManager0 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
      Logger logger0 = (Logger)SQLCustomQuery.log;
      Provider<String> provider0 = (Provider<String>) mock(Provider.class, new ViolatedAssumptionAnswer());
      DefaultSyntaxFactory defaultSyntaxFactory0 = new DefaultSyntaxFactory();
      Provider<PoolingConnection> provider1 = (Provider<PoolingConnection>) mock(Provider.class, new ViolatedAssumptionAnswer());
      CacheManager cacheManager0 = mock(CacheManager.class, new ViolatedAssumptionAnswer());
      NOPLogger nOPLogger0 = NOPLogger.NOP_LOGGER;
      Injector injector1 = mock(Injector.class, new ViolatedAssumptionAnswer());
      Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
      DocumentAccessBridge documentAccessBridge0 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
      RoleHint<JToolBar> roleHint0 = new RoleHint<JToolBar>(class0, "ISPN000047: Error while doing remote call");
      Execution execution1 = mock(Execution.class, new ViolatedAssumptionAnswer());
      EntityReferenceSerializer<XWikiContext> entityReferenceSerializer2 = (EntityReferenceSerializer<XWikiContext>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
      ComponentManagerManager componentManagerManager0 = mock(ComponentManagerManager.class, new ViolatedAssumptionAnswer());
      EntityReferenceSerializer<Object> entityReferenceSerializer3 = (EntityReferenceSerializer<Object>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
      Execution execution2 = mock(Execution.class, new ViolatedAssumptionAnswer());
      Injector injector2 = mock(Injector.class, new ViolatedAssumptionAnswer());
      InternalSkinConfiguration internalSkinConfiguration0 = new InternalSkinConfiguration();
      RestrictedConfigurationSourceProvider restrictedConfigurationSourceProvider0 = new RestrictedConfigurationSourceProvider();
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
      org.evosuite.runtime.javaee.injection.Injector.inject(restrictedConfigurationSourceProvider0, (Class<?>) AbstractConfigurationSourceProvider.class, "componentManager", (Object) embeddableComponentManager0);
      org.evosuite.runtime.javaee.injection.Injector.validateBean(restrictedConfigurationSourceProvider0, (Class<?>) RestrictedConfigurationSourceProvider.class);
      ConfigurationSource configurationSource0 = restrictedConfigurationSourceProvider0.get();
      org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinConfiguration0, (Class<?>) InternalSkinConfiguration.class, "xwikicfg", (Object) configurationSource0);
      org.evosuite.runtime.javaee.injection.Injector.validateBean(internalSkinConfiguration0, (Class<?>) InternalSkinConfiguration.class);
      XWikiContextProvider xWikiContextProvider0 = new XWikiContextProvider();
      XWikiStubContextProvider xWikiStubContextProvider0 = mock(XWikiStubContextProvider.class, new ViolatedAssumptionAnswer());
      org.evosuite.runtime.javaee.injection.Injector.inject(xWikiContextProvider0, (Class<?>) XWikiContextProvider.class, "contextProvider", (Object) xWikiStubContextProvider0);
      Execution execution3 = mock(Execution.class, new ViolatedAssumptionAnswer());
      org.evosuite.runtime.javaee.injection.Injector.inject(xWikiContextProvider0, (Class<?>) XWikiContextProvider.class, "execution", (Object) execution3);
      org.evosuite.runtime.javaee.injection.Injector.validateBean(xWikiContextProvider0, (Class<?>) XWikiContextProvider.class);
      EnvironmentSkin environmentSkin0 = new EnvironmentSkin("^yEVD", (InternalSkinManager) null, internalSkinConfiguration0, logger0, defaultSyntaxFactory0, (Environment) null, xWikiContextProvider0);
      // Undeclared exception!
      environmentSkin0.getOutputSyntax();
  }
}
