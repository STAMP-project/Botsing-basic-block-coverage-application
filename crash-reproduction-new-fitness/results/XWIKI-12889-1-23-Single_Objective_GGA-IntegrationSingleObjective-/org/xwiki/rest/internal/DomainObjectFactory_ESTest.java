/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 10:30:38 UTC 2020
 */

package org.xwiki.rest.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.Logger;
import com.xpn.xwiki.objects.BaseObject;
import com.xpn.xwiki.objects.meta.PropertyMetaClass;
import java.net.URI;
import java.util.ArrayList;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.collection.PersistentBag;
import org.hibernate.collection.PersistentList;
import org.hibernate.engine.SessionImplementor;
import org.junit.runner.RunWith;
import org.xwiki.component.manager.ComponentManager;
import org.xwiki.job.DefaultJobStatus;
import org.xwiki.job.DefaultRequest;
import org.xwiki.job.event.status.JobStatus;
import org.xwiki.logging.LoggerManager;
import org.xwiki.observation.internal.DefaultObservationManager;
import org.xwiki.rest.internal.DomainObjectFactory;
import org.xwiki.rest.model.jaxb.Attachments;
import org.xwiki.rest.model.jaxb.Link;
import org.xwiki.rest.model.jaxb.ObjectFactory;
import ucar.nc2.util.net.URLStreamHandlerFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DomainObjectFactory_ESTest extends DomainObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Attachments attachments0 = new Attachments();
      Link link0 = new Link();
      PropertyMetaClass propertyMetaClass0 = new PropertyMetaClass();
      BaseObject baseObject0 = new BaseObject();
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      propertyMetaClass0.toXMLString();
      PersistentList persistentList0 = new PersistentList(sessionImplementor0);
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.lastIndexOf((Object) null);
      link0.setHrefLang("q@tap+u");
      persistentList0.addAll((Collection) arrayList0);
      PersistentBag persistentBag0 = new PersistentBag();
      DefaultRequest defaultRequest0 = new DefaultRequest();
      DefaultRequest defaultRequest1 = new DefaultRequest(defaultRequest0);
      defaultRequest1.removeProperty((String) null);
      JobStatus jobStatus0 = mock(JobStatus.class, new ViolatedAssumptionAnswer());
      DefaultObservationManager defaultObservationManager0 = new DefaultObservationManager();
      ComponentManager componentManager0 = mock(ComponentManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultObservationManager0, (Class<?>) DefaultObservationManager.class, "componentManager", (Object) componentManager0);
      Logger logger0 = (Logger)URLStreamHandlerFactory.log;
      Injector.inject(defaultObservationManager0, (Class<?>) DefaultObservationManager.class, "logger", (Object) logger0);
      Injector.validateBean(defaultObservationManager0, (Class<?>) DefaultObservationManager.class);
      DefaultJobStatus<DefaultRequest> defaultJobStatus0 = new DefaultJobStatus<DefaultRequest>(defaultRequest1, jobStatus0, defaultObservationManager0, (LoggerManager) null);
      JobStatus jobStatus1 = defaultJobStatus0.getParentJobStatus();
      DefaultJobStatus<DefaultRequest> defaultJobStatus1 = new DefaultJobStatus<DefaultRequest>(defaultRequest0, jobStatus1, defaultObservationManager0, (LoggerManager) null);
      defaultJobStatus0.getParentJobStatus();
      ObjectFactory objectFactory0 = new ObjectFactory();
      URI uRI0 = URI.create("q@tap+u");
      // Undeclared exception!
      DomainObjectFactory.createJobStatus(objectFactory0, uRI0, defaultJobStatus0);
  }
}
