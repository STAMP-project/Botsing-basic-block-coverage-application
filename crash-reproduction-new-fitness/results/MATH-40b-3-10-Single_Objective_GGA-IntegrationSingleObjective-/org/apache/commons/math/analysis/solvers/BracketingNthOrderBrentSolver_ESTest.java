/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:16:37 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BracketingNthOrderBrentSolver_ESTest extends BracketingNthOrderBrentSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      UnivariateFunction univariateFunction0 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(univariateFunction0).value(anyDouble());
      double double0 = Double.NaN;
      bracketingNthOrderBrentSolver0.solve(9, univariateFunction0, Double.NaN, (-2790.078311723544));
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      SinFunction sinFunction0 = new SinFunction();
      UnivariateFunction univariateFunction1 = sinFunction0.derivative();
      bracketingNthOrderBrentSolver0.verifyBracketing(3321.99, Double.NaN);
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(9, univariateFunction1, (-2001.45687), (-1369.074), (-1652.8742302283033), allowedSolution0);
  }
}
