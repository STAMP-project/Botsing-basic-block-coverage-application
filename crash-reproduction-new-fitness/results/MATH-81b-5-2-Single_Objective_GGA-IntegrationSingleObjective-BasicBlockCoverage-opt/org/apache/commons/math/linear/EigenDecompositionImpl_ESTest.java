/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 09:48:04 UTC 2021
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-4223.304481498663);
      doubleArray0[1] = (-4223.304481498663);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-4223.304481498663);
      doubleArray1[1] = (-4223.304481498663);
      doubleArray0[0] = 1613.6245389605444;
      int int0 = (-2146736244);
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = 2916.6087040479615;
      doubleArray2[1] = (double) (-2146736244);
      doubleArray2[2] = 1613.6245389605444;
      doubleArray2[4] = 1716.72172;
      EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray2, 2916.6087040479615);
      eigenDecompositionImpl0.getSolver();
      EigenDecompositionImpl eigenDecompositionImpl1 = new EigenDecompositionImpl(doubleArray0, doubleArray2, 0.0);
  }
}
