/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 05:10:52 BST 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.GregorianCalendar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Days;
import org.joda.time.DurationFieldType;
import org.joda.time.LocalDateTime;
import org.joda.time.ReadablePartial;
import org.joda.time.TestLocalDateTime_Basics;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];
      TestLocalDateTime_Basics testLocalDateTime_Basics0 = new TestLocalDateTime_Basics("");
      TestLocalDateTime_Basics.MockInstant testLocalDateTime_Basics_MockInstant0 = testLocalDateTime_Basics0.new MockInstant();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(1, 100, (-1));
      LocalDateTime localDateTime0 = LocalDateTime.fromCalendarFields(gregorianCalendar0);
      DurationFieldType durationFieldType0 = DurationFieldType.minutes();
      LocalDateTime localDateTime1 = localDateTime0.withFieldAdded(durationFieldType0, (-1));
      LocalDateTime localDateTime2 = localDateTime1.withWeekyear((-1));
      LocalDateTime localDateTime3 = localDateTime2.withCenturyOfEra(385);
      LocalDateTime localDateTime4 = localDateTime3.withHourOfDay(3);
      LocalDateTime localDateTime5 = localDateTime4.plusMillis(2102);
      LocalDateTime localDateTime6 = localDateTime5.plusMonths((-1134));
      LocalDateTime localDateTime7 = localDateTime6.withLocalMillis((-1));
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) testLocalDateTime_Basics_MockInstant0, (ReadablePartial) localDateTime7);
  }
}
