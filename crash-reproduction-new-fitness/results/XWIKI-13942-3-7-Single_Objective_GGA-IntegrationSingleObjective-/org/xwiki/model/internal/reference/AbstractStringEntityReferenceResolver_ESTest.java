/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 12:55:54 UTC 2020
 */

package org.xwiki.model.internal.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.xwiki.model.EntityType;
import org.xwiki.model.internal.reference.AbstractStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.DefaultStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.DefaultSymbolScheme;
import org.xwiki.model.internal.reference.ExplicitStringEntityReferenceResolver;
import org.xwiki.model.internal.reference.RelativeStringEntityReferenceResolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractStringEntityReferenceResolver_ESTest extends AbstractStringEntityReferenceResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultStringEntityReferenceResolver defaultStringEntityReferenceResolver0 = new DefaultStringEntityReferenceResolver();
      DefaultSymbolScheme defaultSymbolScheme0 = new DefaultSymbolScheme();
      DefaultSymbolScheme defaultSymbolScheme1 = new DefaultSymbolScheme();
      DefaultSymbolScheme defaultSymbolScheme2 = new DefaultSymbolScheme();
      Object[] objectArray0 = new Object[5];
      objectArray0[2] = (Object) defaultSymbolScheme0;
      DefaultSymbolScheme defaultSymbolScheme3 = new DefaultSymbolScheme();
      Object[] objectArray1 = new Object[23];
      objectArray1[1] = (Object) defaultSymbolScheme0;
      objectArray1[2] = (Object) defaultSymbolScheme0;
      objectArray1[4] = (Object) defaultSymbolScheme0;
      objectArray1[5] = (Object) defaultSymbolScheme1;
      objectArray1[6] = (Object) defaultSymbolScheme0;
      objectArray1[7] = (Object) defaultSymbolScheme0;
      defaultSymbolScheme0.initialize();
      ExplicitStringEntityReferenceResolver explicitStringEntityReferenceResolver0 = new ExplicitStringEntityReferenceResolver();
      DefaultSymbolScheme defaultSymbolScheme4 = new DefaultSymbolScheme();
      defaultSymbolScheme4.initialize();
      Injector.inject(explicitStringEntityReferenceResolver0, (Class<?>) AbstractStringEntityReferenceResolver.class, "symbolScheme", (Object) defaultSymbolScheme4);
      Injector.validateBean(explicitStringEntityReferenceResolver0, (Class<?>) ExplicitStringEntityReferenceResolver.class);
      explicitStringEntityReferenceResolver0.initialize();
      DefaultSymbolScheme defaultSymbolScheme5 = new DefaultSymbolScheme();
      DefaultSymbolScheme defaultSymbolScheme6 = new DefaultSymbolScheme();
      EntityType entityType0 = EntityType.SPACE;
      RelativeStringEntityReferenceResolver relativeStringEntityReferenceResolver0 = new RelativeStringEntityReferenceResolver(defaultSymbolScheme0);
      DefaultSymbolScheme defaultSymbolScheme7 = new DefaultSymbolScheme();
      defaultSymbolScheme7.initialize();
      Injector.inject(relativeStringEntityReferenceResolver0, (Class<?>) AbstractStringEntityReferenceResolver.class, "symbolScheme", (Object) defaultSymbolScheme7);
      Injector.validateBean(relativeStringEntityReferenceResolver0, (Class<?>) RelativeStringEntityReferenceResolver.class);
      EntityType entityType1 = EntityType.WIKI;
      relativeStringEntityReferenceResolver0.getTypeSetup(entityType1);
      EntityType entityType2 = EntityType.CLASS_PROPERTY;
      relativeStringEntityReferenceResolver0.getDefaultReference(entityType2, objectArray1);
      // Undeclared exception!
      explicitStringEntityReferenceResolver0.resolve("", entityType0, objectArray0);
  }
}
