/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 23:07:33 UTC 2021
 */

package org.xwiki.rendering.internal.macro.toc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.xwiki.properties.BeanManager;
import org.xwiki.rendering.block.Block;
import org.xwiki.rendering.block.MacroBlock;
import org.xwiki.rendering.block.XDOM;
import org.xwiki.rendering.block.match.AnyBlockMatcher;
import org.xwiki.rendering.internal.macro.toc.TreeParametersBuilder;
import org.xwiki.rendering.internal.transformation.macro.MacroTransformation;
import org.xwiki.rendering.listener.MetaData;
import org.xwiki.rendering.macro.MacroManager;
import org.xwiki.rendering.macro.toc.TocMacroParameters;
import org.xwiki.rendering.transformation.MacroTransformationContext;
import org.xwiki.rendering.transformation.RenderingContext;
import org.xwiki.rendering.transformation.TransformationContext;
import org.xwiki.rendering.util.ErrorBlockGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class TreeParametersBuilder_ESTest extends TreeParametersBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<Block> arrayList0 = new ArrayList<Block>();
      AnyBlockMatcher anyBlockMatcher0 = AnyBlockMatcher.ANYBLOCKMATCHER;
      TocMacroParameters tocMacroParameters0 = new TocMacroParameters();
      TocMacroParameters.Scope tocMacroParameters_Scope0 = TocMacroParameters.Scope.LOCAL;
      tocMacroParameters0.setScope(tocMacroParameters_Scope0);
      AnyBlockMatcher anyBlockMatcher1 = new AnyBlockMatcher();
      MacroTransformation macroTransformation0 = new MacroTransformation();
      BeanManager beanManager0 = mock(BeanManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "beanManager", (Object) beanManager0);
      ErrorBlockGenerator errorBlockGenerator0 = mock(ErrorBlockGenerator.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "errorBlockGenerator", (Object) errorBlockGenerator0);
      Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "logger", (Object) logger0);
      MacroManager macroManager0 = mock(MacroManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "macroManager", (Object) macroManager0);
      RenderingContext renderingContext0 = mock(RenderingContext.class, new ViolatedAssumptionAnswer());
      Injector.inject(macroTransformation0, (Class<?>) MacroTransformation.class, "renderingContext", (Object) renderingContext0);
      Injector.validateBean(macroTransformation0, (Class<?>) MacroTransformation.class);
      TocMacroParameters tocMacroParameters1 = new TocMacroParameters();
      TransformationContext transformationContext0 = new TransformationContext();
      MetaData metaData0 = new MetaData();
      metaData0.getMetaData();
      XDOM xDOM0 = new XDOM(arrayList0, metaData0);
      transformationContext0.setXDOM(xDOM0);
      MacroTransformationContext macroTransformationContext0 = new MacroTransformationContext(transformationContext0);
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      MacroBlock macroBlock0 = new MacroBlock("SU4PLo<%QL.d3i", map0, true);
      macroTransformationContext0.setCurrentMacroBlock(macroBlock0);
      TreeParametersBuilder treeParametersBuilder0 = new TreeParametersBuilder();
      // Undeclared exception!
      treeParametersBuilder0.build(xDOM0, tocMacroParameters0, macroTransformationContext0);
  }
}
