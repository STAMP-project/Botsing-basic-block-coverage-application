/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 15:33:20 UTC 2021
 */

package com.xpn.xwiki.store.hibernate.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor;
import com.xpn.xwiki.web.Utils;
import javax.inject.Provider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.CacheMode;
import org.hibernate.Query;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.engine.query.OrdinalParameterDescriptor;
import org.hibernate.engine.query.ParameterMetadata;
import org.hibernate.impl.CollectionFilterImpl;
import org.junit.runner.RunWith;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.component.internal.DocumentComponentManager;
import org.xwiki.query.internal.DefaultQuery;
import org.xwiki.query.internal.DefaultQueryExecutorManager;
import org.xwiki.query.internal.LanguageQueryFilter;
import org.xwiki.query.internal.SecureQueryExecutorManager;
import org.xwiki.query.internal.UniqueDocumentFilter;
import org.xwiki.security.authorization.ContextualAuthorizationManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class HqlQueryExecutor_ESTest extends HqlQueryExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
      SecureQueryExecutorManager secureQueryExecutorManager0 = new SecureQueryExecutorManager();
      ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
      Injector.inject(secureQueryExecutorManager0, (Class<?>) SecureQueryExecutorManager.class, "authorization", (Object) contextualAuthorizationManager0);
      DefaultQueryExecutorManager defaultQueryExecutorManager0 = new DefaultQueryExecutorManager();
      Provider<DocumentComponentManager> provider0 = (Provider<DocumentComponentManager>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultQueryExecutorManager0, (Class<?>) DefaultQueryExecutorManager.class, "componentManagerProvider", (Object) provider0);
      Provider<UniqueDocumentFilter> provider1 = (Provider<UniqueDocumentFilter>) mock(Provider.class, new ViolatedAssumptionAnswer());
      Injector.inject(defaultQueryExecutorManager0, (Class<?>) DefaultQueryExecutorManager.class, "namedQueryExecutorProvider", (Object) provider1);
      Injector.validateBean(defaultQueryExecutorManager0, (Class<?>) DefaultQueryExecutorManager.class);
      Injector.inject(secureQueryExecutorManager0, (Class<?>) SecureQueryExecutorManager.class, "defaultQueryExecutorManager", (Object) defaultQueryExecutorManager0);
      Injector.validateBean(secureQueryExecutorManager0, (Class<?>) SecureQueryExecutorManager.class);
      DefaultQuery defaultQuery0 = new DefaultQuery("agd", ";  Ignoring.", secureQueryExecutorManager0);
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager("agd");
      LanguageQueryFilter languageQueryFilter0 = new LanguageQueryFilter();
      defaultQuery0.bindValue("", (Object) "xK9{j7b?}>Q");
      Utils.setComponentManager(embeddableComponentManager0);
      XWikiContext xWikiContext0 = new XWikiContext();
      XWikiContext xWikiContext1 = xWikiContext0.clone();
      defaultQuery0.checkCurrentAuthor(true);
      XWikiContext xWikiContext2 = xWikiContext1.clone();
      SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
      ParameterMetadata parameterMetadata0 = new ParameterMetadata((OrdinalParameterDescriptor[]) null, xWikiContext1);
      CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl(" from system.onerow", xWikiContext2, sessionImplementor0, parameterMetadata0);
      CacheMode cacheMode0 = CacheMode.REFRESH;
      Query query0 = collectionFilterImpl0.setCacheMode(cacheMode0);
      // Undeclared exception!
      hqlQueryExecutor0.populateParameters(query0, defaultQuery0);
  }
}
