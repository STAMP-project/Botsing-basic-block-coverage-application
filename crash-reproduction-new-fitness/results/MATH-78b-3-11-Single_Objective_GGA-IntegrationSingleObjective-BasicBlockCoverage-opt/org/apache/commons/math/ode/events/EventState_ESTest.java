/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 06:53:49 UTC 2021
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StepInterpolator stepInterpolator0 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator0).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator0).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator0).isForward();
      StepInterpolator stepInterpolator1 = mock(StepInterpolator.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(stepInterpolator1).getCurrentTime();
      doReturn((Object) null, (Object) null, (Object) null).when(stepInterpolator1).getInterpolatedState();
      doReturn(false, false).when(stepInterpolator1).isForward();
      StepProblem stepProblem0 = new StepProblem(4627.013474883332, 4627.013474883332, 0.0);
      EventState eventState0 = new EventState(stepProblem0, 2773.1895555091, 0.0, (-1128));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 4627.013474883332;
      doubleArray0[1] = 0.0;
      EventState eventState1 = new EventState(stepProblem0, 56.60577774814473, 0.0, 1883088326);
      double[] doubleArray1 = null;
      eventState1.reset(0.0, (double[]) null);
      eventState0.evaluateStep(stepInterpolator0);
      eventState0.getEventTime();
      eventState0.stepAccepted(1883088326, doubleArray0);
      // Undeclared exception!
      eventState0.evaluateStep(stepInterpolator1);
  }
}
