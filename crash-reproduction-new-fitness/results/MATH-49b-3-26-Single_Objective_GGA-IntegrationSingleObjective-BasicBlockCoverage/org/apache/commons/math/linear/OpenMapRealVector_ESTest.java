/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:40:38 UTC 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      double double0 = (-901.7759480162907);
      doubleArray0[2] = 3.145894820876798E-6;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
      OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply((RealVector) openMapRealVector0);
      Double[] doubleArray1 = new Double[12];
      doubleArray1[0] = (Double) 3.145894820876798E-6;
      Double double1 = new Double((-901.7759480162907));
      OpenMapRealVector openMapRealVector2 = (OpenMapRealVector)openMapRealVector1.mapSubtract((-223.0));
      OpenMapRealVector openMapRealVector3 = openMapRealVector1.copy();
      openMapRealVector1.hashCode();
      openMapRealVector3.getNorm();
      openMapRealVector0.getL1Distance(doubleArray0);
      // Undeclared exception!
      openMapRealVector2.ebeMultiply((RealVector) openMapRealVector3);
  }
}
