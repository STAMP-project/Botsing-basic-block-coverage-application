/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 04:11:50 UTC 2021
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1.0);
      doubleArray0[3] = (-3289.8);
      doubleArray0[4] = (-3289.8);
      doubleArray0[5] = (-3289.8);
      doubleArray0[6] = (-3289.8);
      doubleArray0[7] = (-3289.8);
      NumberUtils.max(doubleArray0);
      short[] shortArray0 = new short[8];
      shortArray0[1] = (short) (-3853);
      doubleArray0[4] = (double) (short)22;
      shortArray0[5] = (short)22;
      shortArray0[6] = (short) (-3853);
      doubleArray0[8] = (double) (short)0;
      NumberUtils.min(doubleArray0);
      long[] longArray0 = new long[5];
      int[] intArray0 = new int[5];
      intArray0[1] = (int) (short)0;
      Byte.toUnsignedInt((byte)24);
      intArray0[3] = (int) (short)0;
      NumberUtils.min(intArray0);
      byte[] byteArray0 = new byte[1];
      NumberUtils.toShort("(?: s|[s&&[^ ]])s*");
      try { 
        NumberUtils.createNumber("0x");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
