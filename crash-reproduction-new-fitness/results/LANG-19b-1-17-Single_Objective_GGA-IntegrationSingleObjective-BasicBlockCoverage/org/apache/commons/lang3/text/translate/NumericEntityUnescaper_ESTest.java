/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 01:42:25 UTC 2020
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.CharSequenceTranslator;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumericEntityUnescaper_ESTest extends NumericEntityUnescaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharSequence charSequence0 = mock(CharSequence.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(charSequence0).length();
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      StringWriter stringWriter0 = new StringWriter();
      CharSequenceTranslator[] charSequenceTranslatorArray0 = new CharSequenceTranslator[3];
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) numericEntityUnescaper0;
      charSequenceTranslatorArray0[1] = (CharSequenceTranslator) numericEntityUnescaper0;
      charSequenceTranslatorArray0[0] = (CharSequenceTranslator) numericEntityUnescaper0;
      numericEntityUnescaper0.with(charSequenceTranslatorArray0);
      char char0 = '&';
      StringWriter stringWriter1 = stringWriter0.append('&');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      StringBuffer stringBuffer1 = stringWriter0.getBuffer();
      NumericEntityUnescaper numericEntityUnescaper1 = new NumericEntityUnescaper();
      numericEntityUnescaper1.translate((CharSequence) stringBuffer0);
      StringWriter stringWriter2 = stringWriter1.append('#');
      char char1 = '}';
      stringWriter2.append('}');
      stringWriter0.getBuffer();
      CharBuffer.wrap(charSequence0);
      // Undeclared exception!
      numericEntityUnescaper0.translate((CharSequence) stringBuffer1);
  }
}
