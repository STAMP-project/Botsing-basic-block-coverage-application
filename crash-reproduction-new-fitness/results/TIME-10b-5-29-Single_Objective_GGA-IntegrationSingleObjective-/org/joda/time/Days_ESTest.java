/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:47:35 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.LocalDate;
import org.joda.time.ReadablePartial;
import org.joda.time.TestLocalDate_Basics;
import org.joda.time.tz.UTCProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType.centuryOfEra();
      TestLocalDate_Basics testLocalDate_Basics0 = new TestLocalDate_Basics(" - ");
      TestLocalDate_Basics.MockInstant testLocalDate_Basics_MockInstant0 = testLocalDate_Basics0.new MockInstant();
      Days days0 = Days.FOUR;
      Days days1 = Days.THREE;
      TestLocalDate_Basics testLocalDate_Basics1 = new TestLocalDate_Basics((String) null);
      TestLocalDate_Basics.MockInstant testLocalDate_Basics_MockInstant1 = testLocalDate_Basics1.new MockInstant();
      UTCProvider uTCProvider0 = new UTCProvider();
      uTCProvider0.getZone("");
      LocalDate localDate0 = new LocalDate((long) 2017, (DateTimeZone) null);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) testLocalDate_Basics_MockInstant1, (ReadablePartial) localDate0);
  }
}
