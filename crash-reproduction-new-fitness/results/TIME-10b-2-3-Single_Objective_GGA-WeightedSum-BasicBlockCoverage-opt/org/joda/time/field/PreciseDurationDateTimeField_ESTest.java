/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 22:17:30 UTC 2021
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DurationField;
import org.joda.time.DurationFieldType;
import org.joda.time.Hours;
import org.joda.time.LocalTime;
import org.joda.time.Period;
import org.joda.time.field.TestPreciseDateTimeField;
import org.joda.time.field.TestPreciseDurationDateTimeField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class PreciseDurationDateTimeField_ESTest extends PreciseDurationDateTimeField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
      doReturn((DurationFieldType) null).when(dateTimeFieldType0).getDurationType();
      DurationField durationField0 = mock(DurationField.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[24];
      intArray0[0] = (-837);
      intArray0[5] = (-837);
      Integer integer0 = new Integer((-837));
      TestPreciseDateTimeField.MockPreciseDateTimeField testPreciseDateTimeField_MockPreciseDateTimeField0 = new TestPreciseDateTimeField.MockPreciseDateTimeField();
      LocalTime localTime0 = new LocalTime(462L, (Chronology) null);
      Period period0 = Period.days(0);
      testPreciseDateTimeField_MockPreciseDateTimeField0.getAsText((-40L));
      localTime0.isSupported(dateTimeFieldType0);
      testPreciseDateTimeField_MockPreciseDateTimeField0.getRangeDurationField();
      Hours hours0 = Hours.standardHoursIn(period0);
      localTime0.plus(hours0);
      testPreciseDateTimeField_MockPreciseDateTimeField0.getDifference((-1180), 1501L);
      Integer integer1 = new Integer((-837));
      testPreciseDateTimeField_MockPreciseDateTimeField0.addWrapField((long) (-1180), 704);
      testPreciseDateTimeField_MockPreciseDateTimeField0.addWrapField((long) integer0, (-837));
      testPreciseDateTimeField_MockPreciseDateTimeField0.roundCeiling((-837));
      TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getRangeDurationField();
      // Undeclared exception!
      testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(0L, 3031);
  }
}
