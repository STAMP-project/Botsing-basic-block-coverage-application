/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 04:10:18 UTC 2020
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.tz.CachedDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class Days_ESTest extends Days_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CachedDateTimeZone cachedDateTimeZone0 = (CachedDateTimeZone)DateTimeZone.getDefault();
      ((DateTimeZone)cachedDateTimeZone0).writeReplace();
      MonthDay monthDay0 = MonthDay.now((DateTimeZone) cachedDateTimeZone0);
      Days.daysBetween((ReadablePartial) monthDay0, (ReadablePartial) monthDay0);
      Days days0 = Days.FOUR;
      MonthDay monthDay1 = MonthDay.now((DateTimeZone) cachedDateTimeZone0);
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 85;
      intArray0[2] = 24;
      int int0 = Integer.MAX_VALUE;
      intArray0[3] = Integer.MAX_VALUE;
      intArray0[4] = (-2171);
      MonthDay monthDay2 = new MonthDay(monthDay0, intArray0);
      // Undeclared exception!
      Days.daysBetween((ReadablePartial) monthDay1, (ReadablePartial) monthDay2);
  }
}
