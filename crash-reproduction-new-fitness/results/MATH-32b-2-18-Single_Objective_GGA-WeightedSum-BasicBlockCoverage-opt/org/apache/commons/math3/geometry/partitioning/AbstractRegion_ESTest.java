/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 09:52:32 UTC 2021
 */

package org.apache.commons.math3.geometry.partitioning;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D;
import org.apache.commons.math3.geometry.euclidean.threed.Plane;
import org.apache.commons.math3.geometry.euclidean.threed.RotationOrder;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.AbstractRegion;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractRegion_ESTest extends AbstractRegion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntervalsSet intervalsSet0 = new IntervalsSet();
      AbstractRegion abstractRegion0 = intervalsSet0.copySelf();
      BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>("");
      BSPTree.LeafMerger<Euclidean1D> bSPTree_LeafMerger0 = (BSPTree.LeafMerger<Euclidean1D>) mock(BSPTree.LeafMerger.class, new ViolatedAssumptionAnswer());
      abstractRegion0.getSize();
      IntervalsSet intervalsSet1 = new IntervalsSet(bSPTree0);
      intervalsSet0.getSize();
      RotationOrder rotationOrder0 = RotationOrder.YXY;
      Vector3D vector3D0 = rotationOrder0.getA1();
      Plane plane0 = new Plane(vector3D0);
      rotationOrder0.getA1();
      abstractRegion0.getSize();
      boolean boolean0 = false;
      BSPTree<Euclidean1D> bSPTree1 = new BSPTree<Euclidean1D>(abstractRegion0);
      Euclidean3D euclidean3D0 = Euclidean3D.getInstance();
      Euclidean2D euclidean2D0 = euclidean3D0.getSubSpace();
      BSPTree<Euclidean2D> bSPTree2 = new BSPTree<Euclidean2D>(euclidean2D0);
      Vector2D vector2D0 = new Vector2D(Double.POSITIVE_INFINITY, 2869.0);
      BSPTree<Euclidean2D> bSPTree3 = bSPTree2.getCell(vector2D0);
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree3);
      // Undeclared exception!
      polygonsSet0.getSize();
  }
}
