/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 22:17:21 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTimeFieldType;
import org.joda.time.LocalDate;
import org.joda.time.LocalDateTime;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.format.DateTimeFormatter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFormatter dateTimeFormatter0 = mock(DateTimeFormatter.class, new ViolatedAssumptionAnswer());
      LocalDate localDate0 = new LocalDate();
      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
      copticChronology0.set(localDate0, (-1L));
      DateTimeFieldType.secondOfDay();
      LocalDateTime localDateTime0 = new LocalDateTime((-4412L));
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfHalfday();
      localDateTime0.property(dateTimeFieldType0);
      CopticChronology.getInstanceUTC();
      LocalDate localDate1 = new LocalDate();
      CopticChronology copticChronology1 = CopticChronology.getInstanceUTC();
      IslamicChronology.LeapYearPatternType islamicChronology_LeapYearPatternType0 = IslamicChronology.LEAP_YEAR_HABASH_AL_HASIB;
      IslamicChronology islamicChronology0 = new IslamicChronology(copticChronology1, dateTimeFormatter0, islamicChronology_LeapYearPatternType0);
      // Undeclared exception!
      islamicChronology0.set(localDateTime0, (-4412L));
  }
}
