/*
 * This file was automatically generated by EvoSuite
 * Thu May 14 11:32:40 UTC 2020
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.apache.commons.lang3.time.FastDateParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class FastDateParser_ESTest extends FastDateParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("The size must be non-negative");
      Locale locale0 = Locale.KOREAN;
      FastDateParser fastDateParser0 = new FastDateParser("GMTPRT", timeZone0, locale0);
      TimeZone timeZone1 = TimeZone.getTimeZone("");
      Locale locale1 = Locale.KOREAN;
      String string0 = "GMTCAT";
      FastDateParser fastDateParser1 = new FastDateParser("GMTCAT", timeZone0, locale1);
      int int0 = (-1983);
      int int1 = 1935;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1935, "<P__[8.");
      Locale locale2 = FastDateParser.JAPANESE_IMPERIAL;
      FastDateParser fastDateParser2 = new FastDateParser("(GMT[+-]d{0,1}d{2}|[+-]d{2}:?d{2}|", timeZone1, locale2);
  }
}
