/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 21:32:27 UTC 2021
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.QuinticFunction;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(210, 2.3841857910019882E-8);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2.3841857910019882E-8;
      doubleArray0[1] = (double) 210;
      openMapRealVector0.getLInfNorm();
      QuinticFunction quinticFunction0 = new QuinticFunction();
      SinFunction sinFunction0 = new SinFunction();
      UnivariateRealFunction univariateRealFunction0 = sinFunction0.derivative();
      RealVector realVector0 = openMapRealVector0.mapToSelf(univariateRealFunction0);
      openMapRealVector0.getLInfDistance(realVector0);
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(210, 210);
      openMapRealVector0.getL1Distance(openMapRealVector1);
      // Undeclared exception!
      openMapRealVector0.ebeMultiply((RealVector) openMapRealVector1);
  }
}
