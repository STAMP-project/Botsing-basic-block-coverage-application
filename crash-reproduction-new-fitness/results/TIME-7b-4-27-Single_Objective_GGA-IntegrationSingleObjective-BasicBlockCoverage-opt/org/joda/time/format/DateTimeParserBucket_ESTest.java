/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:08:17 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.LocalDateTime;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.format.DateTimeParserBucket;
import org.joda.time.tz.UTCProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeParserBucket_ESTest extends DateTimeParserBucket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UTCProvider uTCProvider0 = new UTCProvider();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      buddhistChronology0.getZone();
      LocalDateTime localDateTime0 = LocalDateTime.now();
      buddhistChronology0.set(localDateTime0, 3210L);
      CopticChronology.getInstanceUTC();
      localDateTime0.yearOfCentury();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = new Locale("3L1^#i`U(rI");
      Integer integer0 = new Integer((-1222));
      BuddhistChronology buddhistChronology1 = BuddhistChronology.getInstanceUTC();
      Locale locale2 = locale1.stripExtensions();
      DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(2147483647L, buddhistChronology1, locale2);
      dateTimeParserBucket0.getOffset();
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();
      dateTimeParserBucket0.saveField(dateTimeFieldType0, (-206));
      dateTimeParserBucket0.getZone();
      dateTimeParserBucket0.setOffset((Integer) null);
      // Undeclared exception!
      dateTimeParserBucket0.computeMillis(false, "3L1^#i`U(rI");
  }
}
