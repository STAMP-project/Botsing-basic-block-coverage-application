/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 21:31:18 UTC 2021
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.distribution.DiscreteDistribution;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.util.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DiscreteDistribution_ESTest extends DiscreteDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Pair<Long, Double>> linkedList0 = new LinkedList<Pair<Long, Double>>();
      int int0 = 1650;
      LinkedList<Pair<Integer, Double>> linkedList1 = new LinkedList<Pair<Integer, Double>>();
      LinkedList<Pair<Object, Double>> linkedList2 = new LinkedList<Pair<Object, Double>>();
      Double double0 = new Double(1650);
      Pair<Integer, Integer> pair0 = (Pair<Integer, Integer>) mock(Pair.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(pair0).getKey();
      doReturn((Object) null).when(pair0).getValue();
      Pair<Integer, Object> pair1 = new Pair<Integer, Object>(pair0);
      Double double1 = new Double(1650);
      Pair<Object, Double> pair2 = new Pair<Object, Double>(pair1, double1);
      linkedList2.addLast(pair2);
      Integer integer0 = new Integer(1449);
      Pair<Integer, Double> pair3 = new Pair<Integer, Double>(integer0, double0);
      Pair<Object, Double> pair4 = new Pair<Object, Double>(pair3);
      linkedList2.add(pair4);
      Well1024a well1024a0 = new Well1024a();
      DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(well1024a0, linkedList2);
      int[] intArray0 = new int[5];
      intArray0[0] = 1449;
      intArray0[1] = (-2146690182);
      intArray0[2] = 1073741792;
      intArray0[3] = 1650;
      Well1024a well1024a1 = new Well1024a(intArray0);
      well1024a1.nextInt();
      // Undeclared exception!
      discreteDistribution0.sample(471);
  }
}
