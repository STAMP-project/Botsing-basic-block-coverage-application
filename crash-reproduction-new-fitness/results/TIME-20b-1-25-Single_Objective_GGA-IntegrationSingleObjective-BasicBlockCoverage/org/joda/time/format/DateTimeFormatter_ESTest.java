/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 05:08:14 UTC 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalTime;
import org.joda.time.ReadablePartial;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeParser;
import org.joda.time.format.DateTimePrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dateTimePrinter0).toString();
      doReturn(0).when(dateTimePrinter0).estimatePrintedLength();
      DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(dateTimeParser0).toString();
      doReturn(0, 0, 0, 0).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class) , anyString() , anyInt());
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);
      dateTimeFormatter0.parseDateTime("");
      DateTimeZone dateTimeZone0 = mock(DateTimeZone.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(dateTimeZone0).toString();
      DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);
      dateTimeFormatter1.getZone();
      dateTimeFormatter1.isParser();
      dateTimeFormatter0.parseLocalDateTime("");
      dateTimeFormatter0.getDefaultYear();
      dateTimeFormatter0.getPivotYear();
      dateTimeFormatter1.getZone();
      LocalTime localTime0 = dateTimeFormatter0.parseLocalTime("");
      dateTimeFormatter1.isOffsetParsed();
      dateTimeFormatter0.getZone();
      Integer.getInteger("", (Integer) null);
      DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear((Integer) null);
      dateTimeFormatter1.getLocale();
      dateTimeFormatter2.withLocale((Locale) null);
      DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter1.withDefaultYear(1804);
      dateTimeFormatter3.getDefaultYear();
      dateTimeFormatter1.print((ReadablePartial) localTime0);
      DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter1.withOffsetParsed();
      // Undeclared exception!
      dateTimeFormatter4.parseDateTime("e 8'PWFDEI~|4");
  }
}
