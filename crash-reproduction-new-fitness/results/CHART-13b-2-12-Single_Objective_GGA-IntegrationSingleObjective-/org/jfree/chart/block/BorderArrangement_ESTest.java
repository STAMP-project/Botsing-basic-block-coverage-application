/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 21:17:41 UTC 2020
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.AsianFontMapper;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.sql.Connection;
import javax.swing.plaf.synth.SynthLabelUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BorderArrangement_ESTest extends BorderArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlockContainer blockContainer0 = new BlockContainer();
      String string0 = "";
      AsianFontMapper asianFontMapper0 = new AsianFontMapper("[mbcim*^@5R>`I\"$y", "");
      SynthLabelUI synthLabelUI0 = new SynthLabelUI();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BorderArrangement borderArrangement0 = new BorderArrangement();
      AffineTransform.getRotateInstance((-111.49817), (-111.49817), (-111.49817));
      PiePlot3D piePlot3D0 = new PiePlot3D();
      AsianFontMapper asianFontMapper1 = new AsianFontMapper("[mbcim*^@5R>`I\"$y", "[mbcim*^@5R>`I\"$y");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Range range0 = new Range(782.0F, (byte) (-83));
  }
}
