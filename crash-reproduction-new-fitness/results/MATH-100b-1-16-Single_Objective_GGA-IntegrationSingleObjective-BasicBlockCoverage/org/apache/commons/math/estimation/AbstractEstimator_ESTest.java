/*
 * This file was automatically generated by EvoSuite
 * Sun May 17 16:06:20 UTC 2020
 */

package org.apache.commons.math.estimation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import junit.framework.TestCase;
import org.apache.commons.math.estimation.EstimatedParameter;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
import org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest;
import org.apache.commons.math.estimation.SimpleEstimationProblem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractEstimator_ESTest extends AbstractEstimator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
      SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
      LevenbergMarquardtEstimator levenbergMarquardtEstimator1 = new LevenbergMarquardtEstimator();
      levenbergMarquardtEstimator1.estimate(simpleEstimationProblem0);
      levenbergMarquardtEstimator1.setOrthoTolerance((-91.531313));
      Object object0 = new Object();
      TestCase.assertEquals("b`EK)UC5CzgNl7", object0, object0);
      levenbergMarquardtEstimator1.incrementJacobianEvaluationsCounter();
      LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest("b`EK)UC5CzgNl7");
      LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
      EstimatedParameter estimatedParameter0 = null;
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addPoint(1643.500591662676, 0.0, 825.906215);
      levenbergMarquardtEstimatorTest_QuadraticProblem0.addParameter((EstimatedParameter) null);
      SimpleEstimationProblem simpleEstimationProblem1 = new SimpleEstimationProblem();
      // Undeclared exception!
      levenbergMarquardtEstimator1.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
  }
}
