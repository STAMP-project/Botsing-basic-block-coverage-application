/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:37:51 UTC 2020
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealVector;
import org.apache.commons.math.util.OpenIntToDoubleHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = 579.0;
      Double[] doubleArray0 = new Double[4];
      Double double1 = new Double(579.0);
      doubleArray0[0] = double1;
      Double double2 = new Double(579.0);
      doubleArray0[1] = double2;
      Double double3 = new Double(110.0);
      doubleArray0[2] = double3;
      Double double4 = new Double((double) doubleArray0[2]);
      doubleArray0[3] = double4;
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 110.0);
      openMapRealVector0.unitize();
      OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
      OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(openIntToDoubleHashMap_Iterator0).key();
      OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
      double double5 = 113.068822;
      double double6 = 4192.71107;
      openMapRealVector_OpenMapEntry0.setValue(4192.71107);
      int int0 = 1;
      openMapRealVector_OpenMapEntry0.setIndex(1);
      openMapRealVector_OpenMapEntry0.setValue((double) doubleArray0[1]);
      openMapRealVector1.getL1Distance(openMapRealVector0);
      // Undeclared exception!
      openMapRealVector0.ebeMultiply((RealVector) openMapRealVector1);
  }
}
