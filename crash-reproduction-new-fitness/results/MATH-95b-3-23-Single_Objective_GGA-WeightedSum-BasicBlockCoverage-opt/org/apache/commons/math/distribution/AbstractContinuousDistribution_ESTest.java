/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 22:41:42 UTC 2021
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.FDistributionImpl;
import org.apache.commons.math.distribution.NormalDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractContinuousDistribution_ESTest extends AbstractContinuousDistribution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
      double double0 = (-1006.8);
      Double.valueOf((-1006.8));
      Double.max((-907.3), 1.5);
      Double.isFinite((-1006.8));
      Double.sum(1.5, (-1006.8));
      double double1 = (-6934.7198013537);
      FDistributionImpl fDistributionImpl0 = new FDistributionImpl(0.8606923220430786, 1.5);
      Double double2 = new Double((-1005.3));
      // Undeclared exception!
      fDistributionImpl0.inverseCumulativeProbability(0.8606923220430786);
  }
}
