/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 28 20:02:09 UTC 2021
 */

package com.xpn.xwiki.internal.skin;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.Logger;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.internal.skin.EnvironmentSkin;
import com.xpn.xwiki.internal.skin.InternalSkinConfiguration;
import com.xpn.xwiki.internal.skin.InternalSkinManager;
import java.util.Locale;
import javax.print.attribute.Attribute;
import javax.print.attribute.standard.PrinterName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.loader.custom.sql.SQLCustomQuery;
import org.junit.runner.RunWith;
import org.slf4j.helpers.NOPLogger;
import org.xwiki.component.embed.EmbeddableComponentManager;
import org.xwiki.component.embed.GenericProvider;
import org.xwiki.component.internal.RoleHint;
import org.xwiki.configuration.ConfigurationSource;
import org.xwiki.configuration.internal.AbstractConfigurationSourceProvider;
import org.xwiki.configuration.internal.DefaultConfigurationSourceProvider;
import org.xwiki.configuration.internal.RestrictedConfigurationSourceProvider;
import org.xwiki.environment.Environment;
import org.xwiki.rendering.internal.syntax.DefaultSyntaxFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class AbstractSkin_ESTest extends AbstractSkin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InternalSkinManager internalSkinManager0 = mock(InternalSkinManager.class, new ViolatedAssumptionAnswer());
      InternalSkinConfiguration internalSkinConfiguration0 = new InternalSkinConfiguration();
      RestrictedConfigurationSourceProvider restrictedConfigurationSourceProvider0 = new RestrictedConfigurationSourceProvider();
      EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager("_eM4uk2R_ZNg{fH");
      Injector.inject(restrictedConfigurationSourceProvider0, (Class<?>) AbstractConfigurationSourceProvider.class, "componentManager", (Object) embeddableComponentManager0);
      Injector.validateBean(restrictedConfigurationSourceProvider0, (Class<?>) RestrictedConfigurationSourceProvider.class);
      ConfigurationSource configurationSource0 = restrictedConfigurationSourceProvider0.get();
      Injector.inject(internalSkinConfiguration0, (Class<?>) InternalSkinConfiguration.class, "xwikicfg", (Object) configurationSource0);
      Injector.validateBean(internalSkinConfiguration0, (Class<?>) InternalSkinConfiguration.class);
      Logger logger0 = (Logger)SQLCustomQuery.log;
      InternalSkinConfiguration internalSkinConfiguration1 = new InternalSkinConfiguration();
      Injector.inject(internalSkinConfiguration1, (Class<?>) InternalSkinConfiguration.class, "xwikicfg", (Object) configurationSource0);
      Injector.validateBean(internalSkinConfiguration1, (Class<?>) InternalSkinConfiguration.class);
      DefaultConfigurationSourceProvider defaultConfigurationSourceProvider0 = new DefaultConfigurationSourceProvider();
      Injector.inject(defaultConfigurationSourceProvider0, (Class<?>) AbstractConfigurationSourceProvider.class, "componentManager", (Object) embeddableComponentManager0);
      Injector.validateBean(defaultConfigurationSourceProvider0, (Class<?>) DefaultConfigurationSourceProvider.class);
      EmbeddableComponentManager embeddableComponentManager1 = new EmbeddableComponentManager("");
      defaultConfigurationSourceProvider0.get();
      NOPLogger nOPLogger0 = NOPLogger.NOP_LOGGER;
      DefaultSyntaxFactory defaultSyntaxFactory0 = new DefaultSyntaxFactory();
      Locale locale0 = Locale.JAPANESE;
      PrinterName printerName0 = new PrinterName("DY`]S8'l]8{", locale0);
      Class<? extends Attribute> class0 = printerName0.getCategory();
      RoleHint<XWikiContext> roleHint0 = new RoleHint<XWikiContext>(class0);
      GenericProvider<XWikiContext> genericProvider0 = new GenericProvider<XWikiContext>(embeddableComponentManager1, roleHint0);
      EnvironmentSkin environmentSkin0 = new EnvironmentSkin("_eM4uk2R_ZNg{fH", internalSkinManager0, internalSkinConfiguration0, logger0, defaultSyntaxFactory0, (Environment) null, genericProvider0);
      // Undeclared exception!
      environmentSkin0.getOutputSyntax();
  }
}
