/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 03:21:27 UTC 2020
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      doReturn(0.0, (-1.0), 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[10];
      StepProblem stepProblem0 = new StepProblem(12.0, 12.0, (-2427));
      stepProblem0.setRate(349.4);
      EventState eventState0 = new EventState(stepProblem0, 349.4, (-2427), (-2427));
      eventState0.reinitializeBegin((-2427), doubleArray0);
      Double double0 = new Double((-613.5684909956));
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      stepProblem0.eventOccurred(738.4154853999999, doubleArray0, false);
      dummyStepInterpolator0.storeTime(738.4154853999999);
      eventState0.evaluateStep(dummyStepInterpolator0);
      EventState eventState1 = new EventState(eventHandler0, 1522.6869, (-610.0), 2);
      eventState0.stop();
      eventState1.reinitializeBegin(273.17731, doubleArray0);
      eventState1.evaluateStep(dummyStepInterpolator0);
      eventState0.getEventTime();
      eventState1.getEventHandler();
      eventState0.getEventTime();
      eventState0.getMaxIterationCount();
      eventState0.getConvergence();
  }
}
