/*
 * This file was automatically generated by EvoSuite
 * Mon May 18 02:35:19 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.Expm1Function;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.MullerSolver2;
import org.apache.commons.math.analysis.solvers.RiddersSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnivariateFunction univariateFunction0 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      Expm1Function expm1Function0 = new Expm1Function();
      Expm1Function expm1Function1 = new Expm1Function();
      expm1Function1.derivative();
      expm1Function1.value(0.0);
      expm1Function1.derivative();
      expm1Function1.value((-842.77039798807));
      double double0 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      double double1 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      RiddersSolver riddersSolver0 = new RiddersSolver(1.0E-12);
      riddersSolver0.isSequence(0.0, (-1647), (-58.466883));
      riddersSolver0.isSequence(1.0E-6, (-0.5821613880417386), 6.283185307179586);
      // Undeclared exception!
      riddersSolver0.doSolve();
  }
}
