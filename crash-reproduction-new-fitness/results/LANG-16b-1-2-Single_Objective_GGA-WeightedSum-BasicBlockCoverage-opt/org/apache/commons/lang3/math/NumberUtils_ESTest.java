/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 20:26:44 UTC 2021
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      String string0 = "Mvn~H";
      NumberUtils.toLong("Mvn~H");
      short[] shortArray0 = new short[7];
      shortArray0[0] = (short)65;
      shortArray0[1] = (short) (-1);
      short short0 = (short) (-1877);
      shortArray0[2] = (short) (-1877);
      shortArray0[3] = (short) (-4193);
      shortArray0[4] = (short)247;
      shortArray0[5] = (short)0;
      shortArray0[6] = (short)509;
      NumberUtils.min(shortArray0);
      NumberUtils.toByte("Mvn~H");
      try { 
        NumberUtils.createNumber("Mvn~H");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Mvn~H is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
