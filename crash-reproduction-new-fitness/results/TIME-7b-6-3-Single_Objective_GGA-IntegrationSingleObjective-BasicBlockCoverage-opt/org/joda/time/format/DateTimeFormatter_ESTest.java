/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 30 11:05:00 UTC 2021
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Instant;
import org.joda.time.MutableDateTime;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class DateTimeFormatter_ESTest extends DateTimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();
      dateTimeFieldType0.getRangeDurationType();
      dateTimeFieldType0.isSupported((Chronology) null);
      DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, 14, false);
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);
      DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(14);
      Instant instant0 = new Instant((long) 14);
      MutableDateTime mutableDateTime0 = instant0.toMutableDateTime();
      Instant instant1 = Instant.now();
      DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.monthOfYear();
      instant1.isSupported(dateTimeFieldType1);
      String string0 = "]t<61_VQFBF\"ci(a`i1";
      MutableDateTime mutableDateTime1 = MutableDateTime.now();
      ISOChronology.getInstanceUTC();
      ClassLoader.getSystemClassLoader();
      mutableDateTime1.yearOfCentury();
      instant0.isSupported(dateTimeFieldType0);
      // Undeclared exception!
      dateTimeFormatter1.parseInto(mutableDateTime0, "e69$]N<:Z%^/zEVDW`", 1);
  }
}
