/*
 * This file was automatically generated by EvoSuite
 * Sat May 16 22:17:13 UTC 2020
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.SinFunction;
import org.apache.commons.math.analysis.UnivariateFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.BaseSecantSolver;
import org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math.analysis.solvers.NewtonSolver;
import org.apache.commons.math.analysis.solvers.RiddersSolver;
import org.apache.commons.math.analysis.solvers.SecantSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseAbstractUnivariateRealSolver_ESTest extends BaseAbstractUnivariateRealSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double1 = BaseSecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      SinFunction sinFunction0 = new SinFunction();
      sinFunction0.derivative();
      int int0 = (-1622);
      sinFunction0.value((-1622));
      sinFunction0.derivative();
      sinFunction0.value(0.0);
      RiddersSolver riddersSolver0 = new RiddersSolver(1.0E-6, 1.0E-6);
      NewtonSolver newtonSolver0 = new NewtonSolver();
      double double2 = (-319.3);
      double double3 = SecantSolver.DEFAULT_ABSOLUTE_ACCURACY;
      double double4 = (-2486.641964205141);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2486.641964205141), 9);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      AllowedSolution allowedSolution1 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      bracketingNthOrderBrentSolver0.solve(9, (UnivariateFunction) sinFunction0, (-2572.096527), 0.0, (-1203.6547646194), allowedSolution1);
  }
}
