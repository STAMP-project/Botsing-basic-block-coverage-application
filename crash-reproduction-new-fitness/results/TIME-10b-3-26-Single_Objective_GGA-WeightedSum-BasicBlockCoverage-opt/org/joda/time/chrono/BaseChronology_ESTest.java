/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 27 00:11:45 UTC 2021
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeFieldType;
import org.joda.time.Hours;
import org.joda.time.LocalDateTime;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.GregorianChronology;
import org.joda.time.chrono.ISOYearOfEraDateTimeField;
import org.joda.time.chrono.IslamicChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class BaseChronology_ESTest extends BaseChronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();
      DateTimeFieldType.dayOfYear();
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
      GregorianChronology gregorianChronology1 = GregorianChronology.getInstance();
      ISOYearOfEraDateTimeField iSOYearOfEraDateTimeField0 = (ISOYearOfEraDateTimeField)ISOYearOfEraDateTimeField.INSTANCE;
      dateTimeFieldType0.getField(gregorianChronology1);
      LocalDateTime localDateTime0 = new LocalDateTime((Chronology) gregorianChronology0);
      localDateTime0.indexOf(dateTimeFieldType0);
      DateTimeFieldType.clockhourOfHalfday();
      DateTimeFieldType.dayOfMonth();
      int int0 = 317351833;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      DateTimeFieldType.dayOfMonth();
      buddhistChronology0.set(localDateTime0, 1067L);
      LocalDateTime localDateTime1 = new LocalDateTime((long) (-1));
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance();
      DateTimeFieldType.centuryOfEra();
      Hours hours0 = Hours.THREE;
      LocalDateTime localDateTime2 = localDateTime0.plusMinutes(3110);
      // Undeclared exception!
      islamicChronology0.set(localDateTime2, 317351833);
  }
}
