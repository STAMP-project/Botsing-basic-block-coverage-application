/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 25 20:26:57 UTC 2021
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVFS = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      NumberUtils.max(0.0, 0.0, 0.0);
      NumberUtils.min((-2316.0F), 0.0F, (-2316.0F));
      short short0 = (short) (-789);
      NumberUtils.min((short) (-789), (short)4788, (short)0);
      NumberUtils.isNumber("#NrVe n?NxJ");
      NumberUtils.min((short) (-1733), (short)0, (short) (-1733));
      float[] floatArray0 = new float[6];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) (short)4788;
      floatArray0[3] = (float) (short) (-1733);
      floatArray0[4] = (-2316.0F);
      floatArray0[5] = (float) (short)0;
      NumberUtils.min(floatArray0);
      try { 
        NumberUtils.createNumber("#NrVe n?NxJ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // #NrVe n?NxJ is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }
}
