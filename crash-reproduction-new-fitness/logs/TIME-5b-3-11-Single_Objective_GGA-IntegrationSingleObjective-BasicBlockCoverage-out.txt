11:02:04.870 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.UnsupportedOperationException
11:02:04.872 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.Period.normalizedStandard(Period:1631)
11:02:04.872 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.Period
11:02:04.872 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
11:02:06.266 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.PeriodType
11:02:06.267 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.Period
11:02:06.267 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.Period
11:02:06.292 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
11:02:07.763 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
11:02:07.772 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
11:02:07.779 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
11:02:07.786 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
11:02:08.041 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 3.6666666666666665
11:02:08.428 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 12 fitness evolutions and 0 second: 1.6666666666666665
11:02:08.777 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:08.900 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.6666666666666665
11:02:08.900 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.6666666666666665. PT: 1 seconds
11:02:08.900 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
11:02:09.338 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:09.339 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:09.416 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:09.428 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:09.469 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 100
11:02:09.470 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
11:02:09.470 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
11:02:09.470 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
11:02:09.470 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: int int0 = 1666;
Period period0 = Period.months(int0);
Seconds seconds0 = Seconds.MAX_VALUE;
Period period1 = period0.withFields(seconds0);
ReadableDuration readableDuration0 = mock(ReadableDuration.class, new ViolatedAssumptionAnswer());
doReturn(0L).when(readableDuration0).getMillis();
ReadableInstant readableInstant0 = mock(ReadableInstant.class, new ViolatedAssumptionAnswer());
doReturn((Chronology) null).when(readableInstant0).getChronology();
doReturn(0L).when(readableInstant0).getMillis();
Period period2 = new Period(readableDuration0, readableInstant0);
PeriodType periodType0 = PeriodType.time();
Period period3 = period0.normalizedStandard(periodType0);
ReadableDuration readableDuration1 = mock(ReadableDuration.class, new ViolatedAssumptionAnswer());
ReadableInstant readableInstant1 = null;
Period period4 = new Period(readableDuration1, readableInstant1);
Period period5 = period3.withMinutes(int0);
int int1 = period0.getMinutes();
PeriodType periodType1 = mock(PeriodType.class, new ViolatedAssumptionAnswer());
Period period6 = period4.withPeriodType(periodType1);
int int2 = period6.getYears();
period1.toDurationTo(readableInstant1);
int int3 = (-1836);
Period period7 = new Period(int1, int3, int2, int2);
Weeks.weeksBetween(readableInstant1, readableInstant1);
period5.getValue(int3);
PeriodType periodType2 = PeriodType.months();
period2.normalizedStandard(periodType2);
Period period8 = period6.withPeriodType(periodType2);
period3.toPeriod();
int int4 = 4070;
period8.plusMonths(int4);

11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.UnsupportedOperationException: Field is not supported
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.PeriodType.setIndexedField(PeriodType.java:690)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.Period.withYears(Period.java:896)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.Period.normalizedStandard(Period.java:1631)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
11:02:09.471 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
11:02:09.472 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
11:02:09.472 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
11:02:09.478 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
11:02:09.478 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
11:02:09.478 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
11:02:10.470 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Period_ESTest' to results/TIME-5b-3-11-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
11:02:10.486 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
