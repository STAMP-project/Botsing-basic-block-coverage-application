09:22:33.743 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
09:22:33.746 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField:78)
09:22:33.746 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.PreciseDurationDateTimeField
09:22:33.746 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:22:34.275 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.FieldUtils
09:22:34.277 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.PreciseDurationDateTimeField
09:22:34.296 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
09:22:36.473 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:22:36.700 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:22:36.709 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:22:36.716 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:22:37.401 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 2.5
09:22:37.467 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 4 fitness evolutions and 0 second: 1.5
09:22:38.431 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.5
09:22:38.431 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 1 seconds
09:22:38.431 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:22:39.173 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 100
09:22:39.173 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
09:22:39.174 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:22:39.174 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:22:39.174 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfHalfday();
TestPreciseDateTimeField.MockStandardDateTimeField testPreciseDateTimeField_MockStandardDateTimeField0 = new TestPreciseDateTimeField.MockStandardDateTimeField();
DurationFieldType.centuries();
PreciseDurationField preciseDurationField0 = (PreciseDurationField)testPreciseDateTimeField_MockStandardDateTimeField0.getRangeDurationField();
long long0 = (-2228L);
int int0 = 7;
testPreciseDateTimeField_MockStandardDateTimeField0.set(long0, int0);
Chronology chronology0 = null;
dateTimeFieldType0.isSupported(chronology0);
dateTimeFieldType0.getDurationType();
dateTimeFieldType0.getDurationType();
int int1 = 0;
testPreciseDateTimeField_MockStandardDateTimeField0.isLenient();
long long1 = testPreciseDateTimeField_MockStandardDateTimeField0.set((long) int0, int1);
TestPreciseDurationDateTimeField.MockPreciseDurationDateTimeField testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0 = new TestPreciseDurationDateTimeField.MockPreciseDurationDateTimeField(dateTimeFieldType0, preciseDurationField0);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMinimumValue(long0);
long long2 = (-853L);
LocalDateTime localDateTime0 = new LocalDateTime(long2);
testPreciseDateTimeField_MockStandardDateTimeField0.getAsShortText(long1);
Weeks weeks0 = Weeks.TWO;
weeks0.toStandardDays();
Locale locale0 = Locale.ENGLISH;
long long3 = 2850L;
testPreciseDateTimeField_MockStandardDateTimeField0.getMaximumValue(long3);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.get(long1);
int[] intArray0 = null;
int int2 = (-2802);
int int3 = new Integer(int2);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.isLenient();
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.isLenient();
testPreciseDateTimeField_MockStandardDateTimeField0.getRangeDurationField();
long long4 = (-2430L);
int int4 = 1;
Integer integer0 = new Integer(int4);
int int5 = testPreciseDateTimeField_MockStandardDateTimeField0.getRange();
testPreciseDateTimeField_MockStandardDateTimeField0.get(int0);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.set(long0, int5);
long long5 = 1020L;
testPreciseDateTimeField_MockStandardDateTimeField0.set(long5, int0);

09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 60 for clockhourOfHalfday must be in the range [0,59]
09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:22:39.175 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:22:39.176 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:22:39.177 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:22:39.190 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:22:39.190 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:22:39.190 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:22:40.228 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PreciseDurationDateTimeField_ESTest' to results/TIME-10b-2-15-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:22:40.243 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
