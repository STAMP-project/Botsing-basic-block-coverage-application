06:36:04.657 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
06:36:04.660 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket:359)
06:36:04.660 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.format.DateTimeParserBucket
06:36:04.661 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
06:36:05.003 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
06:36:07.039 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
06:36:07.050 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
06:36:07.057 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
06:36:07.065 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
06:36:08.399 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 5.979166666666667
06:36:08.414 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 7 fitness evolutions and 1 second: 5.142857142857142
06:36:08.935 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 5.142857142857142
06:36:08.935 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 5.142857142857142. PT: 1 seconds
06:36:08.936 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
06:36:09.696 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.142857142857142 | 100
06:36:10.087 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.142857142857142 | 150
06:36:10.206 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 174 fitness evolutions and 3 second: 4.875
06:36:10.489 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.875 | 200
06:36:10.490 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.875. PT: 3 seconds
06:36:10.728 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 254 fitness evolutions and 3 second: 0.0
06:36:10.880 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 250
06:36:10.880 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
06:36:10.880 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
06:36:10.881 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
06:36:10.881 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: long long0 = (-1L);
Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
doReturn((DateTimeZone) null).when(chronology0).getZone();
doReturn((Chronology) null).when(chronology0).withUTC();
Locale locale0 = null;
long long1 = (-667L);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(long1, chronology0, locale0);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeField dateTimeField0 = buddhistChronology0.dayOfWeek();
String string0 = "Cannot have two adjacent separators";
buddhistChronology0.equals(string0);
int int0 = 391;
dateTimeParserBucket0.saveField(dateTimeField0, int0);
boolean boolean0 = false;
int int1 = 0;
dateTimeParserBucket0.saveState();
CopticChronology copticChronology0 = CopticChronology.getInstance();
long long2 = 0L;
copticChronology0.add(long2, (long) int1, int1);
LenientChronology lenientChronology0 = LenientChronology.getInstance(copticChronology0);
int int2 = 1210;
DateTimeZone dateTimeZone0 = null;
Integer integer0 = new Integer(int1);
String string1 = "@g}ZA1";
int int3 = 0;
Integer integer1 = new Integer(int3);
Integer.toUnsignedString(int1);
dateTimeParserBucket0.setPivotYear(integer0);
long long3 = 0L;
dateTimeParserBucket0.getOffsetInteger();
dateTimeParserBucket0.computeMillis(boolean0);
DateTimeZone dateTimeZone1 = DateTimeZone.forID(string1);
String string2 = "vHk:iS#wJJ";
lenientChronology0.toString();
Integer integer2 = new Integer(int1);
DateTimeZone.forID(string0);
long long4 = 1289L;
dateTimeParserBucket0.setPivotYear(integer1);
dateTimeParserBucket0.setZone(dateTimeZone1);
dateTimeParserBucket0.getZone();
boolean boolean1 = false;
dateTimeParserBucket0.computeMillis(boolean1);

06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 391 for dayOfWeek must be in the range [1,7]
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(ZonedChronology.java:463)
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(LimitChronology.java:510)
06:36:10.881 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:331)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
06:36:10.882 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
06:36:10.883 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
06:36:10.888 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
06:36:10.889 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
06:36:10.889 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
06:36:11.771 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DateTimeParserBucket_ESTest' to results/TIME-7b-5-5-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
06:36:11.788 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
