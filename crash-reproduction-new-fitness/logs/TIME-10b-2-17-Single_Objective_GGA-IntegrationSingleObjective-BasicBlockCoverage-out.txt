09:22:39.827 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
09:22:39.829 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField:78)
09:22:39.829 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.PreciseDurationDateTimeField
09:22:39.830 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:22:40.461 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.FieldUtils
09:22:40.462 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.PreciseDurationDateTimeField
09:22:40.478 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
09:22:42.987 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:22:43.167 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:22:43.177 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:22:43.185 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:22:43.713 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 2.5
09:22:44.908 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 2.5
09:22:44.908 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.5. PT: 1 seconds
09:22:44.908 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:22:45.152 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 57 fitness evolutions and 1 second: 1.5
09:22:45.637 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
09:22:45.737 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
09:22:45.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 100
09:22:45.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 2 seconds
09:22:46.126 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
09:22:46.319 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
09:22:46.388 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 150
09:22:46.889 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 200
09:22:46.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
09:22:46.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:22:46.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:22:46.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
long long0 = 185542587187200000L;
TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
int int0 = 326565;
long long1 = testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long0, int0);
int int1 = testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMaximumValue();
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getDurationField();
int int2 = 0;
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
DateTimeZone dateTimeZone0 = gJChronology0.getZone();
YearMonth yearMonth0 = new YearMonth(dateTimeZone0);
Locale locale0 = Locale.UK;
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getAsText((ReadablePartial) yearMonth0, int2, locale0);
long long2 = 0L;
int int3 = testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMaximumValue(long0);
int int4 = 633;
LocalDateTime localDateTime0 = new LocalDateTime(dateTimeZone0);
int int5 = 90;
LocalDateTime localDateTime1 = localDateTime0.plusMinutes(int5);
LocalDateTime localDateTime2 = localDateTime1.withMillisOfSecond(int4);
LocalDateTime localDateTime3 = localDateTime2.withYearOfEra(int5);
LocalDateTime localDateTime4 = localDateTime3.withDayOfWeek(int0);
LocalDateTime localDateTime5 = localDateTime4.plusWeeks(int0);
int int6 = Integer.MIN_VALUE;
int int7 = 10209375;
int int8 = 2146402336;
LocalDateTime localDateTime6 = localDateTime5.withDate(int6, int7, int8);
int int9 = 4572;
LocalDateTime localDateTime7 = localDateTime6.plusYears(int9);
int[] intArray0 = new int[3];
intArray0[0] = int3;
intArray0[1] = int1;
intArray0[2] = int1;
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMinimumValue((ReadablePartial) localDateTime7, intArray0);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getAsText(int4, locale0);
long long3 = 212L;
int int10 = 922;
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long1, int1);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.toString();
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.isLenient();

09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 326565 for secondOfMinute must be in the range [0,59]
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:22:46.891 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:22:46.892 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:22:46.892 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:22:46.892 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:22:46.892 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:22:46.893 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:22:46.897 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:22:46.898 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:22:46.898 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:22:47.759 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PreciseDurationDateTimeField_ESTest' to results/TIME-10b-2-17-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:22:47.771 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
