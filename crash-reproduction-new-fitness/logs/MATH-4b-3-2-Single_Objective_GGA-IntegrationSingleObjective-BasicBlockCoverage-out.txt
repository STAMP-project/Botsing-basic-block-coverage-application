03:38:49.465 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
03:38:49.469 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine:116)
03:38:49.469 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math3.geometry.euclidean.threed.SubLine
03:38:49.469 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
03:38:50.452 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.geometry.euclidean.threed.Line
03:38:50.454 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.geometry.euclidean.threed.Line
03:38:50.454 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.geometry.euclidean.threed.SubLine
03:38:50.476 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 4.
03:38:53.369 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
03:38:53.388 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
03:38:53.403 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
03:38:53.440 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
03:38:54.174 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 3.5
03:38:55.468 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 3 fitness evolutions and 2 second: 2.5
03:38:56.851 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 2.5
03:38:56.852 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.5. PT: 3 seconds
03:38:56.852 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
03:38:57.998 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 100
03:38:58.140 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 108 fitness evolutions and 4 second: 0.0
03:38:58.807 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 150
03:38:58.808 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 5 seconds
03:38:58.808 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
03:38:58.808 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
03:38:58.808 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 5 seconds
03:38:58.809 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Line line0 = mock(Line.class, new ViolatedAssumptionAnswer());
doReturn((Vector3D) null).when(line0).intersection(any(org.apache.commons.math3.geometry.euclidean.threed.Line.class));
doReturn((Vector1D) null).when(line0).toSubSpace(nullable(org.apache.commons.math3.geometry.Vector.class));
IntervalsSet intervalsSet0 = mock(IntervalsSet.class, new ViolatedAssumptionAnswer());
doReturn((Region.Location) null).when(intervalsSet0).checkPoint(nullable(org.apache.commons.math3.geometry.Vector.class));
SubLine subLine0 = new SubLine(line0, intervalsSet0);
Line line1 = mock(Line.class, new ViolatedAssumptionAnswer());
IntervalsSet intervalsSet1 = mock(IntervalsSet.class, new ViolatedAssumptionAnswer());
double double0 = (-4065.77769);
Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
Vector3D vector3D1 = new Vector3D(double0, vector3D0, double0, vector3D0);
Plane plane0 = new Plane(vector3D1);
Plane plane1 = new Plane(vector3D0, vector3D0);
Line line2 = plane0.intersection(plane1);
SubLine subLine1 = line2.wholeLine();
boolean boolean0 = true;
subLine0.intersection(subLine1, boolean0);
SubLine subLine2 = new SubLine(line1, intervalsSet1);
Segment segment0 = mock(Segment.class, new ViolatedAssumptionAnswer());
SubLine subLine3 = new SubLine(segment0);
Segment segment1 = mock(Segment.class, new ViolatedAssumptionAnswer());
SubLine subLine4 = new SubLine(segment1);
Line line3 = mock(Line.class, new ViolatedAssumptionAnswer());
IntervalsSet intervalsSet2 = mock(IntervalsSet.class, new ViolatedAssumptionAnswer());
SubLine subLine5 = new SubLine(line3, intervalsSet2);
Object.registerNatives();
Line line4 = mock(Line.class, new ViolatedAssumptionAnswer());
IntervalsSet intervalsSet3 = mock(IntervalsSet.class, new ViolatedAssumptionAnswer());
SubLine subLine6 = new SubLine(line4, intervalsSet3);
boolean boolean1 = false;
boolean boolean2 = true;
subLine5.intersection(subLine6, boolean2);
Segment segment2 = mock(Segment.class, new ViolatedAssumptionAnswer());
SubLine subLine7 = new SubLine(segment2);
Segment segment3 = mock(Segment.class, new ViolatedAssumptionAnswer());
SubLine subLine8 = new SubLine(segment3);
subLine3.getSegments();
subLine8.intersection(subLine5, boolean2);
Object.registerNatives();
Object.registerNatives();

03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:114)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:129)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:119)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
03:38:58.833 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
03:38:58.835 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
03:38:58.835 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
03:38:58.836 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
03:38:58.836 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
03:38:58.836 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
03:38:58.836 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
03:38:58.836 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
03:38:58.837 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
03:38:58.841 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
03:38:58.841 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
03:38:58.842 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
03:39:01.074 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'SubLine_ESTest' to results/MATH-4b-3-2-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
03:39:01.086 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
