06:49:06.584 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.apache.commons.math.MathRuntimeException$4
06:49:06.587 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl:94)
06:49:06.587 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.distribution.PoissonDistributionImpl
06:49:06.587 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
06:49:07.945 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.MathRuntimeException
06:49:07.945 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.distribution.PoissonDistributionImpl
06:49:07.960 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
06:49:10.111 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
06:49:10.131 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
06:49:10.141 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
06:49:10.149 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
06:49:10.343 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 2.4999999997671694
06:49:10.370 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 8 fitness evolutions and 0 second: 2.4995918367346937
06:49:10.429 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 20 fitness evolutions and 0 second: 2.333333333333333
06:49:10.784 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
06:49:10.784 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 0 seconds
06:49:10.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
06:49:10.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
06:49:10.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
06:49:10.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 0 seconds
06:49:10.788 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: double double0 = (-0.12502530217170715);
PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(double0);
double double1 = 0.0;
PoissonDistributionImpl poissonDistributionImpl1 = new PoissonDistributionImpl(double1);
int int0 = 219;
int int1 = 196;
poissonDistributionImpl0.cumulativeProbability(int0, int1);
PoissonDistributionImpl poissonDistributionImpl2 = new PoissonDistributionImpl(double0, (double) int1);
poissonDistributionImpl0.cumulativeProbability(int0);
int int2 = Integer.MAX_VALUE;
poissonDistributionImpl0.cumulativeProbability(int2, int2);
double double2 = 734.55740744;
int int3 = poissonDistributionImpl1.getDomainLowerBound(double2);
double double3 = 0.0;
double double4 = poissonDistributionImpl2.probability(double3);
PoissonDistributionImpl poissonDistributionImpl3 = new PoissonDistributionImpl(int0, double4, int1);
poissonDistributionImpl2.getMean();
poissonDistributionImpl3.cumulativeProbability(int1, int1);
poissonDistributionImpl2.reseedRandomGenerator(int0);
int int4 = poissonDistributionImpl2.getDomainUpperBound(int0);
int int5 = poissonDistributionImpl3.getDomainLowerBound(int4);
poissonDistributionImpl3.sample(int5);
int int6 = 0;
poissonDistributionImpl3.probability(int6);
double double5 = 0.15;
PoissonDistributionImpl poissonDistributionImpl4 = new PoissonDistributionImpl(double5, int5, int2);
poissonDistributionImpl4.cumulativeProbability((double) int6);
long long0 = (-2058L);
poissonDistributionImpl4.reseedRandomGenerator(long0);
double double6 = 0.14982303977012634;
poissonDistributionImpl1.inverseCumulativeProbability(double6);
poissonDistributionImpl1.cumulativeProbability((double) int3, (double) int1);
poissonDistributionImpl0.probability(int5);
double double7 = 1.375;
double double8 = (-1.0);
PoissonDistributionImpl poissonDistributionImpl5 = new PoissonDistributionImpl(double7, double8, int3);
double double9 = 1.0;
double double10 = 0.0;
poissonDistributionImpl4.cumulativeProbability(double9, double10);

06:49:10.788 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
06:49:10.788 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.MathRuntimeException$4: the Poisson mean must be positive (-0.125)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:387)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:94)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:80)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Constructor.newInstance(Constructor.java:423)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
06:49:10.789 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
06:49:10.790 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
06:49:10.790 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
06:49:10.790 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
06:49:10.790 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
06:49:10.790 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
06:49:10.791 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
06:49:10.797 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
06:49:10.798 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
06:49:10.798 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
06:49:11.804 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PoissonDistributionImpl_ESTest' to results/MATH-61b-2-19-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
06:49:11.824 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
