11:08:02.209 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
11:08:02.212 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket:366)
11:08:02.212 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.format.DateTimeParserBucket
11:08:02.212 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
11:08:03.382 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.FieldUtils
11:08:03.383 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.PreciseDurationDateTimeField
11:08:03.384 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.format.DateTimeParserBucket$SavedField
11:08:03.384 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.format.DateTimeParserBucket
11:08:03.434 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
11:08:06.841 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
11:08:06.855 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
11:08:06.864 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
11:08:06.872 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
11:08:07.506 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.8
11:08:08.074 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 14 fitness evolutions and 1 second: 4.6
11:08:08.359 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:08.374 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:08.538 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:08.615 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.6
11:08:08.615 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.6. PT: 1 seconds
11:08:08.615 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
11:08:08.938 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 77 fitness evolutions and 2 second: 4.466666666666667
11:08:09.682 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 100
11:08:09.683 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.466666666666667. PT: 2 seconds
11:08:09.961 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 114 fitness evolutions and 3 second: 4.454545454545455
11:08:10.229 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.454545454545455 | 150
11:08:10.230 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.454545454545455. PT: 3 seconds
11:08:10.741 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.454545454545455 | 200
11:08:11.341 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.454545454545455 | 250
11:08:11.812 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.454545454545455 | 300
11:08:12.104 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 338 fitness evolutions and 5 second: 4.4
11:08:12.326 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.4 | 350
11:08:12.326 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.4. PT: 5 seconds
11:08:12.396 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 382 fitness evolutions and 5 second: 4.333333333333333
11:08:12.582 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.333333333333333 | 400
11:08:12.582 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.333333333333333. PT: 5 seconds
11:08:13.105 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.333333333333333 | 450
11:08:13.587 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 500 fitness evolutions and 6 second: 2.48
11:08:13.764 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 500
11:08:13.766 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 6 seconds
11:08:13.770 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
11:08:13.770 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
11:08:13.770 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 6 seconds
11:08:13.770 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DurationField durationField0 = mock(DurationField.class, new ViolatedAssumptionAnswer());
doReturn(false, false).when(durationField0).isSupported();
DateTimeParserBucket.compareReverse(durationField0, durationField0);
int int0 = 12;
long long0 = 789L;
FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.UTC;
IslamicChronology islamicChronology0 = IslamicChronology.getInstance((DateTimeZone) fixedDateTimeZone0);
IslamicChronology islamicChronology1 = (IslamicChronology)islamicChronology0.withUTC();
StrictChronology strictChronology0 = StrictChronology.getInstance(islamicChronology1);
Locale locale0 = Locale.TAIWAN;
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(long0, strictChronology0, locale0);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeField dateTimeField0 = buddhistChronology0.dayOfYear();
int int1 = 744;
dateTimeParserBucket0.saveField(dateTimeField0, int1);
boolean boolean0 = false;
String string0 = "";
boolean boolean1 = false;
String string1 = "";
dateTimeParserBucket0.computeMillis(boolean1, string1);

11:08:13.770 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
11:08:13.770 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Cannot parse "": Value 744 for dayOfYear must be in the range [1,365]
11:08:13.770 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
11:08:13.770 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.GJChronology$CutoverField.set(GJChronology.java:719)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(LimitChronology.java:510)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
11:08:13.771 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
11:08:13.773 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
11:08:13.773 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
11:08:13.774 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
11:08:13.778 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
11:08:13.778 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
11:08:13.778 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
11:08:15.768 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DateTimeParserBucket_ESTest' to results/TIME-7b-4-29-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
11:08:15.786 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
