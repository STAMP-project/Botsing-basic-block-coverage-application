16:35:08.116 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
16:35:08.118 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField:78)
16:35:08.118 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.PreciseDurationDateTimeField
16:35:08.118 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
16:35:08.339 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
16:35:10.091 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
16:35:10.103 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
16:35:10.112 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
16:35:10.128 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
16:35:10.688 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
16:35:10.751 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 4 fitness evolutions and 0 second: 3.0
16:35:11.597 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 3.0
16:35:11.597 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 1 seconds
16:35:11.598 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
16:35:12.085 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 100
16:35:12.326 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 124 fitness evolutions and 2 second: 0.0
16:35:12.625 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 150
16:35:12.626 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
16:35:12.626 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
16:35:12.626 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
16:35:12.626 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
16:35:12.627 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
DurationField durationField0 = mock(DurationField.class, new ViolatedAssumptionAnswer());
TestPreciseDurationDateTimeField.MockPreciseDurationDateTimeField testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0 = new TestPreciseDurationDateTimeField.MockPreciseDurationDateTimeField();
TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getRangeDurationField();
long long0 = 0L;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getAsText(long0);
ReadablePartial readablePartial0 = mock(ReadablePartial.class, new ViolatedAssumptionAnswer());
int int0 = testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMaximumValue(readablePartial0);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getAsText((long) int0);
long long1 = testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getUnitMillis();
long long2 = 3599999L;
int int1 = testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getDifference(long2, long1);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getAsText(long0);
ReadablePartial readablePartial1 = mock(ReadablePartial.class, new ViolatedAssumptionAnswer());
int[] intArray0 = new int[1];
intArray0[0] = int0;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMaximumValue(readablePartial1, intArray0);
long long3 = 2128L;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getAsText(long3);
ReadablePartial readablePartial2 = mock(ReadablePartial.class, new ViolatedAssumptionAnswer());
int int2 = 188;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.set((long) int0, int2);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMinimumValue(readablePartial2, intArray0);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getType();
long long4 = 60000L;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getAsText(long4);
int int3 = 0;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.set((long) int1, int3);
int int4 = 2175;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.set(long2, int4);
long long5 = 3617L;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getAsShortText(long5);
ReadablePartial readablePartial3 = null;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMaximumValue(readablePartial3);

16:35:12.627 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
16:35:12.627 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 188 for secondOfMinute must be in the range [0,59]
16:35:12.627 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
16:35:12.627 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
16:35:12.628 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
16:35:12.629 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
16:35:12.678 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
16:35:12.678 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
16:35:12.678 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
16:35:13.410 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PreciseDurationDateTimeField_ESTest' to results/TIME-7b-2-11-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
16:35:13.420 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
