06:59:09.609 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.apache.commons.math.optimization.OptimizationException
06:59:09.612 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.optimization.direct.DirectSearchOptimizer.optimize(DirectSearchOptimizer:307)
06:59:09.612 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.optimization.direct.DirectSearchOptimizer
06:59:09.612 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
06:59:10.254 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.optimization.direct.DirectSearchOptimizer
06:59:10.255 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.optimization.direct.MultiDirectional
06:59:10.255 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.optimization.direct.DirectSearchOptimizer
06:59:10.282 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
06:59:11.515 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
06:59:11.523 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
06:59:11.530 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
06:59:11.536 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
06:59:11.848 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 3.9333333333333336
06:59:12.606 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 3.9333333333333336
06:59:12.606 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.9333333333333336. PT: 1 seconds
06:59:12.606 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
06:59:12.620 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 52 fitness evolutions and 1 second: 3.75
06:59:13.340 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 76 fitness evolutions and 1 second: 2.333333333333333
06:59:13.737 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.333333333333333 | 100
06:59:13.738 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.333333333333333. PT: 2 seconds
06:59:14.298 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.333333333333333 | 150
06:59:14.801 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.333333333333333 | 200
06:59:15.497 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 233 fitness evolutions and 3 second: 1.5
06:59:15.767 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 250
06:59:15.767 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 4 seconds
06:59:19.299 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 300
06:59:22.781 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 350
06:59:29.646 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 400
06:59:40.365 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 450
06:59:52.194 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 500
07:00:03.946 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 550
07:00:26.628 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 600
07:00:47.233 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 650
07:01:09.147 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 700
07:01:25.580 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 750
07:01:36.147 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 800
07:01:36.147 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 144 seconds
07:01:36.148 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
07:01:36.148 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
07:01:36.148 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 144 seconds
07:01:36.148 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: MultiDirectional multiDirectional0 = new MultiDirectional();
MultivariateRealFunction multivariateRealFunction0 = mock(MultivariateRealFunction.class, new ViolatedAssumptionAnswer());
doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(multivariateRealFunction0).value(any(double[].class));
GoalType goalType0 = GoalType.MINIMIZE;
double[] doubleArray0 = new double[2];
double double0 = (-1397.0);
doubleArray0[0] = double0;
int int0 = 566;
multiDirectional0.setMaxIterations(int0);
multiDirectional0.getEvaluations();
double double1 = 0.424;
RealPointValuePair realPointValuePair0 = multiDirectional0.optimize(multivariateRealFunction0, goalType0, doubleArray0);
MultivariateRealFunction multivariateRealFunction1 = mock(MultivariateRealFunction.class, new ViolatedAssumptionAnswer());
double[][] doubleArrayArray0 = null;
multiDirectional0.setStartConfiguration(doubleArrayArray0);
double[] doubleArray1 = new double[1];
double double2 = 0.424;
GoalType goalType1 = GoalType.MINIMIZE;
multiDirectional0.optimize(multivariateRealFunction1, goalType1, doubleArray1);
MultivariateRealFunction multivariateRealFunction2 = null;
Comparator<RealPointValuePair> comparator0 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
multiDirectional0.replaceWorstPoint(realPointValuePair0, comparator0);
multiDirectional0.optimize(multivariateRealFunction2, goalType1, doubleArray1);
multiDirectional0.optimize(multivariateRealFunction2, goalType0, doubleArray0);
NelderMead nelderMead0 = new NelderMead();
Comparator<RealPointValuePair> comparator1 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
nelderMead0.iterateSimplex(comparator1);
MultivariateRealFunction multivariateRealFunction3 = null;
double double3 = 0.5;
double double4 = 635.6832047799;
SimpleRealPointChecker simpleRealPointChecker0 = new SimpleRealPointChecker(double4, double2);
multiDirectional0.setConvergenceChecker(simpleRealPointChecker0);
Comparator<RealPointValuePair> comparator2 = (Comparator<RealPointValuePair>) mock(Comparator.class, new ViolatedAssumptionAnswer());
nelderMead0.evaluateSimplex(comparator2);
multiDirectional0.getConvergenceChecker();

07:01:36.148 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
07:01:36.148 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.optimization.OptimizationException: org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (566) exceeded
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.optimization.direct.DirectSearchOptimizer.incrementIterationsCounter(DirectSearchOptimizer.java:320)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.optimization.direct.MultiDirectional.iterateSimplex(MultiDirectional.java:66)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.optimization.direct.DirectSearchOptimizer.optimize(DirectSearchOptimizer.java:307)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
07:01:36.149 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
07:01:36.150 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
07:01:36.282 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
07:01:36.283 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
07:01:36.283 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
07:01:37.307 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DirectSearchOptimizer_ESTest' to results/MATH-84b-3-25-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
07:01:37.450 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
