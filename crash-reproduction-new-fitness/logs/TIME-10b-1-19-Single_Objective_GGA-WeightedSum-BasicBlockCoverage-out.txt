00:08:35.799 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
00:08:35.802 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils:220)
00:08:35.802 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.FieldUtils
00:08:35.802 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:08:36.117 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
00:08:38.246 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:08:38.266 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:08:38.277 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:08:38.285 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:08:38.802 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.7
00:08:38.828 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 9 fitness evolutions and 0 second: 0.0
00:08:39.444 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
00:08:39.445 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
00:08:39.445 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:08:39.445 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:08:39.445 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:08:39.445 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
00:08:39.446 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: int int0 = (-2990);
int int1 = 76;
int int2 = FieldUtils.getWrappedValue(int0, int1, int0, int1);
long long0 = (-1872L);
long long1 = FieldUtils.safeMultiply(long0, long0);
TestBaseDateTimeField.MockStandardBaseDateTimeField testBaseDateTimeField_MockStandardBaseDateTimeField0 = new TestBaseDateTimeField.MockStandardBaseDateTimeField();
StrictDateTimeField strictDateTimeField0 = new StrictDateTimeField(testBaseDateTimeField_MockStandardBaseDateTimeField0);
int int3 = 1756;
FieldUtils.verifyValueBounds((DateTimeField) strictDateTimeField0, int2, int1, int3);
DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.minuteOfHour();
int int4 = (-224);
int int5 = 2209;
FieldUtils.verifyValueBounds(dateTimeFieldType0, int4, int1, int5);
int int6 = FieldUtils.safeToInt(long1);
int int7 = Integer.MIN_VALUE;
int int8 = 0;
int int9 = FieldUtils.getWrappedValue(int7, int4, int4, int8);
String string0 = null;
int int10 = 85;
FieldUtils.verifyValueBounds(string0, int1, int10, int6);
int int11 = 2211;
int int12 = (-3569);
FieldUtils.verifyValueBounds((DateTimeField) testBaseDateTimeField_MockStandardBaseDateTimeField0, int11, int6, int12);
int int13 = 1181;
FieldUtils.verifyValueBounds((DateTimeField) testBaseDateTimeField_MockStandardBaseDateTimeField0, int13, int9, int2);
int int14 = 31;
int int15 = Integer.MIN_VALUE;
int int16 = 1975;
FieldUtils.getWrappedValue(int14, int15, int16);

00:08:39.446 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:08:39.446 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value -2914 for secondOfMinute must be in the range [76,1756]
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:08:39.447 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:08:39.448 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:08:39.452 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:08:39.452 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:08:39.452 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:08:40.164 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'FieldUtils_ESTest' to results/TIME-10b-1-19-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:08:40.175 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
