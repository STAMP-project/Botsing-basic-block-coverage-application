22:17:22.442 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
22:17:22.445 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField:78)
22:17:22.445 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.PreciseDurationDateTimeField
22:17:22.445 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
22:17:22.675 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
22:17:25.130 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
22:17:25.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
22:17:25.148 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
22:17:25.156 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
22:17:25.971 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
22:17:26.672 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.5
22:17:26.672 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.5. PT: 1 seconds
22:17:26.672 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
22:17:27.540 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.5 | 100
22:17:27.551 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 103 fitness evolutions and 2 second: 3.0
22:17:28.281 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 150
22:17:28.282 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 3 seconds
22:17:28.544 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 180 fitness evolutions and 3 second: 0.0
22:17:28.830 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 200
22:17:28.830 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
22:17:28.830 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
22:17:28.830 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
22:17:28.830 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
22:17:28.831 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
doReturn((DurationFieldType) null).when(dateTimeFieldType0).getDurationType();
DurationField durationField0 = mock(DurationField.class, new ViolatedAssumptionAnswer());
int int0 = (-837);
int[] intArray0 = new int[24];
intArray0[0] = int0;
long long0 = (-12219033600000L);
intArray0[5] = int0;
int int1 = (-1180);
int int2 = (-2717);
int int3 = 3031;
int int4 = (-654);
long long1 = 462L;
Integer integer0 = new Integer(intArray0[5]);
TestPreciseDateTimeField.MockPreciseDateTimeField testPreciseDateTimeField_MockPreciseDateTimeField0 = new TestPreciseDateTimeField.MockPreciseDateTimeField();
int int5 = 704;
Chronology chronology0 = null;
LocalTime localTime0 = new LocalTime(long1, chronology0);
Period period0 = Period.days(intArray0[1]);
long long2 = (-40L);
testPreciseDateTimeField_MockPreciseDateTimeField0.getAsText(long2);
localTime0.isSupported(dateTimeFieldType0);
testPreciseDateTimeField_MockPreciseDateTimeField0.getRangeDurationField();
Hours hours0 = Hours.standardHoursIn(period0);
localTime0.plus(hours0);
long long3 = 1501L;
testPreciseDateTimeField_MockPreciseDateTimeField0.getDifference(int1, long3);
Integer integer1 = new Integer(int0);
testPreciseDateTimeField_MockPreciseDateTimeField0.addWrapField((long) int1, int5);
testPreciseDateTimeField_MockPreciseDateTimeField0.addWrapField((long) integer0, intArray0[5]);
testPreciseDateTimeField_MockPreciseDateTimeField0.roundCeiling(int0);
TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getRangeDurationField();
long long4 = 0L;
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long4, int3);

22:17:28.831 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
22:17:28.831 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 3031 for secondOfMinute must be in the range [0,59]
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
22:17:28.832 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
22:17:28.833 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
22:17:28.841 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
22:17:28.841 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
22:17:28.841 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
22:17:30.159 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PreciseDurationDateTimeField_ESTest' to results/TIME-10b-2-3-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
22:17:30.169 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
