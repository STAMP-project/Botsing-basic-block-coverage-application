22:44:23.984 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ClassCastException
22:44:23.989 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.xwiki.extension.job.internal.UpgradePlanJob.tryInstallExtension(UpgradePlanJob:152)
22:44:23.989 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.xwiki.extension.job.internal.UpgradePlanJob
22:44:23.989 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
22:44:25.342 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 577.
22:44:40.863 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
22:44:40.873 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
22:44:40.880 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
22:44:40.887 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
22:44:43.288 [main] ERROR e.s.b.f.t.f.StackTraceChromosomeFactory - Guided initialization failed. Please revise the target class and method!
22:44:43.291 [main] WARN  e.s.b.g.s.GuidedSingleObjectiveGA - Botsing was unsuccessful in generating the initial population. cause: Guided initialization failed. Please revise the target class and method!
22:44:43.305 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 2 second: 4.5
22:44:44.496 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 4 fitness evolutions and 3 second: 3.0
22:44:44.563 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 3.0
22:44:44.563 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 3 seconds
22:44:44.564 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
22:44:47.271 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 100
22:44:48.947 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 150
22:44:50.009 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 200
22:44:50.777 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 250
22:44:51.404 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 300
22:44:53.022 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 350
22:45:03.835 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 400
22:45:04.873 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 450
22:45:05.754 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 500
22:45:08.197 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 550
22:45:09.292 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 600
22:45:10.335 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 650
22:45:10.527 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 641 fitness evolutions and 29 second: 0.0
22:45:10.965 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 700
22:45:10.965 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 30 seconds
22:45:10.966 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
22:45:10.966 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
22:45:10.966 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 30 seconds
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: ExtensionPlanAction extensionPlanAction0 = mock(ExtensionPlanAction.class, new ViolatedAssumptionAnswer());
String string0 = "Fa/led to resolve local verQions for extension id [{}]";
UpgradePlanJob upgradePlanJob0 = new UpgradePlanJob();
CoreExtensionRepository coreExtensionRepository0 = mock(CoreExtensionRepository.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractInstallPlanJob.class, "coreExtensionRepository", (Object) coreExtensionRepository0);
NamespaceValidator namespaceValidator0 = mock(NamespaceValidator.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractInstallPlanJob.class, "namespaceResolver", (Object) namespaceValidator0);
ExtensionRepositoryManager extensionRepositoryManager0 = mock(ExtensionRepositoryManager.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractInstallPlanJob.class, "repositoryManager", (Object) extensionRepositoryManager0);
ExtensionHandlerManager extensionHandlerManager0 = mock(ExtensionHandlerManager.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractExtensionJob.class, "extensionHandlerManager", (Object) extensionHandlerManager0);
InstalledExtensionRepository installedExtensionRepository0 = mock(InstalledExtensionRepository.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractExtensionJob.class, "installedExtensionRepository", (Object) installedExtensionRepository0);
LocalExtensionRepository localExtensionRepository0 = mock(LocalExtensionRepository.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractExtensionJob.class, "localExtensionRepository", (Object) localExtensionRepository0);
ComponentManager componentManager0 = mock(ComponentManager.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "componentManager", (Object) componentManager0);
Provider<Integer> provider0 = (Provider<Integer>) mock(Provider.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "executionContextManagerProvider", (Object) provider0);
Provider<XYDatasetTableModel> provider1 = (Provider<XYDatasetTableModel>) mock(Provider.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "executionProvider", (Object) provider1);
JobContext jobContext0 = mock(JobContext.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "jobContext", (Object) jobContext0);
Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "logger", (Object) logger0);
LoggerManager loggerManager0 = mock(LoggerManager.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "loggerManager", (Object) loggerManager0);
ObservationManager observationManager0 = mock(ObservationManager.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "observationManager", (Object) observationManager0);
JobProgressManager jobProgressManager0 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "progressManager", (Object) jobProgressManager0);
JobStatusStore jobStatusStore0 = mock(JobStatusStore.class, new ViolatedAssumptionAnswer());
Injector.inject(upgradePlanJob0, (Class<?>) AbstractJob.class, "store", (Object) jobStatusStore0);
Injector.validateBean(upgradePlanJob0, (Class<?>) UpgradePlanJob.class);
AbstractInstallPlanJob.ModifableExtensionPlanTree abstractInstallPlanJob_ModifableExtensionPlanTree0 = new AbstractInstallPlanJob.ModifableExtensionPlanTree();
ExtensionPlanNode extensionPlanNode0 = mock(ExtensionPlanNode.class, new ViolatedAssumptionAnswer());
abstractInstallPlanJob_ModifableExtensionPlanTree0.add(extensionPlanNode0);
upgradePlanJob0.extensionTree = abstractInstallPlanJob_ModifableExtensionPlanTree0;
ExtensionId extensionId0 = mock(ExtensionId.class, new ViolatedAssumptionAnswer());
String string1 = "$ples";
upgradePlanJob0.tryInstallExtension(extensionId0, string1);

22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ClassCastException: org.xwiki.extension.job.plan.ExtensionPlanNode$MockitoMock$1445876885 cannot be cast to org.xwiki.extension.job.internal.AbstractInstallPlanJob$ModifableExtensionPlanNode
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.xwiki.extension.job.internal.AbstractInstallPlanJob$ModifableExtensionPlanTree.clone(AbstractInstallPlanJob.java:84)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.xwiki.extension.job.internal.UpgradePlanJob.tryInstallExtension(UpgradePlanJob.java:152)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
22:45:10.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
22:45:10.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
22:45:10.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
22:45:10.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
22:45:10.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
22:45:10.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
22:45:10.969 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
22:45:10.976 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
22:45:10.976 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
22:45:10.976 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
22:45:13.434 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'UpgradePlanJob_ESTest' to results/XCOMMONS-1057-2-10-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
22:45:13.455 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
