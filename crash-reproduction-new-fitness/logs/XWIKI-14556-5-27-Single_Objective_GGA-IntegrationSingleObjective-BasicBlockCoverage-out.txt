09:09:33.871 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.hibernate.QueryParameterException
09:09:33.874 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor.setNamedParameter(HqlQueryExecutor:417)
09:09:33.874 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor
09:09:33.874 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:09:35.812 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.hibernate.engine.query.ParameterMetadata
09:09:35.813 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.hibernate.engine.query.ParameterMetadata
09:09:35.813 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.hibernate.impl.AbstractQueryImpl
09:09:35.813 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.hibernate.impl.AbstractQueryImpl
09:09:35.813 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor
09:09:35.826 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 553.
09:09:57.260 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:09:57.270 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:09:57.277 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:09:57.284 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:09:58.164 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.666666666666666
09:10:00.583 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 12 fitness evolutions and 3 second: 4.666666666666666
09:10:01.217 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.666666666666666
09:10:01.218 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.666666666666666. PT: 3 seconds
09:10:01.218 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:10:03.747 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 100
09:10:09.255 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 150
09:10:15.467 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 200
09:10:21.048 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 250
09:10:26.946 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 300
09:10:29.426 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 350
09:10:31.903 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 400
09:10:38.650 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 450
09:10:47.268 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 500
09:10:50.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 550
09:10:56.065 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 600
09:11:05.820 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 650
09:11:10.552 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 700
09:11:13.752 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 750
09:11:17.207 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 800
09:11:19.005 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 850
09:11:22.425 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 900
09:11:28.888 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 950
09:11:32.166 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.666666666666666 | 1000
09:11:32.829 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1028 fitness evolutions and 95 second: 2.6666666666666665
09:11:36.682 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1050
09:11:36.683 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.6666666666666665. PT: 99 seconds
09:11:40.281 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1100
09:11:42.426 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1150
09:11:46.784 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1200
09:11:49.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1250
09:11:57.873 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1300
09:12:03.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1350
09:12:08.408 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1400
09:12:09.833 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1450
09:12:13.367 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1500
09:12:15.725 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.6666666666666665 | 1550
09:12:17.327 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 1600
09:12:17.328 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 140 seconds
09:12:17.329 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:12:17.330 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:12:17.330 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 140 seconds
09:12:17.330 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
HibernateSessionFactory hibernateSessionFactory0 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
Query query0 = mock(Query.class, new ViolatedAssumptionAnswer());
String string0 = "orer by loll=se0-hefr]yv";
String string1 = "where 'zx`<je7pj\"4_5a%&%";
org.xwiki.query.Query query1 = mock(org.xwiki.query.Query.class, new ViolatedAssumptionAnswer());
HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager0);
Provider<DocumentComponentManager> provider0 = (Provider<DocumentComponentManager>) mock(Provider.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider0);
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "execution", (Object) execution0);
JobProgressManager jobProgressManager0 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "progress", (Object) jobProgressManager0);
String string2 = ")Q*Y@^}YIRSKq-(";
FlushMode flushMode0 = FlushMode.MANUAL;
String string3 = null;
EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
ComponentManager componentManager0 = embeddableComponentManager0.getParent();
ScriptQuery scriptQuery0 = new ScriptQuery(query1, componentManager0);
SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = new OrdinalParameterDescriptor[0];
MockActionContext mockActionContext0 = new MockActionContext();
ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, mockActionContext0);
CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl(string3, scriptQuery0, sessionImplementor0, parameterMetadata0);
String string4 = "u,\\LhZ%Gx";
CollectionFilterImpl collectionFilterImpl1 = (CollectionFilterImpl)collectionFilterImpl0.setCacheRegion(string4);
HqlQueryExecutor hqlQueryExecutor1 = new HqlQueryExecutor();
ContextualAuthorizationManager contextualAuthorizationManager1 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor1, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager1);
Provider<NamedQueryDefinition> provider1 = (Provider<NamedQueryDefinition>) mock(Provider.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor1, (Class<?>) HqlQueryExecutor.class, "componentManagerProvider", (Object) provider1);
Execution execution1 = mock(Execution.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor1, (Class<?>) HqlQueryExecutor.class, "execution", (Object) execution1);
JobProgressManager jobProgressManager1 = mock(JobProgressManager.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor1, (Class<?>) HqlQueryExecutor.class, "progress", (Object) jobProgressManager1);
Injector.inject(hqlQueryExecutor1, (Class<?>) HqlQueryExecutor.class, "sessionFactory", (Object) hibernateSessionFactory0);
Injector.validateBean(hqlQueryExecutor1, (Class<?>) HqlQueryExecutor.class);
hqlQueryExecutor0.setNamedParameter(collectionFilterImpl1, string4, string4);

09:12:17.331 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:12:17.331 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.hibernate.QueryParameterException: could not locate named parameter [u,\LhZ%Gx]
09:12:17.331 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.hibernate.engine.query.ParameterMetadata.getNamedParameterDescriptor(ParameterMetadata.java:101)
09:12:17.331 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.hibernate.engine.query.ParameterMetadata.getNamedParameterExpectedType(ParameterMetadata.java:107)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.hibernate.impl.AbstractQueryImpl.determineType(AbstractQueryImpl.java:460)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.hibernate.impl.AbstractQueryImpl.setParameter(AbstractQueryImpl.java:430)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor.setNamedParameter(HqlQueryExecutor.java:417)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:12:17.332 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:12:17.333 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:12:17.339 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:12:17.339 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:12:17.339 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:12:19.656 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'HqlQueryExecutor_ESTest' to results/XWIKI-14556-5-27-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:12:19.686 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
