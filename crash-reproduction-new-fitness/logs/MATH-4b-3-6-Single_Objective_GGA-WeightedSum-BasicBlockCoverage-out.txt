20:19:15.057 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
20:19:15.068 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine:116)
20:19:15.068 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math3.geometry.euclidean.threed.SubLine
20:19:15.068 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
20:19:15.466 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 4.
20:19:17.643 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
20:19:17.653 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
20:19:17.662 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
20:19:17.670 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
20:19:18.112 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
20:19:19.099 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 5 fitness evolutions and 1 second: 3.0
20:19:19.255 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 8 fitness evolutions and 1 second: 0.6666666666666666
20:19:19.856 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.6666666666666666
20:19:19.856 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.6666666666666666. PT: 2 seconds
20:19:19.856 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
20:19:20.372 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 90 fitness evolutions and 2 second: 0.0
20:19:20.760 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 100
20:19:20.760 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
20:19:20.760 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
20:19:20.760 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
20:19:20.761 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Line line0 = mock(Line.class, new ViolatedAssumptionAnswer());
double double0 = 0.0;
Vector3D vector3D0 = Vector3D.NaN;
Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);
double double1 = (-0.25);
Vector3D vector3D2 = new Vector3D(double0, vector3D1, double1, vector3D1);
Line line1 = new Line(vector3D2, vector3D2);
Segment segment0 = new Segment(vector3D2, vector3D1, line1);
SubLine subLine0 = new SubLine(segment0);
SubLine subLine1 = new SubLine(vector3D2, vector3D0);
boolean boolean0 = false;
subLine0.intersection(subLine1, boolean0);
Line line2 = new Line(line0);
IntervalsSet intervalsSet0 = new IntervalsSet();
BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>();
IntervalsSet intervalsSet1 = intervalsSet0.buildNew(bSPTree0);
SubLine subLine2 = new SubLine(line2, intervalsSet1);
boolean boolean1 = true;
Vector3D vector3D3 = subLine2.intersection(subLine2, boolean1);
subLine2.getSegments();
IntervalsSet intervalsSet2 = SubLine.buildIntervalSet(vector3D3, vector3D3);
Vector3D vector3D4 = Vector3D.NEGATIVE_INFINITY;
SubLine subLine3 = new SubLine(vector3D3, vector3D4);
SubLine subLine4 = new SubLine(line2, intervalsSet1);
Object.registerNatives();
SubLine.buildIntervalSet(vector3D4, vector3D4);
SubLine subLine5 = new SubLine(line2, intervalsSet0);
subLine5.intersection(subLine2, boolean1);
SubLine subLine6 = new SubLine(line2, intervalsSet0);
SubLine.buildIntervalSet(vector3D4, vector3D3);
Vector3D vector3D5 = subLine4.intersection(subLine3, boolean1);
subLine3.getSegments();
Segment segment1 = mock(Segment.class, new ViolatedAssumptionAnswer());
SubLine subLine7 = new SubLine(segment1);
SubLine.buildIntervalSet(vector3D4, vector3D5);
Object.registerNatives();
SubLine subLine8 = new SubLine(line2, intervalsSet2);
Segment segment2 = new Segment(vector3D3, vector3D3, line2);
SubLine subLine9 = new SubLine(segment2);
subLine6.intersection(subLine9, boolean1);
subLine9.getSegments();

20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:114)
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:129)
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:116)
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
20:19:20.762 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
20:19:20.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
20:19:20.764 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
20:19:20.769 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
20:19:20.769 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
20:19:20.769 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
20:19:22.353 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'SubLine_ESTest' to results/MATH-4b-3-6-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
20:19:22.361 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
