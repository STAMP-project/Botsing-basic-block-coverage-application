00:10:58.050 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
00:10:58.060 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.chrono.BaseChronology.set(BaseChronology:240)
00:10:58.060 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.chrono.BaseChronology
00:10:58.060 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:10:58.422 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
00:11:00.597 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:11:00.607 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:11:00.628 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:11:00.635 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:11:01.363 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.666666666666666
00:11:01.378 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 4 fitness evolutions and 0 second: 3.0
00:11:01.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 3.0
00:11:01.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 1 seconds
00:11:01.890 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:11:02.550 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 100
00:11:03.535 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 150
00:11:04.139 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 200
00:11:04.572 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 250
00:11:04.606 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 259 fitness evolutions and 3 second: 0.42857142857142855
00:11:05.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 300
00:11:05.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.42857142857142855. PT: 4 seconds
00:11:05.517 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 350
00:11:05.976 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 400
00:11:06.416 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 450
00:11:06.958 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 500
00:11:07.522 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 550
00:11:08.081 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 600
00:11:08.435 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 650
00:11:09.076 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 700
00:11:09.584 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 750
00:11:10.058 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 800
00:11:10.599 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 850
00:11:11.225 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 900
00:11:11.902 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 950
00:11:12.493 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 1000
00:11:13.138 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.42857142857142855 | 1050
00:11:13.145 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1073 fitness evolutions and 12 second: 0.0
00:11:13.634 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 1100
00:11:13.635 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 13 seconds
00:11:13.636 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:11:13.636 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:11:13.636 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 13 seconds
00:11:13.636 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: CopticChronology copticChronology0 = CopticChronology.getInstance();
StrictChronology strictChronology0 = StrictChronology.getInstance(copticChronology0);
long long0 = (-472L);
Date date0 = new Date(long0);
LocalDate localDate0 = LocalDate.fromDateFields(date0);
long long1 = 3058L;
strictChronology0.set(localDate0, long1);
long long2 = 0L;
GJChronology gJChronology0 = GJChronology.getInstanceUTC();
gJChronology0.gregorianToJulianByWeekyear(long1);
int int0 = 22;
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(int0);
ZonedChronology zonedChronology0 = ZonedChronology.getInstance(strictChronology0, dateTimeZone0);
String string0 = "W3D";
zonedChronology0.equals(copticChronology0);
JulianChronology julianChronology0 = JulianChronology.getInstance();
int int1 = julianChronology0.getMaxYear();
int int2 = 51;
int int3 = 3;
int int4 = (-1675);
int int5 = (-711);
int int6 = (-1930);
int int7 = 858;
gJChronology0.getDateTimeMillis(int4, int3, int5, int6, int7, int1, int2);
DateTimeZone dateTimeZone1 = gJChronology0.getZone();
CopticChronology.getInstance(dateTimeZone1, int6);
IslamicChronology.getInstanceUTC();
long long3 = (-28L);
IslamicChronology.getInstanceUTC();
long long4 = 325L;
long long5 = BasicFixedMonthChronology.MILLIS_PER_YEAR;

00:11:13.636 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:11:13.636 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 31 for dayOfMonth must be in the range [1,30]
00:11:13.636 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
00:11:13.636 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
00:11:13.636 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(LimitChronology.java:510)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(ZonedChronology.java:463)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.BaseChronology.set(BaseChronology.java:240)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:11:13.637 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:11:13.639 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:11:13.646 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:11:13.646 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:11:13.646 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:11:14.495 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'BaseChronology_ESTest' to results/TIME-10b-3-25-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:11:14.504 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
