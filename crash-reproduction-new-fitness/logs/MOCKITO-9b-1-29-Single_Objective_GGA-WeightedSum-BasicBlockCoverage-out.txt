00:05:51.483 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.mockito.exceptions.base.MockitoException
00:05:51.486 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter:583)
00:05:51.487 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.mockito.exceptions.Reporter
00:05:51.487 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:05:52.758 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 4.
00:05:55.506 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:05:55.541 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:05:55.560 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:05:55.578 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:05:57.226 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 0.0
00:05:58.067 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
00:05:58.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
00:05:58.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:05:58.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:05:58.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:05:58.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Reporter reporter0 = new Reporter();
reporter0.cannotCallAbstractRealMethod();
String string0 = "";
String string1 = "<Fcj$ ;CS";
Exception exception0 = new Exception(string1);
reporter0.cannotInitializeForSpyAnnotation(string0, exception0);
String string2 = "    verifyZeroInteractions(mockOne, mockTwo);";
reporter0.cannotInitializeForSpyAnnotation(string2, exception0);
LinkedList<LocalizedMatcher> linkedList0 = new LinkedList<LocalizedMatcher>();
reporter0.misplacedArgumentMatcher(linkedList0);
String string3 = null;
Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
reporter0.smartNullPointerException(string3, location0);
Field field0 = null;
reporter0.fieldInitialisationThrewException(field0, exception0);
Location location1 = mock(Location.class, new ViolatedAssumptionAnswer());
reporter0.smartNullPointerException(string0, location1);
String string4 = "invoked: ";
BatchUpdateException batchUpdateException0 = new BatchUpdateException();
reporter0.cannotInitializeForInjectMocksAnnotation(string4, batchUpdateException0);
reporter0.stubPassedToVerify();
reporter0.cannotStubWithNullThrowable();
DescribedInvocation describedInvocation0 = mock(DescribedInvocation.class, new ViolatedAssumptionAnswer());
LinkedList<StubbedInvocationMatcher> linkedList1 = new LinkedList<StubbedInvocationMatcher>();
reporter0.wantedButNotInvoked(describedInvocation0, (List<? extends DescribedInvocation>) linkedList1);
reporter0.cannotVerifyToString();
DescribedInvocation describedInvocation1 = mock(DescribedInvocation.class, new ViolatedAssumptionAnswer());
reporter0.wantedButNotInvoked(describedInvocation1);
org.mockito.internal.reporting.Discrepancy discrepancy0 = mock(org.mockito.internal.reporting.Discrepancy.class, new ViolatedAssumptionAnswer());
DescribedInvocation describedInvocation2 = null;
Location location2 = mock(Location.class, new ViolatedAssumptionAnswer());
reporter0.tooLittleActualInvocations(discrepancy0, describedInvocation2, location2);
reporter0.onlyVoidMethodsCanBeSetToDoNothing();
reporter0.invalidArgumentRangeAtIdentityAnswerCreationTime();
Class<StubbedInvocationMatcher> class0 = StubbedInvocationMatcher.class;
reporter0.extraInterfacesAcceptsOnlyInterfaces(class0);

00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.mockito.exceptions.base.MockitoException: 
Cannot call abstract real method on java object!
Calling real methods is only possible when mocking non abstract method.
  //correct example:
  when(mockOfConcreteClass.nonAbstractMethod()).thenCallRealMethod();
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:05:58.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:05:58.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:05:58.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:05:58.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:05:58.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:05:58.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:05:58.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:05:58.075 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:05:58.081 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:05:58.082 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:05:58.082 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:05:59.160 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Reporter_ESTest' to results/MOCKITO-9b-1-29-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:05:59.177 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
