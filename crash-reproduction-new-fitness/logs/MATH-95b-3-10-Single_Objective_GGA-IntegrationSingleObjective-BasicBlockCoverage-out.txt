07:14:46.966 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.IllegalArgumentException
07:14:46.969 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution:84)
07:14:46.969 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.distribution.AbstractContinuousDistribution
07:14:46.969 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
07:14:48.279 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.analysis.UnivariateRealSolverUtils
07:14:48.282 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.analysis.UnivariateRealSolverUtils
07:14:48.282 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.distribution.AbstractContinuousDistribution
07:14:48.594 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
07:14:52.043 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
07:14:52.052 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
07:14:52.060 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
07:14:52.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
07:14:52.569 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 3.6666666666666665
07:14:53.790 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 3.6666666666666665
07:14:53.790 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.6666666666666665. PT: 1 seconds
07:14:53.790 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
07:14:53.999 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
07:14:54.002 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
07:14:54.700 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.6666666666666665 | 100
07:14:54.891 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
07:14:54.892 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
07:14:55.037 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.6666666666666665 | 150
07:14:55.103 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 167 fitness evolutions and 3 second: 1.5
07:14:55.392 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 200
07:14:55.393 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 3 seconds
07:14:55.719 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 250
07:14:56.046 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 300
07:14:56.404 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 350
07:14:56.539 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 384 fitness evolutions and 4 second: 1.3333333333333333
07:14:56.980 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 400
07:14:56.980 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.3333333333333333. PT: 4 seconds
07:14:57.356 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 450
07:14:57.743 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 500
07:14:58.096 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 550
07:14:58.464 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 600
07:14:58.834 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 650
07:14:59.143 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 700
07:14:59.300 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 750
07:14:59.461 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 800
07:14:59.642 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 850
07:14:59.896 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 900
07:15:00.299 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 950
07:15:00.567 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1000
07:15:01.444 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1050
07:15:01.897 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1100
07:15:02.135 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1150
07:15:02.383 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1200
07:15:02.609 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1250
07:15:03.007 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1300
07:15:03.488 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1350
07:15:03.975 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1400
07:15:04.353 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1450
07:15:04.596 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1500
07:15:04.963 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1550
07:15:05.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1600
07:15:05.611 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1650
07:15:06.095 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1700
07:15:06.447 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1750
07:15:06.875 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1800
07:15:07.462 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1850
07:15:07.960 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1900
07:15:08.486 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 1950
07:15:09.106 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2000
07:15:09.510 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2050
07:15:09.857 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2100
07:15:10.088 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2150
07:15:10.348 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2200
07:15:10.608 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2250
07:15:10.804 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2300
07:15:11.052 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2350
07:15:11.364 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 2400
07:15:11.897 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 2450
07:15:11.897 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 19 seconds
07:15:11.898 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
07:15:11.898 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
07:15:11.898 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 19 seconds
07:15:11.898 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: NormalDistributionImpl normalDistributionImpl0 = new NormalDistributionImpl();
double double0 = (-0.43634907);
double double1 = 0.6518576330676485;
double double2 = 0.5;
normalDistributionImpl0.inverseCumulativeProbability(double1);
double double3 = 116.89214278807623;
double double4 = (-147.736341643);
double double5 = 992.81622379806;
double double6 = (-1361.652);
double double7 = 2.326181446352429E-5;
double double8 = 1.0;
double double9 = normalDistributionImpl0.cumulativeProbability(double7, double8);
double double10 = 1.0E-8;
normalDistributionImpl0.setStandardDeviation(double8);
double double11 = 91.0;
FDistributionImpl fDistributionImpl0 = new FDistributionImpl(double10, double8);
double double12 = 1992.8534;
double double13 = (-0.4919138160976202);
fDistributionImpl0.inverseCumulativeProbability(double9);
fDistributionImpl0.cumulativeProbability(double13);
double double14 = (-600.92148);
fDistributionImpl0.inverseCumulativeProbability(double14);

07:15:11.898 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
07:15:11.898 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.IllegalArgumentException: Invalid endpoint parameters:  lowerBound=0.0 initial=-1.0 upperBound=1.7976931348623157E308
07:15:11.898 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:179)
07:15:11.898 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:128)
07:15:11.898 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:84)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(FDistributionImpl.java:106)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
07:15:11.899 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
07:15:11.900 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
07:15:11.907 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
07:15:11.907 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
07:15:11.907 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
07:15:13.522 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractContinuousDistribution_ESTest' to results/MATH-95b-3-10-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
07:15:13.546 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
