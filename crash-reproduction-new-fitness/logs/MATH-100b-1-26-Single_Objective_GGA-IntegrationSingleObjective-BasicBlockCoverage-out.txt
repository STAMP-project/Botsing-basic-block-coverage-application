09:46:25.316 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ArrayIndexOutOfBoundsException
09:46:25.319 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator:173)
09:46:25.319 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.estimation.AbstractEstimator
09:46:25.319 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:46:25.818 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.estimation.AbstractEstimator
09:46:25.834 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
09:46:26.757 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:46:26.766 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:46:26.775 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:46:26.783 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:46:26.965 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 1.75
09:46:27.415 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.75
09:46:27.415 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.75. PT: 0 seconds
09:46:27.416 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:46:28.274 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 100
09:46:28.472 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 138 fitness evolutions and 1 second: 1.7142857142857144
09:46:28.699 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 150
09:46:28.700 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.7142857142857144. PT: 1 seconds
09:46:28.930 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 200
09:46:29.136 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 250
09:46:29.402 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 300
09:46:29.575 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 350
09:46:29.670 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 377 fitness evolutions and 2 second: 1.3333333333333333
09:46:29.749 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 400
09:46:29.750 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.3333333333333333. PT: 2 seconds
09:46:29.902 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 450
09:46:30.035 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 500
09:46:30.227 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 550
09:46:30.406 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 600
09:46:30.640 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 650
09:46:30.898 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 700
09:46:31.130 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 750
09:46:31.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 800
09:46:31.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 4 seconds
09:46:31.369 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:46:31.369 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:46:31.369 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 4 seconds
09:46:31.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
String string0 = "]]\\";
LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest(string0);
LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
double double0 = levenbergMarquardtEstimator0.getChiSquare(levenbergMarquardtEstimatorTest_QuadraticProblem0);
double double1 = Double.POSITIVE_INFINITY;
levenbergMarquardtEstimatorTest_QuadraticProblem0.addPoint(double1, double1, double0);
SimpleEstimationProblem simpleEstimationProblem1 = new SimpleEstimationProblem();
simpleEstimationProblem1.getAllParameters();
levenbergMarquardtEstimator0.estimate(simpleEstimationProblem1);
double double2 = 0.0;
levenbergMarquardtEstimator0.setCostRelativeTolerance(double2);
levenbergMarquardtEstimator0.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
int int0 = (-1838);
double double3 = (-1666.5711);
GaussNewtonEstimator gaussNewtonEstimator0 = new GaussNewtonEstimator(int0, double3, double2);
levenbergMarquardtEstimator0.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
int int1 = (-1838);
double double4 = (-1666.5711);
double double5 = (-2190.0923509430136);
double double6 = (-1393.58683343);
GaussNewtonEstimator gaussNewtonEstimator1 = new GaussNewtonEstimator(int1, double5, double6);
EstimationProblem estimationProblem0 = null;
gaussNewtonEstimator1.initializeEstimate(simpleEstimationProblem0);
gaussNewtonEstimator1.getCovariances(simpleEstimationProblem1);
LevenbergMarquardtEstimator levenbergMarquardtEstimator1 = new LevenbergMarquardtEstimator();
double double7 = 0.0627;
LevenbergMarquardtEstimator levenbergMarquardtEstimator2 = new LevenbergMarquardtEstimator();
levenbergMarquardtEstimator2.setParRelativeTolerance(double5);
LevenbergMarquardtEstimator levenbergMarquardtEstimator3 = new LevenbergMarquardtEstimator();
levenbergMarquardtEstimator3.getRMS(estimationProblem0);
levenbergMarquardtEstimator0.guessParametersErrors(estimationProblem0);
double double8 = (-2253.40825179);
levenbergMarquardtEstimator0.setParRelativeTolerance(double8);

09:46:31.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ArrayIndexOutOfBoundsException: 0
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:46:31.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:46:31.371 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:46:31.374 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:46:31.374 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:46:31.374 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:46:32.156 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractEstimator_ESTest' to results/MATH-100b-1-26-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:46:32.169 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
