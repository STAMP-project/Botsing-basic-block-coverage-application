09:46:29.045 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ArrayIndexOutOfBoundsException
09:46:29.048 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator:173)
09:46:29.048 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.estimation.AbstractEstimator
09:46:29.048 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:46:29.578 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.estimation.AbstractEstimator
09:46:29.597 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
09:46:30.501 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:46:30.511 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:46:30.522 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:46:30.537 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:46:30.704 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 1.75
09:46:31.209 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.75
09:46:31.209 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.75. PT: 0 seconds
09:46:31.209 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:46:32.023 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 100
09:46:32.604 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 150
09:46:33.046 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 200
09:46:33.447 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 250
09:46:33.765 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 300
09:46:34.103 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 350
09:46:34.340 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 400
09:46:34.478 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 455 fitness evolutions and 3 second: 1.7142857142857144
09:46:34.544 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 450
09:46:34.545 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.7142857142857144. PT: 4 seconds
09:46:34.795 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 500
09:46:34.952 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 550
09:46:35.053 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 607 fitness evolutions and 4 second: 1.0
09:46:35.146 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 600
09:46:35.146 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.0. PT: 4 seconds
09:46:35.356 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 650
09:46:35.528 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 700
09:46:35.734 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 750
09:46:35.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 800
09:46:35.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 5 seconds
09:46:35.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:46:35.940 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:46:35.940 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 5 seconds
09:46:35.942 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
WeightedMeasurement weightedMeasurement0 = mock(WeightedMeasurement.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(weightedMeasurement0).getResidual();
doReturn(0.0, 0.0).when(weightedMeasurement0).getWeight();
simpleEstimationProblem0.addMeasurement(weightedMeasurement0);
simpleEstimationProblem0.getMeasurements();
LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
int int0 = 1643;
levenbergMarquardtEstimator0.setMaxCostEval(int0);
levenbergMarquardtEstimator0.getCostEvaluations();
String string0 = "unable to compute covariances: singular problem";
double double0 = 0.0;
boolean boolean0 = false;
boolean boolean1 = true;
EstimatedParameter estimatedParameter0 = new EstimatedParameter(string0, int0, boolean1);
double double1 = 0.0;
estimatedParameter0.estimate = double1;
simpleEstimationProblem0.addParameter(estimatedParameter0);
levenbergMarquardtEstimator0.updateResidualsAndCost();
levenbergMarquardtEstimator0.getChiSquare(simpleEstimationProblem0);
levenbergMarquardtEstimator0.initializeEstimate(simpleEstimationProblem0);
levenbergMarquardtEstimator0.getCovariances(simpleEstimationProblem0);
int int1 = 2;
GaussNewtonEstimator gaussNewtonEstimator0 = new GaussNewtonEstimator(int1, int1, double0);
gaussNewtonEstimator0.estimate(simpleEstimationProblem0);
String string1 = "no degrees of freedom ({0} measurements, {1} parameters)";
String string2 = "o1A@zNATVS.3J";
LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest(string2);
LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
LevenbergMarquardtEstimator levenbergMarquardtEstimator1 = new LevenbergMarquardtEstimator();
levenbergMarquardtEstimator1.guessParametersErrors(simpleEstimationProblem0);
levenbergMarquardtEstimator1.estimate(simpleEstimationProblem0);
double double2 = 1.0;
double double3 = 0.0;
levenbergMarquardtEstimator1.setInitialStepBoundFactor(double3);
double double4 = 13720.0;
levenbergMarquardtEstimator1.setOrthoTolerance(double4);
levenbergMarquardtEstimator0.setOrthoTolerance(int1);

09:46:35.942 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ArrayIndexOutOfBoundsException: 0
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:46:35.943 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:46:35.944 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:46:35.945 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:46:35.950 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:46:35.950 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:46:35.950 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:46:36.943 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractEstimator_ESTest' to results/MATH-100b-1-30-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:46:36.963 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
