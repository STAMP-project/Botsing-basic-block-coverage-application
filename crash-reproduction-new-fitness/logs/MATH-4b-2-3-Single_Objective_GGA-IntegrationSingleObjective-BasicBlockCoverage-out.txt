03:38:50.300 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
03:38:50.303 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line:129)
03:38:50.303 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math3.geometry.euclidean.threed.Line
03:38:50.303 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
03:38:51.205 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.geometry.euclidean.threed.Line
03:38:51.206 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.geometry.euclidean.threed.Line
03:38:51.213 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 4.
03:38:54.151 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
03:38:54.166 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
03:38:54.186 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
03:38:54.195 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
03:38:55.085 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 2.5
03:38:57.736 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 2.5
03:38:57.736 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.5. PT: 3 seconds
03:38:57.736 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
03:38:58.934 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 100
03:38:59.433 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 146 fitness evolutions and 5 second: 1.0
03:38:59.750 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 150
03:38:59.750 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.0. PT: 5 seconds
03:39:00.779 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 200
03:39:01.299 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 250
03:39:01.862 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 300
03:39:02.301 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 350
03:39:02.672 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 400
03:39:03.133 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 450
03:39:03.134 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 8 seconds
03:39:03.134 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
03:39:03.134 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
03:39:03.134 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 8 seconds
03:39:03.135 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Vector<Euclidean1D> vector0 = (Vector<Euclidean1D>) mock(Vector.class, new ViolatedAssumptionAnswer());
Vector<Euclidean1D> vector1 = (Vector<Euclidean1D>) mock(Vector.class, new ViolatedAssumptionAnswer());
Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;
double double0 = 1514.480409;
Line line0 = new Line(vector3D0, vector3D0);
Line line1 = new Line(line0);
double double1 = line1.distance(vector3D0);
line0.distance(vector3D0);
line1.toSubSpace(vector3D0);
line0.distance(vector3D0);
Line line2 = new Line(vector3D0, vector3D0);
line1.wholeLine();
double double2 = (-3310.144268696);
double double3 = 2223.0826108169;
Vector3D vector3D1 = new Vector3D(double3, double2, double1);
line1.wholeLine();
Vector3D vector3D2 = line0.intersection(line1);
line0.closestPoint(line2);
line2.toSubSpace(vector3D0);
line1.distance(vector3D1);
line2.toSubSpace(vector3D2);
Line line3 = new Line(vector3D2, vector3D1);
line3.wholeLine();
double double4 = (-3310.144268696);
double double5 = 324.0;
double double6 = (-1039.3550404581893);
double double7 = 870.3237595160509;
Vector3D vector3D3 = new Vector3D(double7, double1, double3);
Vector3D vector3D4 = vector3D3.add((Vector<Euclidean3D>) vector3D1);
Line line4 = new Line(vector3D4, vector3D3);
line3.wholeLine();
line4.intersection(line1);
line1.closestPoint(line3);
line0.toSubSpace(vector3D1);
double double8 = (-836.0);
double double9 = 0.0;
Vector1D vector1D0 = new Vector1D(double1);
line3.toSpace(vector1);

03:39:03.135 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
03:39:03.135 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
03:39:03.135 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:114)
03:39:03.135 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:129)
03:39:03.136 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
03:39:03.136 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
03:39:03.136 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
03:39:03.137 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
03:39:03.139 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
03:39:03.145 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
03:39:03.145 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
03:39:03.145 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
03:39:04.897 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Line_ESTest' to results/MATH-4b-2-3-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
03:39:04.940 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
