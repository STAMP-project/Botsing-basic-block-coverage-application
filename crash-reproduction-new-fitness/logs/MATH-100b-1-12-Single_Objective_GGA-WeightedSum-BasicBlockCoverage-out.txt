09:01:43.516 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ArrayIndexOutOfBoundsException
09:01:43.518 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator:173)
09:01:43.518 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.estimation.AbstractEstimator
09:01:43.518 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:01:43.920 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
09:01:44.904 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:01:44.913 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:01:44.923 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:01:44.928 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:01:45.101 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.911764705882353
09:01:45.520 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 5.911764705882353
09:01:45.520 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 5.911764705882353. PT: 0 seconds
09:01:45.520 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:01:45.891 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 56 fitness evolutions and 0 second: 5.25
09:01:46.262 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 100
09:01:46.262 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 5.25. PT: 1 seconds
09:01:46.755 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 150
09:01:47.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 200
09:01:47.352 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 250
09:01:47.668 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 300
09:01:47.870 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 350
09:01:48.054 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 400
09:01:48.235 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 450
09:01:48.366 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 500
09:01:48.372 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.373 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.412 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.413 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.448 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.449 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.449 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.450 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.470 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.477 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 550
09:01:48.560 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.561 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.568 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.592 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.600 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 600
09:01:48.647 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.648 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.677 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.678 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.678 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.693 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.694 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.694 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.694 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.696 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.702 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.714 [main] INFO  e.s.b.s.BasicBlockCoverage - *C1*
09:01:48.723 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.25 | 650
09:01:48.739 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 669 fitness evolutions and 3 second: 4.0
09:01:48.895 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 700
09:01:48.896 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.0. PT: 3 seconds
09:01:49.093 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 750
09:01:49.371 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 800
09:01:49.529 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 850
09:01:49.721 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 900
09:01:49.903 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 950
09:01:50.048 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 1000
09:01:50.250 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 1050
09:01:50.665 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 1100
09:01:50.801 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 1150
09:01:50.921 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 1200
09:01:50.925 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1225 fitness evolutions and 6 second: 0.0
09:01:51.051 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 1250
09:01:51.051 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 6 seconds
09:01:51.052 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:01:51.052 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:01:51.052 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 6 seconds
09:01:51.052 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
String string0 = "RealMatrixImpl{";
double double0 = (-3063.59429802002);
boolean boolean0 = true;
EstimatedParameter estimatedParameter0 = new EstimatedParameter(string0, double0, boolean0);
simpleEstimationProblem0.addParameter(estimatedParameter0);
String string1 = "\"jxWY)gyA|7?!";
double double1 = 0.0;
double double2 = 2059.0;
levenbergMarquardtEstimator0.setCostRelativeTolerance(double2);
double double3 = (-3638.930482);
levenbergMarquardtEstimator0.initializeEstimate(simpleEstimationProblem0);
levenbergMarquardtEstimator0.setCostRelativeTolerance(double0);
double double4 = (-0.6512821533732934);
LevenbergMarquardtEstimator levenbergMarquardtEstimator1 = new LevenbergMarquardtEstimator();
levenbergMarquardtEstimator1.setCostRelativeTolerance(double4);
double double5 = (-3638.924311824629);
levenbergMarquardtEstimator1.initializeEstimate(simpleEstimationProblem0);
levenbergMarquardtEstimator1.getRMS(simpleEstimationProblem0);
double double6 = 0.18112759460028924;
WeightedMeasurement weightedMeasurement0 = mock(WeightedMeasurement.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(weightedMeasurement0).getResidual();
doReturn(0.0).when(weightedMeasurement0).getWeight();
simpleEstimationProblem0.addMeasurement(weightedMeasurement0);
levenbergMarquardtEstimator0.setCostRelativeTolerance(double6);
double double7 = 0.0;
levenbergMarquardtEstimator0.setCostRelativeTolerance(double7);
double double8 = (-3638.924311824629);
levenbergMarquardtEstimator1.initializeEstimate(simpleEstimationProblem0);
levenbergMarquardtEstimator1.setCostRelativeTolerance(double3);
levenbergMarquardtEstimator0.getChiSquare(simpleEstimationProblem0);
levenbergMarquardtEstimator0.getCovariances(simpleEstimationProblem0);
LevenbergMarquardtEstimator levenbergMarquardtEstimator2 = new LevenbergMarquardtEstimator();
levenbergMarquardtEstimator2.incrementJacobianEvaluationsCounter();
levenbergMarquardtEstimator1.getChiSquare(simpleEstimationProblem0);

09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ArrayIndexOutOfBoundsException: 0
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:01:51.053 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:01:51.054 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:01:51.062 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:01:51.063 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:01:51.063 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:01:51.741 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractEstimator_ESTest' to results/MATH-100b-1-12-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
09:01:51.755 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
