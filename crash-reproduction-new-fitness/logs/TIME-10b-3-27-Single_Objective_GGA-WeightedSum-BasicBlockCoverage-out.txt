00:11:07.112 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
00:11:07.114 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.chrono.BaseChronology.set(BaseChronology:240)
00:11:07.114 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.chrono.BaseChronology
00:11:07.114 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:11:07.484 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
00:11:09.907 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:11:09.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:11:09.945 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:11:09.956 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:11:10.558 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.666666666666666
00:11:11.404 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 5.666666666666666
00:11:11.411 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 5.666666666666666. PT: 1 seconds
00:11:11.412 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:11:12.298 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.666666666666666 | 100
00:11:13.008 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.666666666666666 | 150
00:11:13.610 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.666666666666666 | 200
00:11:14.054 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.666666666666666 | 250
00:11:14.539 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.666666666666666 | 300
00:11:14.606 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 313 fitness evolutions and 4 second: 3.0
00:11:14.954 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 350
00:11:14.955 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 5 seconds
00:11:15.344 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 400
00:11:16.050 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 450
00:11:16.743 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 500
00:11:17.494 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 550
00:11:18.134 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 600
00:11:18.164 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 618 fitness evolutions and 8 second: 0.665158371040724
00:11:18.608 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.665158371040724 | 650
00:11:18.608 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.665158371040724. PT: 8 seconds
00:11:19.018 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 706 fitness evolutions and 9 second: 0.6
00:11:19.190 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6 | 700
00:11:19.191 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.6. PT: 9 seconds
00:11:19.562 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6 | 750
00:11:19.824 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6 | 800
00:11:19.898 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 831 fitness evolutions and 9 second: 0.5862068965517241
00:11:20.218 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.5862068965517241 | 850
00:11:20.218 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.5862068965517241. PT: 10 seconds
00:11:20.498 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 910 fitness evolutions and 10 second: 0.0
00:11:20.646 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 900
00:11:20.646 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 10 seconds
00:11:20.647 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:11:20.647 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:11:20.647 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 10 seconds
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: int int0 = 1177;
DateTimeZone dateTimeZone0 = mock(DateTimeZone.class, new ViolatedAssumptionAnswer());
int int1 = 0;
int int2 = (-36);
long long0 = 100000000L;
long long1 = (-601L);
boolean boolean0 = true;
long long2 = 1L;
long long3 = BasicFixedMonthChronology.MILLIS_PER_MONTH;
int int3 = 1073741837;
int int4 = 2;
int int5 = 1580;
Days days0 = Days.FOUR;
AssembledChronology.Fields assembledChronology_Fields0 = new AssembledChronology.Fields();
EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();
String string0 = "";
MonthDay monthDay0 = MonthDay.now();
MonthDay monthDay1 = monthDay0.plus(days0);
ethiopicChronology0.set(monthDay1, int1);
EthiopicChronology ethiopicChronology1 = (EthiopicChronology)ethiopicChronology0.withUTC();
GJChronology.getInstance(dateTimeZone0);
int int6 = (-2712);
int int7 = 2145993374;
int int8 = (-23);
ethiopicChronology1.getDateTimeMillis(int4, int7, int7, int8);
UTCProvider uTCProvider0 = new UTCProvider();
String string1 = "k9VO}O}6t{7Z?yVMTe";
DateTimeZone dateTimeZone1 = uTCProvider0.getZone(string1);
IslamicChronology.LeapYearPatternType islamicChronology_LeapYearPatternType0 = null;
IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone1, islamicChronology_LeapYearPatternType0);
islamicChronology0.setYear(int6, int3);
IslamicChronology.getInstance(dateTimeZone1);

00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 31 for dayOfMonth must be in the range [1,30]
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(LimitChronology.java:510)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.BaseChronology.set(BaseChronology.java:240)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:11:20.648 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:11:20.649 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:11:20.654 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:11:20.654 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:11:20.654 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:11:21.653 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'BaseChronology_ESTest' to results/TIME-10b-3-27-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:11:21.660 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
