11:02:43.458 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.UnsupportedOperationException
11:02:43.461 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.Period.withYears(Period:896)
11:02:43.462 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.Period
11:02:43.462 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
11:02:45.046 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.PeriodType
11:02:45.047 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.Period
11:02:45.056 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
11:02:47.058 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
11:02:47.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
11:02:47.079 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
11:02:47.086 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
11:02:47.445 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 1.5
11:02:48.282 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.285 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.343 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.353 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.436 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.449 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.483 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.487 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.544 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:48.580 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.5
11:02:48.580 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 1 seconds
11:02:48.580 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
11:02:48.661 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:49.061 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:49.130 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:49.131 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:49.172 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:02:49.202 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 100
11:02:49.203 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
11:02:49.203 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
11:02:49.203 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
11:02:49.203 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
11:02:49.204 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: String string0 = "!.hR";
TestInterval_Basics testInterval_Basics0 = new TestInterval_Basics(string0);
TestInterval_Basics.MockInterval testInterval_Basics_MockInterval0 = testInterval_Basics0.new MockInterval();
Duration duration0 = testInterval_Basics_MockInterval0.toDuration();
int int0 = 0;
Period period0 = Period.seconds(int0);
int int1 = (-2250);
Period period1 = period0.plusDays(int1);
int int2 = 0;
Period period2 = Period.millis(int2);
period2.getSeconds();
period2.toStandardDuration();
int int3 = 1932;
int int4 = (-800);
Period period3 = Period.days(int4);
FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.UTC;
DateTime dateTime0 = DateTime.now((DateTimeZone) fixedDateTimeZone0);
DateTime dateTime1 = dateTime0.plusMinutes(int0);
Period period4 = new Period(dateTime1, dateTime0);
int int5 = period4.getWeeks();
period1.toStandardSeconds();
Period period5 = period0.withYears(int4);
int int6 = 9;
period5.withMonths(int6);
Period period6 = period3.withYears(int3);
period0.getHours();
Weeks weeks0 = Weeks.MAX_VALUE;
PeriodType periodType0 = weeks0.getPeriodType();
period6.normalizedStandard(periodType0);
int int7 = 17117045;
TestYearMonth_Basics testYearMonth_Basics0 = new TestYearMonth_Basics(string0);
TestYearMonth_Basics.MockYM testYearMonth_Basics_MockYM0 = testYearMonth_Basics0.new MockYM();
Chronology chronology0 = testYearMonth_Basics_MockYM0.getChronology();
Period period7 = duration0.toPeriod(chronology0);
period7.withYears(int5);
period6.getMillis();
int int8 = (-16);
Period.years(int7);

11:02:49.204 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
11:02:49.204 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.UnsupportedOperationException: Field is not supported
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.PeriodType.setIndexedField(PeriodType.java:690)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.Period.withYears(Period.java:896)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.Period.normalizedStandard(Period.java:1631)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
11:02:49.205 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
11:02:49.207 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
11:02:49.212 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
11:02:49.212 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
11:02:49.212 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
11:02:50.172 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Period_ESTest' to results/TIME-5b-2-20-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
11:02:50.189 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
