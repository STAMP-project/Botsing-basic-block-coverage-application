11:05:52.951 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
11:05:52.954 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket:366)
11:05:52.954 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.format.DateTimeParserBucket
11:05:52.954 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
11:05:53.811 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.FieldUtils
11:05:53.812 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.PreciseDurationDateTimeField
11:05:53.812 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.format.DateTimeParserBucket$SavedField
11:05:53.813 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.format.DateTimeParserBucket
11:05:53.851 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
11:05:58.366 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
11:05:58.387 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
11:05:58.395 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
11:05:58.402 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
11:05:59.358 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.8
11:05:59.383 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 5 fitness evolutions and 0 second: 4.6
11:05:59.968 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 19 fitness evolutions and 1 second: 4.5
11:05:59.980 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 24 fitness evolutions and 1 second: 4.499999999144645
11:06:00.375 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.499999999144645
11:06:00.375 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.499999999144645. PT: 1 seconds
11:06:00.375 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
11:06:00.561 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 66 fitness evolutions and 2 second: 4.466666666666667
11:06:01.195 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 100
11:06:01.195 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.466666666666667. PT: 2 seconds
11:06:01.847 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 150
11:06:02.535 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 200
11:06:03.011 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 250
11:06:03.381 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 300
11:06:03.747 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 350
11:06:04.124 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.466666666666667 | 400
11:06:04.221 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 454 fitness evolutions and 5 second: 2.5
11:06:04.283 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 450
11:06:04.283 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.5. PT: 5 seconds
11:06:04.492 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 500
11:06:04.750 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 550
11:06:04.949 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 600
11:06:05.185 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 650
11:06:05.456 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 700
11:06:05.962 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 750
11:06:05.962 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 7 seconds
11:06:05.967 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
11:06:05.967 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
11:06:05.967 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 7 seconds
11:06:05.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: long long0 = 60009L;
FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.getDefault();
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
DateTimeField dateTimeField0 = buddhistChronology0.millisOfSecond();
String string0 = "";
boolean boolean0 = false;
IslamicChronology.LeapYearPatternType islamicChronology_LeapYearPatternType0 = IslamicChronology.LEAP_YEAR_16_BASED;
IslamicChronology islamicChronology0 = IslamicChronology.getInstance((DateTimeZone) fixedDateTimeZone0, islamicChronology_LeapYearPatternType0);
Locale locale0 = Locale.TRADITIONAL_CHINESE;
int int0 = 1057;
long long1 = 43200000L;
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(long1, islamicChronology0, locale0);
Object object0 = null;
Integer integer0 = new Integer(int0);
int int1 = 1;
long long2 = 816L;
DateTimeParserBucket dateTimeParserBucket1 = new DateTimeParserBucket(long2, buddhistChronology0, locale0, integer0, int0);
dateTimeParserBucket0.saveState();
dateTimeParserBucket1.saveField(dateTimeField0, int0);
DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket1.new SavedState();
boolean boolean1 = false;
buddhistChronology0.monthOfYear();
int int2 = (-1865);
DateTimeField dateTimeField1 = buddhistChronology0.dayOfWeek();
dateTimeParserBucket0.saveField(dateTimeField1, int0);
int int3 = (-2542);
long long3 = 60009L;
DateTimeParserBucket dateTimeParserBucket2 = new DateTimeParserBucket(long3, buddhistChronology0, locale0, integer0, int1);
boolean boolean2 = false;
String string1 = null;
dateTimeParserBucket0.computeMillis(boolean2, string0);
boolean boolean3 = true;
DateTimeParserBucket dateTimeParserBucket3 = new DateTimeParserBucket(int0, buddhistChronology0, locale0, integer0, int2);
dateTimeParserBucket3.computeMillis(boolean1);

11:06:05.967 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Cannot parse "": Value 1057 for dayOfWeek must be in the range [1,7]
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(LimitChronology.java:510)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
11:06:05.968 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
11:06:05.969 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
11:06:05.974 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
11:06:05.974 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
11:06:05.974 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
11:06:07.181 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DateTimeParserBucket_ESTest' to results/TIME-7b-4-16-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
11:06:07.219 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
