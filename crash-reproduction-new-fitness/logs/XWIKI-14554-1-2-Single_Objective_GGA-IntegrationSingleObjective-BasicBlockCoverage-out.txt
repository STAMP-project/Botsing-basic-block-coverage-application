18:02:15.705 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
18:02:15.708 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.xwiki.notifications.internal.email.AbstractMimeMessageIterator.next(AbstractMimeMessageIterator:214)
18:02:15.708 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.xwiki.notifications.internal.email.AbstractMimeMessageIterator
18:02:15.708 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
18:02:17.173 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.xwiki.notifications.internal.email.AbstractMimeMessageIterator
18:02:17.184 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 580.
18:02:43.992 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
18:02:44.011 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
18:02:44.035 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
18:02:44.058 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
18:02:45.295 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 1.5
18:02:45.873 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.5
18:02:45.873 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 1 seconds
18:02:45.873 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
18:02:47.671 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:47.673 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:48.395 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:48.398 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:48.703 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:48.706 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:48.966 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:48.968 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.475 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.476 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.476 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.641 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.641 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.641 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.641 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.722 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.722 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.722 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.723 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.750 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.751 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.751 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.751 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.880 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.880 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.887 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 100
18:02:49.985 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:49.988 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:50.629 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:50.630 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:51.265 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:51.267 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:51.391 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:51.391 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:51.540 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:51.541 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.087 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.089 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.090 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.096 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.133 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.133 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.134 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.143 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.181 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.201 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.202 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.202 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.221 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.222 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.222 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.235 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.235 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.237 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.237 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.237 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.238 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.256 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.258 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.342 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.349 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 150
18:02:52.361 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.362 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.383 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.383 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.450 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.450 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.463 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.465 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.903 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.934 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.954 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:52.954 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.043 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.044 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.064 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.064 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.142 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.142 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:53.156 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.719 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.720 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.767 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.768 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.853 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.853 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.858 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.860 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.863 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.864 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.870 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.870 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.881 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.884 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.884 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.890 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.891 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.891 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.895 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.895 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.896 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.900 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.909 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.934 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.946 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.947 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.947 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.960 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.968 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.968 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.970 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.973 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.973 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.989 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.989 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:58.992 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.000 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.004 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.009 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.009 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.012 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.016 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.023 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.032 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.042 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.102 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
18:02:59.136 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 200
18:02:59.136 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 15 seconds
18:02:59.136 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
18:02:59.137 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
18:02:59.137 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 15 seconds
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: PeriodicMimeMessageIterator periodicMimeMessageIterator0 = new PeriodicMimeMessageIterator();
NotificationEmailRenderer notificationEmailRenderer0 = mock(NotificationEmailRenderer.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "defaultNotificationEmailRenderer", (Object) notificationEmailRenderer0);
DocumentAccessBridge documentAccessBridge0 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "documentAccessBridge", (Object) documentAccessBridge0);
MimeMessage mimeMessage0 = periodicMimeMessageIterator0.next();
MimeMessage mimeMessage1 = new MimeMessage(mimeMessage0);
NotificationUserIterator notificationUserIterator0 = new NotificationUserIterator();
DocumentAccessBridge documentAccessBridge1 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "documentAccessBridge", (Object) documentAccessBridge1);
Logger logger0 = SQLCustomQuery.log;
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "logger", (Object) logger0);
XWikiHibernateStore xWikiHibernateStore0 = new XWikiHibernateStore();
EntityReferenceSerializer<DocumentReference> entityReferenceSerializer0 = (EntityReferenceSerializer<DocumentReference>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "compactWikiEntityReferenceSerializer", (Object) entityReferenceSerializer0);
DocumentReferenceResolver<String> documentReferenceResolver0 = (DocumentReferenceResolver<String>) mock(DocumentReferenceResolver.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "currentMixedDocumentReferenceResolver", (Object) documentReferenceResolver0);
DocumentReferenceResolver<Integer> documentReferenceResolver1 = (DocumentReferenceResolver<Integer>) mock(DocumentReferenceResolver.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "defaultDocumentReferenceResolver", (Object) documentReferenceResolver1);
EntityReferenceSerializer<TimeScheduler3.Task> entityReferenceSerializer1 = (EntityReferenceSerializer<TimeScheduler3.Task>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "defaultEntityReferenceSerializer", (Object) entityReferenceSerializer1);
EntityReferenceSerializer<Integer> entityReferenceSerializer2 = (EntityReferenceSerializer<Integer>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "localEntityReferenceSerializer", (Object) entityReferenceSerializer2);
SubstituteLoggingEvent substituteLoggingEvent0 = new SubstituteLoggingEvent();
SubstituteLogger substituteLogger0 = substituteLoggingEvent0.getLogger();
PriorityBlockingQueue<SubstituteLoggingEvent> priorityBlockingQueue0 = new PriorityBlockingQueue<SubstituteLoggingEvent>();
EventRecodingLogger eventRecodingLogger0 = new EventRecodingLogger(substituteLogger0, priorityBlockingQueue0);
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "logger", (Object) eventRecodingLogger0);
DefaultObservationManager defaultObservationManager0 = new DefaultObservationManager();
ComponentManager componentManager0 = mock(ComponentManager.class, new ViolatedAssumptionAnswer());
Injector.inject(defaultObservationManager0, (Class<?>) DefaultObservationManager.class, "componentManager", (Object) componentManager0);
NOPLogger nOPLogger0 = NOPLogger.NOP_LOGGER;
Injector.inject(defaultObservationManager0, (Class<?>) DefaultObservationManager.class, "logger", (Object) nOPLogger0);
Injector.validateBean(defaultObservationManager0, (Class<?>) DefaultObservationManager.class);
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "observationManager", (Object) defaultObservationManager0);
Provider<MimeMessage> provider0 = (Provider<MimeMessage>) mock(Provider.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "oldRenderingProvider", (Object) provider0);
XWikiContext xWikiContext0 = new XWikiContext();
XWikiContext xWikiContext1 = xWikiContext0.clone();
XWikiContext xWikiContext2 = xWikiContext1.clone();
XWikiContext xWikiContext3 = xWikiContext2.clone();
XWikiCacheStore xWikiCacheStore0 = new XWikiCacheStore(xWikiHibernateStore0, xWikiContext3);
QueryManager queryManager0 = xWikiCacheStore0.getQueryManager();
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class, "queryManager", (Object) queryManager0);
DataMigrationManager dataMigrationManager0 = mock(DataMigrationManager.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateBaseStore.class, "dataMigrationManager", (Object) dataMigrationManager0);
Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateBaseStore.class, "execution", (Object) execution0);
LoggerManager loggerManager0 = mock(LoggerManager.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateBaseStore.class, "loggerManager", (Object) loggerManager0);
HibernateSessionFactory hibernateSessionFactory0 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateBaseStore.class, "sessionFactory", (Object) hibernateSessionFactory0);
Provider<TimeScheduler3.Task> provider1 = (Provider<TimeScheduler3.Task>) mock(Provider.class, new ViolatedAssumptionAnswer());
Injector.inject(xWikiHibernateStore0, (Class<?>) XWikiHibernateBaseStore.class, "xcontextProvider", (Object) provider1);
Injector.validateBean(xWikiHibernateStore0, (Class<?>) XWikiHibernateStore.class);
QueryManager queryManager1 = xWikiHibernateStore0.getQueryManager();
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "queryManager", (Object) queryManager1);
DocumentReferenceResolver<DocumentReference> documentReferenceResolver2 = (DocumentReferenceResolver<DocumentReference>) mock(DocumentReferenceResolver.class, new ViolatedAssumptionAnswer());
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "resolver", (Object) documentReferenceResolver2);
WikiDescriptorManager wikiDescriptorManager0 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "wikiDescriptorManager", (Object) wikiDescriptorManager0);
Injector.validateBean(notificationUserIterator0, (Class<?>) NotificationUserIterator.class);
TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
DefaultEvent defaultEvent0 = new DefaultEvent();
DocumentReference documentReference0 = defaultEvent0.getDocument();
periodicMimeMessageIterator0.initialize(notificationUserIterator0, treeMap0, documentReference0);

18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.xwiki.notifications.internal.email.AbstractMimeMessageIterator.next(AbstractMimeMessageIterator.java:214)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
18:02:59.138 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
18:02:59.139 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
18:02:59.140 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
18:02:59.145 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
18:02:59.145 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
18:02:59.145 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
18:03:01.455 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractMimeMessageIterator_ESTest' to results/XWIKI-14554-1-2-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
18:03:01.473 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
