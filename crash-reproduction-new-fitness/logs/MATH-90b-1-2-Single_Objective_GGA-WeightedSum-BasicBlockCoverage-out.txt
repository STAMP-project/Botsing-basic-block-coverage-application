21:31:25.551 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.IllegalArgumentException
21:31:25.555 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.stat.Frequency.addValue(Frequency:134)
21:31:25.555 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.stat.Frequency
21:31:25.555 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
21:31:26.070 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
21:31:27.789 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
21:31:27.801 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
21:31:27.812 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
21:31:27.840 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
21:31:28.239 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
21:31:28.260 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 3 fitness evolutions and 0 second: 0.0
21:31:29.760 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
21:31:29.761 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
21:31:29.761 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
21:31:29.762 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
21:31:29.762 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
21:31:29.762 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Frequency frequency0 = new Frequency();
Object object0 = new Object();
frequency0.addValue(object0);
frequency0.getSumFreq();
long long0 = frequency0.getSumFreq();
int int0 = 1816;
frequency0.getCumPct(int0);
frequency0.getPct(long0);
frequency0.addValue(object0);
Frequency frequency1 = new Frequency();
frequency0.getPct((Object) frequency1);
frequency1.getCount((Object) frequency0);
int int1 = (-1074);
frequency0.getCumPct(int1);
Object object1 = new Object();
frequency0.addValue(object1);
frequency0.getCount(int0);
Object object2 = new Object();
frequency1.getCumFreq(object2);
frequency1.addValue(object2);
Object object3 = new Object();
frequency0.getCount(object3);

21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.IllegalArgumentException: Value not comparable to existing values.
21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.stat.Frequency.addValue(Frequency.java:134)
21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
21:31:29.763 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
21:31:29.764 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
21:31:29.766 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
21:31:29.773 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
21:31:29.773 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
21:31:29.773 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
21:31:30.948 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Frequency_ESTest' to results/MATH-90b-1-2-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
21:31:30.971 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
