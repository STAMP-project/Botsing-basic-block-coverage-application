07:13:37.232 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.IllegalArgumentException
07:13:37.235 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.stat.Frequency.addValue(Frequency:134)
07:13:37.235 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.stat.Frequency
07:13:37.235 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
07:13:37.757 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.stat.Frequency
07:13:37.771 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
07:13:39.216 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
07:13:39.227 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
07:13:39.247 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
07:13:39.253 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
07:13:39.425 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 1.3333333333333333
07:13:40.702 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
07:13:40.703 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
07:13:40.703 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
07:13:40.703 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
07:13:40.703 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
07:13:40.703 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Comparator<Long> comparator0 = null;
Frequency frequency0 = new Frequency(comparator0);
int int0 = (-816);
frequency0.getPct(int0);
int int1 = (-1);
frequency0.addValue(int1);
int int2 = 0;
frequency0.getCount(int2);
char char0 = 's';
long long0 = frequency0.getCumFreq(char0);
long long1 = 1L;
frequency0.getPct(long1);
frequency0.addValue(char0);
frequency0.getCumPct(char0);
frequency0.getCumPct(int2);
int int3 = (-1330);
frequency0.getCumPct(int3);
String string0 = frequency0.toString();
frequency0.toString();
char char1 = '/';
long long2 = frequency0.getCount(char1);
frequency0.addValue((Object) comparator0);
char char2 = 'a';
frequency0.getCumPct(char2);
frequency0.getCumPct((Object) string0);
Object.registerNatives();
frequency0.getCount(long2);
frequency0.toString();
frequency0.getCumFreq(long0);
String string1 = " #Bw(9:cTevB{J-";
frequency0.addValue((Object) string1);
Object object0 = new Object();
frequency0.getCount(object0);
int int4 = 1;
frequency0.getPct(int4);

07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.IllegalArgumentException: Value not comparable to existing values.
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.stat.Frequency.addValue(Frequency.java:134)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.stat.Frequency.addValue(Frequency.java:171)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
07:13:40.704 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
07:13:40.705 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
07:13:40.706 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
07:13:40.711 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
07:13:40.711 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
07:13:40.711 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
07:13:41.752 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Frequency_ESTest' to results/MATH-90b-1-8-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
07:13:41.764 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
