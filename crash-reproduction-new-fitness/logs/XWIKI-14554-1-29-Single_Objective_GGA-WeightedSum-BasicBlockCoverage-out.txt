14:10:39.892 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
14:10:39.895 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.xwiki.notifications.internal.email.AbstractMimeMessageIterator.next(AbstractMimeMessageIterator:214)
14:10:39.895 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.xwiki.notifications.internal.email.AbstractMimeMessageIterator
14:10:39.895 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
14:10:40.776 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 580.
14:11:08.937 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
14:11:08.959 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
14:11:08.968 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
14:11:08.981 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
14:11:13.371 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 4 second: 3.0
14:11:14.157 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 3.0
14:11:14.157 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 5 seconds
14:11:14.157 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
14:11:16.087 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 66 fitness evolutions and 7 second: 0.0
14:11:18.542 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 100
14:11:18.542 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 9 seconds
14:11:18.543 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
14:11:18.543 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
14:11:18.543 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 9 seconds
14:11:18.558 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: PeriodicMimeMessageIterator periodicMimeMessageIterator0 = new PeriodicMimeMessageIterator();
periodicMimeMessageIterator0.next();
NotificationEmailRenderer notificationEmailRenderer0 = mock(NotificationEmailRenderer.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "defaultNotificationEmailRenderer", (Object) notificationEmailRenderer0);
DocumentAccessBridge documentAccessBridge0 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "documentAccessBridge", (Object) documentAccessBridge0);
MimeMessageFactory<PoolingConnection> mimeMessageFactory0 = (MimeMessageFactory<PoolingConnection>) mock(MimeMessageFactory.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "factory", (Object) mimeMessageFactory0);
Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "logger", (Object) logger0);
MailSenderConfiguration mailSenderConfiguration0 = mock(MailSenderConfiguration.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "mailSenderConfiguration", (Object) mailSenderConfiguration0);
WikiDescriptorManager wikiDescriptorManager0 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "wikiDescriptorManager", (Object) wikiDescriptorManager0);
Injector.validateBean(periodicMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class);
Consumer<Object> consumer0 = null;
periodicMimeMessageIterator0.forEachRemaining(consumer0);
periodicMimeMessageIterator0.spliterator();
periodicMimeMessageIterator0.next();
AbstractMimeMessageIterator abstractMimeMessageIterator0 = new AbstractMimeMessageIterator();
NotificationEmailRenderer notificationEmailRenderer1 = mock(NotificationEmailRenderer.class, new ViolatedAssumptionAnswer());
Injector.inject(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "defaultNotificationEmailRenderer", (Object) notificationEmailRenderer1);
DocumentAccessBridge documentAccessBridge1 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
Injector.inject(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "documentAccessBridge", (Object) documentAccessBridge1);
MimeMessageFactory<CompositeEvent> mimeMessageFactory1 = (MimeMessageFactory<CompositeEvent>) mock(MimeMessageFactory.class, new ViolatedAssumptionAnswer());
Injector.inject(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "factory", (Object) mimeMessageFactory1);
Logger logger1 = mock(Logger.class, new ViolatedAssumptionAnswer());
Injector.inject(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "logger", (Object) logger1);
MailSenderConfiguration mailSenderConfiguration1 = mock(MailSenderConfiguration.class, new ViolatedAssumptionAnswer());
Injector.inject(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "mailSenderConfiguration", (Object) mailSenderConfiguration1);
WikiDescriptorManager wikiDescriptorManager1 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
Injector.inject(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class, "wikiDescriptorManager", (Object) wikiDescriptorManager1);
Injector.validateBean(abstractMimeMessageIterator0, (Class<?>) AbstractMimeMessageIterator.class);
Object.registerNatives();
abstractMimeMessageIterator0.next();
PeriodicMimeMessageIterator periodicMimeMessageIterator1 = new PeriodicMimeMessageIterator();
NotificationManager notificationManager0 = mock(NotificationManager.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator1, (Class<?>) PeriodicMimeMessageIterator.class, "notificationManager", (Object) notificationManager0);
EntityReferenceSerializer<WikiReference> entityReferenceSerializer0 = (EntityReferenceSerializer<WikiReference>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator1, (Class<?>) PeriodicMimeMessageIterator.class, "serializer", (Object) entityReferenceSerializer0);
NotificationEmailRenderer notificationEmailRenderer2 = mock(NotificationEmailRenderer.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator1, (Class<?>) AbstractMimeMessageIterator.class, "defaultNotificationEmailRenderer", (Object) notificationEmailRenderer2);
DocumentAccessBridge documentAccessBridge2 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator1, (Class<?>) AbstractMimeMessageIterator.class, "documentAccessBridge", (Object) documentAccessBridge2);
MimeMessageFactory<Object> mimeMessageFactory2 = (MimeMessageFactory<Object>) mock(MimeMessageFactory.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator1, (Class<?>) AbstractMimeMessageIterator.class, "factory", (Object) mimeMessageFactory2);
String string0 = "";
DocumentReference documentReference0 = new DocumentReference(string0, string0, string0, string0);
LazyXWikiDocument lazyXWikiDocument0 = new LazyXWikiDocument(documentReference0);
XWikiContext xWikiContext0 = new XWikiContext();
XWikiContext xWikiContext1 = xWikiContext0.clone();
XWikiContext xWikiContext2 = xWikiContext1.clone();
XWikiContext xWikiContext3 = xWikiContext2.clone();
XWikiDocument xWikiDocument0 = xWikiContext3.getDoc();
MyFilterConfig myFilterConfig0 = new MyFilterConfig();
ServletContext servletContext0 = myFilterConfig0.getServletContext();
XWikiServletContext xWikiServletContext0 = new XWikiServletContext(servletContext0);
boolean boolean0 = false;
XWiki xWiki0 = new XWiki(xWikiContext3, xWikiServletContext0, boolean0);
String string1 = "XWikiUsers";
XWikiDocument xWikiDocument1 = xWiki0.getDocument(xWikiDocument0, string1, xWikiContext2);
MergeConfiguration mergeConfiguration0 = new MergeConfiguration();
MergeResult mergeResult0 = lazyXWikiDocument0.merge(xWikiDocument0, xWikiDocument1, mergeConfiguration0, xWikiContext2);
LogQueue logQueue0 = mergeResult0.getLog();
Injector.inject(periodicMimeMessageIterator1, (Class<?>) AbstractMimeMessageIterator.class, "logger", (Object) logQueue0);
DefaultMailSenderConfiguration defaultMailSenderConfiguration0 = new DefaultMailSenderConfiguration();
ConfigurationSource configurationSource0 = mock(ConfigurationSource.class, new ViolatedAssumptionAnswer());
Injector.inject(defaultMailSenderConfiguration0, (Class<?>) DefaultMailSenderConfiguration.class, "documentsSource", (Object) configurationSource0);
SubstituteLoggingEvent substituteLoggingEvent0 = new SubstituteLoggingEvent();
SubstituteLogger substituteLogger0 = substituteLoggingEvent0.getLogger();
LinkedBlockingDeque<SubstituteLoggingEvent> linkedBlockingDeque0 = new LinkedBlockingDeque<SubstituteLoggingEvent>();
EventRecodingLogger eventRecodingLogger0 = new EventRecodingLogger(substituteLogger0, linkedBlockingDeque0);
Injector.inject(defaultMailSenderConfiguration0, (Class<?>) DefaultMailSenderConfiguration.class, "logger", (Object) eventRecodingLogger0);
ConfigurationSource configurationSource1 = mock(ConfigurationSource.class, new ViolatedAssumptionAnswer());
Injector.inject(defaultMailSenderConfiguration0, (Class<?>) DefaultMailSenderConfiguration.class, "mailConfigSource", (Object) configurationSource1);
ConfigurationSource configurationSource2 = mock(ConfigurationSource.class, new ViolatedAssumptionAnswer());
Injector.inject(defaultMailSenderConfiguration0, (Class<?>) DefaultMailSenderConfiguration.class, "xwikiPropertiesSource", (Object) configurationSource2);
Injector.validateBean(defaultMailSenderConfiguration0, (Class<?>) DefaultMailSenderConfiguration.class);
Injector.inject(periodicMimeMessageIterator1, (Class<?>) AbstractMimeMessageIterator.class, "mailSenderConfiguration", (Object) defaultMailSenderConfiguration0);
WikiDescriptorManager wikiDescriptorManager2 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
Injector.inject(periodicMimeMessageIterator1, (Class<?>) AbstractMimeMessageIterator.class, "wikiDescriptorManager", (Object) wikiDescriptorManager2);
Injector.validateBean(periodicMimeMessageIterator1, (Class<?>) PeriodicMimeMessageIterator.class);
NotificationUserIterator notificationUserIterator0 = new NotificationUserIterator();
DocumentAccessBridge documentAccessBridge3 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "documentAccessBridge", (Object) documentAccessBridge3);
NOPLogger nOPLogger0 = NOPLogger.NOP_LOGGER;
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "logger", (Object) nOPLogger0);
XWikiHibernateStore xWikiHibernateStore0 = xWiki0.getHibernateStore();
QueryManager queryManager0 = xWikiHibernateStore0.getQueryManager();
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "queryManager", (Object) queryManager0);
DocumentReferenceResolver<LocalDate> documentReferenceResolver0 = (DocumentReferenceResolver<LocalDate>) mock(DocumentReferenceResolver.class, new ViolatedAssumptionAnswer());
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "resolver", (Object) documentReferenceResolver0);
WikiDescriptorManager wikiDescriptorManager3 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
Injector.inject(notificationUserIterator0, (Class<?>) NotificationUserIterator.class, "wikiDescriptorManager", (Object) wikiDescriptorManager3);
Injector.validateBean(notificationUserIterator0, (Class<?>) NotificationUserIterator.class);
Map<String, Object> map0 = null;
DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(string0);
int int0 = 18;
Date date0 = defaultBoxAndWhiskerXYDataset0.getXDate(int0, int0);
periodicMimeMessageIterator1.initialize(notificationUserIterator0, map0, date0, documentReference0);

14:11:18.558 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.xwiki.notifications.internal.email.AbstractMimeMessageIterator.next(AbstractMimeMessageIterator.java:214)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
14:11:18.559 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
14:11:18.561 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
14:11:18.565 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
14:11:18.565 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
14:11:18.565 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
14:11:24.506 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractMimeMessageIterator_ESTest' to results/XWIKI-14554-1-29-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
14:11:24.549 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
