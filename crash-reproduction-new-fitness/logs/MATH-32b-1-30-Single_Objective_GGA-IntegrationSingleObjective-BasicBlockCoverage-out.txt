11:12:03.508 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ClassCastException
11:12:03.512 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties(PolygonsSet:136)
11:12:03.512 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet
11:12:03.512 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
11:12:05.438 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet
11:12:05.642 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
11:12:09.608 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
11:12:09.742 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
11:12:09.772 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
11:12:09.781 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
11:12:11.082 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 1.5
11:12:11.153 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 2 fitness evolutions and 1 second: 1.0
11:12:14.520 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.0
11:12:14.521 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.0. PT: 4 seconds
11:12:14.521 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
11:12:16.364 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 100
11:12:17.267 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 150
11:12:18.165 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 200
11:12:19.680 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 250
11:12:20.487 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 300
11:12:21.446 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 350
11:12:22.462 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 400
11:12:23.161 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 450
11:12:24.193 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 500
11:12:25.743 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 550
11:12:27.348 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 600
11:12:28.848 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 650
11:12:29.839 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 700
11:12:30.652 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 750
11:12:31.276 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 800
11:12:32.263 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 850
11:12:33.306 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 900
11:12:33.986 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 950
11:12:34.604 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 1000
11:12:35.356 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 1050
11:12:35.966 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 1100
11:12:36.609 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 1150
11:12:37.168 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 1200
11:12:37.870 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 1250
11:12:37.871 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 28 seconds
11:12:37.872 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
11:12:37.872 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
11:12:37.872 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 28 seconds
11:12:37.873 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: BSPTree<Euclidean2D> bSPTree0 = (BSPTree<Euclidean2D>) mock(BSPTree.class, new ViolatedAssumptionAnswer());
Hyperplane<Euclidean2D> hyperplane0 = (Hyperplane<Euclidean2D>) mock(Hyperplane.class, new ViolatedAssumptionAnswer());
PolygonsSet polygonsSet0 = new PolygonsSet();
PolygonsSet polygonsSet1 = new PolygonsSet();
PolygonsSet polygonsSet2 = new PolygonsSet();
PolygonsSet polygonsSet3 = new PolygonsSet();
polygonsSet0.computeGeometricalProperties();
boolean boolean0 = false;
Boolean boolean1 = new Boolean(boolean0);
Vector3D vector3D0 = Vector3D.PLUS_I;
Plane plane0 = new Plane(vector3D0, vector3D0);
SubPlane subPlane0 = new SubPlane(plane0, polygonsSet2);
BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subPlane0);
bSPTree1.getParent();
double double0 = 3353.020748758;
Vector2D vector2D0 = Vector2D.ZERO;
polygonsSet3.computeGeometricalProperties();
BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getCell(vector2D0);
polygonsSet2.getVertices();
Vector2D vector2D1 = Vector2D.NaN;
bSPTree2.getCell(vector2D1);
BSPTree.LeafMerger<Euclidean2D> bSPTree_LeafMerger0 = (BSPTree.LeafMerger<Euclidean2D>) mock(BSPTree.LeafMerger.class, new ViolatedAssumptionAnswer());
SubLine subLine0 = new SubLine(vector2D1, vector2D1);
SubHyperplane<Euclidean2D> subHyperplane0 = polygonsSet0.intersection(subLine0);
polygonsSet1.intersection(subHyperplane0);
double double1 = 348.3592569999;
PolygonsSet polygonsSet4 = polygonsSet1.buildNew(bSPTree1);
LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
PolygonsSet polygonsSet5 = new PolygonsSet(linkedList0);
boolean boolean2 = false;
polygonsSet5.getTree(boolean2);
polygonsSet4.getVertices();
polygonsSet4.computeGeometricalProperties();

11:12:37.873 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ClassCastException: org.apache.commons.math3.geometry.euclidean.threed.SubPlane cannot be cast to java.lang.Boolean
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties(PolygonsSet.java:136)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
11:12:37.874 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
11:12:37.876 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
11:12:37.884 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
11:12:37.885 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
11:12:37.885 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
11:12:39.387 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PolygonsSet_ESTest' to results/MATH-32b-1-30-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
11:12:39.397 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
