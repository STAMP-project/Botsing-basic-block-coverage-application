09:25:24.766 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
09:25:24.768 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.chrono.BaseChronology.set(BaseChronology:240)
09:25:24.768 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.chrono.BaseChronology
09:25:24.768 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:25:25.405 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.FieldUtils
09:25:25.406 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.PreciseDurationDateTimeField
09:25:25.406 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.chrono.BaseChronology
09:25:25.425 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
09:25:27.536 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:25:27.546 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:25:27.552 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:25:27.563 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:25:27.927 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 3.9230769230769234
09:25:28.280 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 6 fitness evolutions and 0 second: 2.9230769230769234
09:25:28.546 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 2.9230769230769234
09:25:28.546 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.9230769230769234. PT: 0 seconds
09:25:28.547 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:25:29.244 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.9230769230769234 | 100
09:25:29.587 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 140 fitness evolutions and 2 second: 1.5
09:25:29.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 150
09:25:29.785 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 2 seconds
09:25:30.183 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 200
09:25:30.516 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 250
09:25:30.784 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 300
09:25:31.046 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 350
09:25:31.299 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 400
09:25:31.611 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 450
09:25:32.242 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 500
09:25:32.696 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 550
09:25:33.271 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 600
09:25:33.897 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 650
09:25:34.317 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 700
09:25:34.691 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 750
09:25:35.103 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 800
09:25:35.744 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 850
09:25:36.287 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 900
09:25:36.754 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 950
09:25:37.094 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 1000
09:25:37.095 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 9 seconds
09:25:37.096 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:25:37.096 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:25:37.096 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 9 seconds
09:25:37.096 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeZone dateTimeZone0 = mock(DateTimeZone.class, new ViolatedAssumptionAnswer());
ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();
iSOChronology0.halfdays();
iSOChronology0.secondOfMinute();
iSOChronology0.halfdays();
IslamicChronology islamicChronology0 = IslamicChronology.getInstance();
islamicChronology0.secondOfMinute();
long long0 = 3723004L;
long long1 = 90L;
long long2 = (-945L);
LocalDateTime localDateTime0 = new LocalDateTime(long2, (Chronology) iSOChronology0);
long long3 = (-2525L);
long long4 = 2154L;
iSOChronology0.set(localDateTime0, long4);
MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
iSOChronology0.millisOfSecond();
int int0 = (-1);
localDateTime0.withWeekyear(int0);
long long5 = (-2525L);
localDateTime0.millisOfSecond();
long long6 = 18L;
islamicChronology0.set(localDateTime0, long5);
DurationField durationField0 = MillisDurationField.INSTANCE;
int int1 = (-1307);
int int2 = 1;
int int3 = 1970;
DateTimeZone dateTimeZone1 = DateTimeZone.forOffsetHours(int0);
GregorianChronology gregorianChronology0 = GregorianChronology.getInstance(dateTimeZone1);
gregorianChronology0.withZone(dateTimeZone1);
IslamicChronology.LeapYearPatternType islamicChronology_LeapYearPatternType0 = IslamicChronology.LEAP_YEAR_INDIAN;
IslamicChronology.getInstance(dateTimeZone0, islamicChronology_LeapYearPatternType0);
GJChronology gJChronology0 = GJChronology.getInstance();
gJChronology0.dayOfYear();
Object object0 = new Object();
islamicChronology0.withUTC();

09:25:37.096 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:25:37.096 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 31 for dayOfMonth must be in the range [1,29]
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(LimitChronology.java:510)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(ZonedChronology.java:463)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.chrono.BaseChronology.set(BaseChronology.java:240)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:25:37.097 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:25:37.098 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:25:37.102 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:25:37.103 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:25:37.103 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:25:38.067 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'BaseChronology_ESTest' to results/TIME-10b-3-27-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:25:38.077 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
