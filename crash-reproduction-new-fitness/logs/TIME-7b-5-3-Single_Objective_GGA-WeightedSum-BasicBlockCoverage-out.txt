06:35:51.793 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
06:35:51.796 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket:359)
06:35:51.796 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.format.DateTimeParserBucket
06:35:51.796 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
06:35:52.092 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
06:35:53.908 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
06:35:53.916 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
06:35:53.922 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
06:35:53.927 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
06:35:54.737 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.979166666666667
06:35:55.179 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 24 fitness evolutions and 1 second: 5.0
06:35:55.515 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 5.0
06:35:55.516 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 5.0. PT: 1 seconds
06:35:55.516 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
06:35:56.063 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.0 | 100
06:35:56.331 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.0 | 150
06:35:56.681 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 5.0 | 200
06:35:56.828 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 229 fitness evolutions and 2 second: 4.875
06:35:56.867 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 233 fitness evolutions and 2 second: 0.0
06:35:57.046 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 250
06:35:57.046 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
06:35:57.048 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
06:35:57.048 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
06:35:57.048 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeParserBucket.SavedField[] dateTimeParserBucket_SavedFieldArray0 = new DateTimeParserBucket.SavedField[6];
long long0 = 0L;
String string0 = ";pXfC\"D&";
GregorianChronology.getInstance();
Instant instant0 = new Instant(long0);
int int0 = 339;
Instant instant1 = instant0.withDurationAdded(long0, int0);
ISOChronology iSOChronology0 = (ISOChronology)instant1.getChronology();
Locale locale0 = Locale.KOREAN;
Locale locale1 = null;
int int1 = 41;
Integer integer0 = Integer.valueOf(int1);
long long1 = (-1823L);
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(long1, iSOChronology0, locale0, integer0);
Integer integer1 = dateTimeParserBucket0.getOffsetInteger();
long long2 = 0L;
int int2 = 7593750;
MockZone mockZone0 = new MockZone(long2, int1, int2);
dateTimeParserBucket0.setZone(mockZone0);
DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
dateTimeParserBucket0.saveField(dateTimeFieldType0, int2);
dateTimeParserBucket0.setOffset(integer1);
boolean boolean0 = true;
String string1 = "Ly#;";
dateTimeParserBucket0.computeMillis(boolean0, string0);
DateTimeZone dateTimeZone0 = null;
DateTimeParserBucket.access$002(dateTimeParserBucket0, dateTimeZone0);
boolean boolean1 = false;
dateTimeParserBucket0.computeMillis(boolean1, string0);
dateTimeParserBucket0.getOffsetInteger();
boolean boolean2 = true;
dateTimeParserBucket0.computeMillis(boolean2);
DateTimeParserBucket.access$100(dateTimeParserBucket0);
dateTimeParserBucket0.setOffset(integer1);
Integer integer2 = new Integer(int2);
dateTimeParserBucket0.restoreState(integer2);
dateTimeParserBucket0.getLocale();

06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Cannot parse ";pXfC"D&": Value 7593750 for dayOfMonth must be in the range [1,31]
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
06:35:57.049 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
06:35:57.050 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
06:35:57.050 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
06:35:57.050 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
06:35:57.050 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
06:35:57.054 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
06:35:57.054 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
06:35:57.054 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
06:35:57.913 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DateTimeParserBucket_ESTest' to results/TIME-7b-5-3-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
06:35:57.929 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
