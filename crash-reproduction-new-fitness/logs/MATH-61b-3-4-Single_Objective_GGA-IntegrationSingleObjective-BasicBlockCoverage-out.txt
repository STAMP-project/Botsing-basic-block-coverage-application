06:48:22.889 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.apache.commons.math.MathRuntimeException$4
06:48:22.892 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl:80)
06:48:22.892 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.distribution.PoissonDistributionImpl
06:48:22.892 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
06:48:24.676 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.MathRuntimeException
06:48:24.678 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.distribution.PoissonDistributionImpl
06:48:24.679 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.distribution.PoissonDistributionImpl
06:48:24.706 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
06:48:29.083 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
06:48:29.105 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
06:48:29.115 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
06:48:29.137 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
06:48:29.606 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 2.5
06:48:29.679 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 6 fitness evolutions and 0 second: 0.0
06:48:30.677 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
06:48:30.678 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
06:48:30.678 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
06:48:30.679 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
06:48:30.679 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
06:48:30.679 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: double double0 = (-1.5707963267948966);
PoissonDistributionImpl poissonDistributionImpl0 = new PoissonDistributionImpl(double0);
double double1 = 0.0;
PoissonDistributionImpl poissonDistributionImpl1 = new PoissonDistributionImpl(double1);
double double2 = (-1132.864);
double double3 = poissonDistributionImpl0.cumulativeProbability(double2);
int int0 = 2411;
double double4 = poissonDistributionImpl1.cumulativeProbability(int0);
int int1 = poissonDistributionImpl0.getDomainUpperBound(double4);
double double5 = 3013.66573;
PoissonDistributionImpl poissonDistributionImpl2 = new PoissonDistributionImpl(double5);
double double6 = 104.32723572955;
PoissonDistributionImpl poissonDistributionImpl3 = new PoissonDistributionImpl(double6);
int int2 = 2003;
PoissonDistributionImpl poissonDistributionImpl4 = new PoissonDistributionImpl(double3, int1, int2);
poissonDistributionImpl2.sample(int1);
double double7 = 442.0;
PoissonDistributionImpl poissonDistributionImpl5 = new PoissonDistributionImpl(double7);
double double8 = poissonDistributionImpl3.normalApproximateProbability(int2);
poissonDistributionImpl1.sample();
poissonDistributionImpl3.getMean();
int int3 = (-1092);
poissonDistributionImpl2.sample(int3);
poissonDistributionImpl2.getMean();
PoissonDistributionImpl poissonDistributionImpl6 = new PoissonDistributionImpl(double8);
double double9 = 1391.605292925;
poissonDistributionImpl4.inverseCumulativeProbability(double9);
poissonDistributionImpl0.probability(int1);
poissonDistributionImpl3.cumulativeProbability((double) int0, double8);
int int4 = 2872;
int int5 = (-559);
poissonDistributionImpl4.cumulativeProbability(int4, int5);
double double10 = (-1013.352);
PoissonDistributionImpl poissonDistributionImpl7 = new PoissonDistributionImpl(double10);
double double11 = 0.0;
int int6 = poissonDistributionImpl0.inverseCumulativeProbability(double11);
int int7 = (-2848);
PoissonDistributionImpl poissonDistributionImpl8 = new PoissonDistributionImpl(double0, int7);
PoissonDistributionImpl poissonDistributionImpl9 = new PoissonDistributionImpl(int6);

06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.MathRuntimeException$4: the Poisson mean must be positive (-1.571)
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:387)
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:94)
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:80)
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
06:48:30.680 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Constructor.newInstance(Constructor.java:423)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
06:48:30.681 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
06:48:30.682 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
06:48:30.761 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
06:48:30.761 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
06:48:30.761 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
06:48:33.565 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PoissonDistributionImpl_ESTest' to results/MATH-61b-3-4-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
06:48:33.578 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
