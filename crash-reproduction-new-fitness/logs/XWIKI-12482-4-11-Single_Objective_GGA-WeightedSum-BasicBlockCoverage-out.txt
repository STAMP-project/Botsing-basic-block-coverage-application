12:48:01.492 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
12:48:01.495 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor.isSafeSelect(HqlQueryExecutor:112)
12:48:01.495 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor
12:48:01.496 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
12:48:02.854 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 573.
12:48:23.080 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
12:48:23.090 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
12:48:23.097 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
12:48:23.102 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
12:48:23.489 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
12:48:23.636 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 2 fitness evolutions and 0 second: 0.6666666666666666
12:48:24.968 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.6666666666666666
12:48:24.968 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.6666666666666666. PT: 1 seconds
12:48:24.969 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
12:48:26.161 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 100
12:48:27.065 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 150
12:48:28.346 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 200
12:48:31.239 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 250
12:48:31.476 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 300
12:48:32.004 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 350
12:48:32.654 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 400
12:48:33.987 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 450
12:48:34.278 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 500
12:48:35.057 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 550
12:48:36.179 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 600
12:48:36.467 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 650
12:48:38.445 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 700
12:48:39.230 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 750
12:48:40.808 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 800
12:48:41.323 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 850
12:48:41.849 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 900
12:48:42.120 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 950
12:48:42.677 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1000
12:48:42.916 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1050
12:48:43.701 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1100
12:48:44.859 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1150
12:48:45.504 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1200
12:48:46.668 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1250
12:48:46.892 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1300
12:48:48.496 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1350
12:48:48.714 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1400
12:48:49.512 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1450
12:48:49.756 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1500
12:48:51.258 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1550
12:48:51.521 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1600
12:48:52.100 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1650
12:48:53.629 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1700
12:48:53.990 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1750
12:48:55.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1800
12:48:57.787 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1850
12:48:58.387 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1900
12:49:00.261 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 1950
12:49:01.195 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2000
12:49:01.672 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2050
12:49:04.058 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2100
12:49:06.207 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2150
12:49:06.891 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2200
12:49:08.111 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2250
12:49:08.780 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2300
12:49:09.095 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2350
12:49:10.362 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2400
12:49:11.143 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2450
12:49:12.471 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2500
12:49:13.295 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2550
12:49:13.675 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2600
12:49:14.436 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2650
12:49:14.814 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2700
12:49:15.104 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2750
12:49:15.870 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2800
12:49:17.577 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2850
12:49:18.382 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2900
12:49:18.594 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 2950
12:49:18.982 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3000
12:49:19.378 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3050
12:49:20.115 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3100
12:49:20.332 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3150
12:49:20.555 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3200
12:49:20.792 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3250
12:49:20.990 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3300
12:49:21.247 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3350
12:49:21.952 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3400
12:49:22.168 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3450
12:49:23.065 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.6666666666666666 | 3500
12:49:23.072 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 3571 fitness evolutions and 59 second: 0.0
12:49:23.275 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 3550
12:49:23.275 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 60 seconds
12:49:23.277 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
12:49:23.277 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
12:49:23.277 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 60 seconds
12:49:23.277 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
HibernateSessionFactory hibernateSessionFactory0 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
String string0 = "";
HqlQueryExecutor.isSafeSelect(string0);
HqlQueryExecutor.isSafeSelect(string0);
HqlQueryExecutor.isSafeSelect(string0);
String string1 = "queries.hbm.xml";
HqlQueryExecutor hqlQueryExecutor0 = new HqlQueryExecutor();
ContextualAuthorizationManager contextualAuthorizationManager1 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "authorization", (Object) contextualAuthorizationManager1);
Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "execution", (Object) execution0);
HibernateSessionFactory hibernateSessionFactory1 = mock(HibernateSessionFactory.class, new ViolatedAssumptionAnswer());
Injector.inject(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class, "sessionFactory", (Object) hibernateSessionFactory1);
Injector.validateBean(hqlQueryExecutor0, (Class<?>) HqlQueryExecutor.class);
String string2 = " (timeout=";
String string3 = hqlQueryExecutor0.completeShortFormStatement(string2);
String string4 = "select getdate()";
HqlQueryExecutor.isSafeSelect(string4);
XWikiContext xWikiContext0 = hqlQueryExecutor0.getContext();
String string5 = "order by ";
SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());
OrdinalParameterDescriptor[] ordinalParameterDescriptorArray0 = null;
ParameterMetadata parameterMetadata0 = new ParameterMetadata(ordinalParameterDescriptorArray0, xWikiContext0);
CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl(string5, string3, sessionImplementor0, parameterMetadata0);
int int0 = (-1965);
Query query0 = collectionFilterImpl0.setText(int0, string4);
String string6 = "gvS0MyAomT";
String string7 = "permitted.  Try using the addOrUpdate() method.";
String string8 = "IS_MERGE_IN_PROGRESS";
DefaultQuery defaultQuery0 = new DefaultQuery(string7, string8, hqlQueryExecutor0);
hqlQueryExecutor0.setNamedParameter(query0, string6, defaultQuery0);

12:49:23.277 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.internal.store.hibernate.query.HqlQueryUtils.isSelectExpressionAllowed(HqlQueryUtils.java:223)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.internal.store.hibernate.query.HqlQueryUtils.isSelectItemAllowed(HqlQueryUtils.java:204)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.internal.store.hibernate.query.HqlQueryUtils.isSafe(HqlQueryUtils.java:153)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.store.hibernate.query.HqlQueryExecutor.isSafeSelect(HqlQueryExecutor.java:112)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
12:49:23.278 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
12:49:23.279 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
12:49:23.285 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
12:49:23.285 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
12:49:23.285 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
12:49:26.152 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'HqlQueryExecutor_ESTest' to results/XWIKI-12482-4-11-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
12:49:26.169 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
