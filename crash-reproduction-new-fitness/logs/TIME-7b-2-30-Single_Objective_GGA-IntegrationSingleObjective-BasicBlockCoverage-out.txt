11:08:10.188 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
11:08:10.191 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField:78)
11:08:10.191 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.PreciseDurationDateTimeField
11:08:10.191 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
11:08:10.774 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.FieldUtils
11:08:10.775 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.joda.time.field.PreciseDurationDateTimeField
11:08:10.792 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
11:08:12.929 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
11:08:13.545 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
11:08:13.585 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
11:08:13.656 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
11:08:14.835 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 1.5
11:08:16.220 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.5
11:08:16.220 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 2 seconds
11:08:16.220 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
11:08:16.556 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:17.065 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:17.120 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:17.185 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 100
11:08:17.408 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:17.974 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:18.014 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:18.045 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:18.048 [main] INFO  e.s.b.s.BasicBlockCoverage - *C2*
11:08:18.439 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 150
11:08:18.439 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 4 seconds
11:08:18.440 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
11:08:18.440 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
11:08:18.440 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 4 seconds
11:08:18.441 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0 = new TestPreciseDurationDateTimeField.MockStandardBaseDateTimeField();
long long0 = (-9223372036854775808L);
String string0 = "";
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getLeapAmount(long0);
int int0 = 2243;
long long1 = testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long0, int0);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.isLenient();
int int1 = 0;
long long2 = testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long1, int1);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getRangeDurationField();
long long3 = (-1106L);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.add(long3, (long) int0);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.add((long) int0, (long) int1);
long long4 = (-2908L);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long4, int1);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.roundHalfEven(long2);
ReadablePartial readablePartial0 = mock(ReadablePartial.class, new ViolatedAssumptionAnswer());
int int2 = 4080;
int[] intArray0 = new int[8];
intArray0[0] = int2;
intArray0[1] = int2;
intArray0[2] = int2;
intArray0[3] = int0;
intArray0[4] = int0;
intArray0[5] = int1;
intArray0[6] = int0;
intArray0[7] = int0;
int int3 = (-1493);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.addWrapField(readablePartial0, int2, intArray0, int3);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getDurationField();
long long5 = 4422L;
int int4 = (-478);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.set(long5, int4);
testPreciseDurationDateTimeField_MockStandardBaseDateTimeField0.getMinimumValue();

11:08:18.441 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
11:08:18.441 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 2243 for secondOfMinute must be in the range [0,59]
11:08:18.441 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
11:08:18.441 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
11:08:18.441 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
11:08:18.442 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
11:08:18.443 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
11:08:18.447 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
11:08:18.447 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
11:08:18.447 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
11:08:20.080 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PreciseDurationDateTimeField_ESTest' to results/TIME-7b-2-30-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
11:08:20.155 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
