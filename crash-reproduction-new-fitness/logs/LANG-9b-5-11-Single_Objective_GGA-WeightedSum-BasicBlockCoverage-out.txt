08:51:06.491 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ArrayIndexOutOfBoundsException
08:51:06.494 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.lang3.time.FastDateParser.<init>(FastDateParser:108)
08:51:06.495 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.lang3.time.FastDateParser
08:51:06.495 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
08:51:07.288 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 9.
08:51:09.099 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
08:51:09.110 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
08:51:09.121 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
08:51:09.127 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
08:51:09.735 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
08:51:10.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.5
08:51:10.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.5. PT: 1 seconds
08:51:10.939 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
08:51:11.593 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 87 fitness evolutions and 2 second: 3.0
08:51:11.954 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 100
08:51:11.954 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 3.0. PT: 2 seconds
08:51:13.009 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 150
08:51:13.804 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 200
08:51:14.303 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 250
08:51:14.803 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 300
08:51:15.338 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 350
08:51:15.763 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 400
08:51:16.216 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 450
08:51:16.514 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 500
08:51:16.867 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 550
08:51:17.457 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 600
08:51:17.810 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 650
08:51:18.068 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 700
08:51:18.397 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 750
08:51:18.647 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 800
08:51:18.904 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 850
08:51:19.583 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 900
08:51:19.835 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 950
08:51:20.233 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1000
08:51:20.407 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1050
08:51:20.698 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1100
08:51:21.111 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1150
08:51:21.468 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1200
08:51:21.655 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1250
08:51:21.875 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1300
08:51:22.140 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1350
08:51:22.346 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 3.0 | 1400
08:51:22.365 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1437 fitness evolutions and 13 second: 0.0
08:51:22.574 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 1450
08:51:22.574 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 13 seconds
08:51:22.575 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
08:51:22.575 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
08:51:22.575 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 13 seconds
08:51:22.575 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: FastDateParser.KeyValue[] fastDateParser_KeyValueArray0 = new FastDateParser.KeyValue[10];
Locale locale0 = Locale.GERMANY;
Locale locale1 = FastDateParser.JAPANESE_IMPERIAL;
Locale locale2 = Locale.UK;
Locale locale3 = Locale.UK;
String string0 = "Invalid pattern";
String string1 = "]STZ;";
String string2 = "H^C:Z9SXoRMy_<GS";
String string3 = null;
String string4 = "GMTIET";
String string5 = "GMTIST";
int int0 = (-938);
String string6 = "@^3HPe7g j";
SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(int0, string6);
FastDateParser fastDateParser0 = new FastDateParser(string5, simpleTimeZone0, locale1);
FastDateParser fastDateParser1 = new FastDateParser(string2, simpleTimeZone0, locale3);
fastDateParser1.isNextNumber();
String string7 = "The array of names must not be null";
FastDateParser fastDateParser2 = new FastDateParser(string7, simpleTimeZone0, locale3);
fastDateParser2.getTimeZone();

08:51:22.575 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
08:51:22.575 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ArrayIndexOutOfBoundsException: 5
08:51:22.575 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.lang3.time.FastDateParser.toArray(FastDateParser.java:413)
08:51:22.575 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.lang3.time.FastDateParser.getDisplayNames(FastDateParser.java:381)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.lang3.time.FastDateParser$TextStrategy.addRegex(FastDateParser.java:664)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.lang3.time.FastDateParser.init(FastDateParser.java:138)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.lang3.time.FastDateParser.<init>(FastDateParser.java:108)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Constructor.newInstance(Constructor.java:423)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
08:51:22.576 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
08:51:22.577 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
08:51:22.582 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
08:51:22.582 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
08:51:22.582 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
08:51:23.064 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'FastDateParser_ESTest' to results/LANG-9b-5-11-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
08:51:23.070 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
