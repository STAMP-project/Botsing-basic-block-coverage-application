22:38:32.001 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.IllegalArgumentException
22:38:32.004 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.stat.Frequency.addValue(Frequency:134)
22:38:32.004 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.stat.Frequency
22:38:32.005 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
22:38:32.679 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
22:38:34.295 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
22:38:34.312 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
22:38:34.349 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
22:38:34.361 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
22:38:34.737 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
22:38:34.744 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 2 fitness evolutions and 0 second: 0.0
22:38:36.042 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
22:38:36.042 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
22:38:36.042 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
22:38:36.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
22:38:36.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
22:38:36.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
22:38:36.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Frequency frequency0 = new Frequency(comparator0);
int int0 = 910;
frequency0.getCumPct(int0);
Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
doReturn(0, 0, 0, 0, 0).when(comparator1).compare(any() , any());
Frequency frequency1 = new Frequency(comparator1);
frequency1.getSumFreq();
frequency1.addValue(int0);
Object object0 = new Object();
frequency1.getCumPct(object0);
frequency0.clear();
Object object1 = new Object();
frequency1.addValue(object1);
Frequency frequency2 = new Frequency();
frequency2.valuesIterator();
frequency2.addValue((long) int0);
frequency2.toString();
String string0 = "~\\CK";
frequency2.addValue((Object) string0);

22:38:36.071 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.IllegalArgumentException: Value not comparable to existing values.
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.stat.Frequency.addValue(Frequency.java:134)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
22:38:36.072 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
22:38:36.073 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
22:38:36.074 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
22:38:36.087 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
22:38:36.087 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
22:38:36.087 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
22:38:37.710 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Frequency_ESTest' to results/MATH-90b-1-15-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
22:38:37.739 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
