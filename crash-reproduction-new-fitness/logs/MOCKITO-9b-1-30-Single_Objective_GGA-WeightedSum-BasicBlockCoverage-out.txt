00:05:57.012 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.mockito.exceptions.base.MockitoException
00:05:57.015 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter:583)
00:05:57.015 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.mockito.exceptions.Reporter
00:05:57.015 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:05:57.691 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 4.
00:05:59.519 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:05:59.529 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:05:59.540 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:05:59.557 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:06:00.566 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 4.5
00:06:00.589 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 5 fitness evolutions and 1 second: 0.0
00:06:02.069 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
00:06:02.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
00:06:02.070 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:06:02.076 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:06:02.077 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:06:02.077 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 2 seconds
00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: Reporter reporter0 = new Reporter();
reporter0.cannotCallAbstractRealMethod();
DescribedInvocation describedInvocation0 = mock(DescribedInvocation.class, new ViolatedAssumptionAnswer());
Location location0 = mock(Location.class, new ViolatedAssumptionAnswer());
reporter0.neverWantedButInvoked(describedInvocation0, location0);
reporter0.cannotCallAbstractRealMethod();
reporter0.notAMockPassedToWhenMethod();
reporter0.inOrderRequiresFamiliarMock();
reporter0.nullPassedToWhenMethod();
InvocationOnMock invocationOnMock0 = mock(InvocationOnMock.class, new ViolatedAssumptionAnswer());
String string0 = null;
Class<String> class0 = String.class;
int int0 = 279;
reporter0.wrongTypeOfArgumentToReturn(invocationOnMock0, string0, class0, int0);
reporter0.nullPassedToVerify();
SerializableMode serializableMode0 = SerializableMode.ACROSS_CLASSLOADERS;
reporter0.usingConstructorWithFancySerializable(serializableMode0);
String string1 = ")e";
String string2 = "But found this interaction on mock '";
Location location1 = mock(Location.class, new ViolatedAssumptionAnswer());
reporter0.argumentsAreDifferent(string1, string2, location1);
Reporter reporter1 = new Reporter();
InvocationOnMock invocationOnMock1 = mock(InvocationOnMock.class, new ViolatedAssumptionAnswer());
Class<InvocationImpl> class1 = InvocationImpl.class;
reporter1.wrongTypeOfArgumentToReturn(invocationOnMock1, string2, class1, int0);
reporter1.notAMockPassedToVerify(class1);
reporter0.spyAndDelegateAreMutuallyExclusive();
reporter0.notAMockPassedWhenCreatingInOrder();
reporter1.atMostAndNeverShouldNotBeUsedWithTimeout();
Reporter reporter2 = new Reporter();
Class<String> class2 = String.class;
reporter0.notAMockPassedToVerify(class2);

00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.mockito.exceptions.base.MockitoException: 
Cannot call abstract real method on java object!
Calling real methods is only possible when mocking non abstract method.
  //correct example:
  when(mockOfConcreteClass.nonAbstractMethod()).thenCallRealMethod();
00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)
00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:06:02.078 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:06:02.079 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:06:02.080 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:06:02.085 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:06:02.085 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:06:02.085 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:06:03.173 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'Reporter_ESTest' to results/MOCKITO-9b-1-30-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:06:03.199 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
