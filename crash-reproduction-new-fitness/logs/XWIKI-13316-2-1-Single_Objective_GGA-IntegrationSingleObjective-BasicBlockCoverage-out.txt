19:57:04.043 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.NullPointerException
19:57:04.047 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: com.xpn.xwiki.internal.skin.AbstractSkin.getOutputSyntax(AbstractSkin:140)
19:57:04.047 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: com.xpn.xwiki.internal.skin.AbstractSkin
19:57:04.047 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
19:57:05.867 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing com.xpn.xwiki.internal.skin.EnvironmentSkin
19:57:05.868 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing com.xpn.xwiki.internal.skin.AbstractSkin
19:57:05.876 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 575.
19:57:30.739 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
19:57:30.750 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
19:57:30.759 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
19:57:30.766 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
19:57:31.008 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 2.5
19:57:32.717 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 2.5
19:57:32.718 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 2.5. PT: 1 seconds
19:57:32.718 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
19:57:35.111 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 100
19:57:36.451 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 150
19:57:37.085 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 200
19:57:37.992 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 2.5 | 250
19:57:38.753 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 264 fitness evolutions and 7 second: 1.5
19:57:39.460 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 300
19:57:39.461 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.5. PT: 8 seconds
19:57:40.419 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 350
19:57:41.334 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 400
19:57:42.468 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 450
19:57:43.796 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 500
19:57:44.977 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.5 | 550
19:57:45.765 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 586 fitness evolutions and 15 second: 1.0
19:57:46.697 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 600
19:57:46.698 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.0. PT: 15 seconds
19:57:48.141 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 650
19:57:49.590 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 700
19:57:50.824 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 750
19:57:51.789 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 800
19:57:52.810 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 850
19:57:53.631 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 900
19:57:53.631 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 22 seconds
19:57:53.632 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
19:57:53.632 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
19:57:53.632 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 22 seconds
19:57:53.639 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: InternalSkinManager internalSkinManager0 = mock(InternalSkinManager.class, new ViolatedAssumptionAnswer());
InternalSkinConfiguration internalSkinConfiguration0 = mock(InternalSkinConfiguration.class, new ViolatedAssumptionAnswer());
SyntaxFactory syntaxFactory0 = mock(SyntaxFactory.class, new ViolatedAssumptionAnswer());
InternalSkinConfiguration internalSkinConfiguration1 = mock(InternalSkinConfiguration.class, new ViolatedAssumptionAnswer());
Logger logger0 = mock(Logger.class, new ViolatedAssumptionAnswer());
String string0 = null;
Class<PoolableConnection> class0 = PoolableConnection.class;
LoadedClass<PoolableConnection> loadedClass0 = new LoadedClass<PoolableConnection>(class0);
Injector injector0 = mock(Injector.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(loadedClass0, (Class<?>) AbstractDeferredClass.class, "injector", (Object) injector0);
String string1 = "Failed to load skin [{}] properties file";
Environment environment0 = null;
ReadOnlyXWikiContextProvider readOnlyXWikiContextProvider0 = new ReadOnlyXWikiContextProvider();
Execution execution0 = mock(Execution.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(readOnlyXWikiContextProvider0, (Class<?>) ReadOnlyXWikiContextProvider.class, "execution", (Object) execution0);
org.evosuite.runtime.javaee.injection.Injector.validateBean(readOnlyXWikiContextProvider0, (Class<?>) ReadOnlyXWikiContextProvider.class);
EnvironmentSkin environmentSkin0 = new EnvironmentSkin(string1, internalSkinManager0, internalSkinConfiguration1, logger0, syntaxFactory0, environment0, readOnlyXWikiContextProvider0);
environmentSkin0.getOutputSyntax();
String string2 = "org.xml.";
InternalSkinManager internalSkinManager1 = new InternalSkinManager();
DefaultConfigurationSourceProvider defaultConfigurationSourceProvider0 = new DefaultConfigurationSourceProvider();
ContextRootComponentManager contextRootComponentManager0 = new ContextRootComponentManager();
EmbeddableComponentManager embeddableComponentManager0 = new EmbeddableComponentManager();
org.evosuite.runtime.javaee.injection.Injector.inject(contextRootComponentManager0, (Class<?>) ContextRootComponentManager.class, "rootComponentManager", (Object) embeddableComponentManager0);
ContextComponentManagerProvider contextComponentManagerProvider0 = new ContextComponentManagerProvider();
NOPLogger nOPLogger0 = NOPLogger.NOP_LOGGER;
org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManagerProvider0, (Class<?>) ContextComponentManagerProvider.class, "logger", (Object) nOPLogger0);
SpaceComponentManager spaceComponentManager0 = new SpaceComponentManager();
Class<RawBlock> class1 = RawBlock.class;
LoadedClass<RawBlock> loadedClass1 = new LoadedClass<RawBlock>(class1);
Injector injector1 = mock(Injector.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(loadedClass1, (Class<?>) AbstractDeferredClass.class, "injector", (Object) injector1);
org.evosuite.runtime.javaee.injection.Injector.validateBean(loadedClass1, (Class<?>) LoadedClass.class);
org.evosuite.runtime.javaee.injection.Injector.inject(spaceComponentManager0, (Class<?>) SpaceComponentManager.class, "referenceProvider", (Object) loadedClass1);
WikiComponentManager wikiComponentManager0 = new WikiComponentManager();
ContextComponentManager contextComponentManager0 = new ContextComponentManager();
Execution execution1 = mock(Execution.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManager0, (Class<?>) ContextComponentManager.class, "execution", (Object) execution1);
ComponentManager componentManager0 = contextRootComponentManager0.getComponentManager();
org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManager0, (Class<?>) ContextComponentManager.class, "rootComponentManager", (Object) componentManager0);
UserComponentManager userComponentManager0 = new UserComponentManager();
DocumentAccessBridge documentAccessBridge0 = mock(DocumentAccessBridge.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(userComponentManager0, (Class<?>) UserComponentManager.class, "documentAccessBridge", (Object) documentAccessBridge0);
String string3 = "";
EmbeddableComponentManager embeddableComponentManager1 = new EmbeddableComponentManager(string3);
org.evosuite.runtime.javaee.injection.Injector.inject(userComponentManager0, (Class<?>) UserComponentManager.class, "documentComponentManager", (Object) embeddableComponentManager1);
EntityReferenceSerializer<SpaceReference> entityReferenceSerializer0 = (EntityReferenceSerializer<SpaceReference>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(userComponentManager0, (Class<?>) UserComponentManager.class, "referenceSerializer", (Object) entityReferenceSerializer0);
Execution execution2 = mock(Execution.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(userComponentManager0, (Class<?>) AbstractEntityComponentManager.class, "execution", (Object) execution2);
EntityReferenceSerializer<SubstituteLoggingEvent> entityReferenceSerializer1 = (EntityReferenceSerializer<SubstituteLoggingEvent>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(userComponentManager0, (Class<?>) AbstractEntityComponentManager.class, "serializer", (Object) entityReferenceSerializer1);
ComponentManagerManager componentManagerManager0 = mock(ComponentManagerManager.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(userComponentManager0, (Class<?>) AbstractGenericComponentManager.class, "componentManagerManager", (Object) componentManagerManager0);
org.evosuite.runtime.javaee.injection.Injector.validateBean(userComponentManager0, (Class<?>) UserComponentManager.class);
org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManager0, (Class<?>) ContextComponentManager.class, "userComponentManager", (Object) userComponentManager0);
org.evosuite.runtime.javaee.injection.Injector.validateBean(contextComponentManager0, (Class<?>) ContextComponentManager.class);
org.evosuite.runtime.javaee.injection.Injector.inject(wikiComponentManager0, (Class<?>) WikiComponentManager.class, "rootComponentManager", (Object) contextComponentManager0);
WikiDescriptorManager wikiDescriptorManager0 = mock(WikiDescriptorManager.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiComponentManager0, (Class<?>) WikiComponentManager.class, "wikis", (Object) wikiDescriptorManager0);
Execution execution3 = mock(Execution.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiComponentManager0, (Class<?>) AbstractEntityComponentManager.class, "execution", (Object) execution3);
EntityReferenceSerializer<JMenuItem> entityReferenceSerializer2 = (EntityReferenceSerializer<JMenuItem>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiComponentManager0, (Class<?>) AbstractEntityComponentManager.class, "serializer", (Object) entityReferenceSerializer2);
ComponentManagerManager componentManagerManager1 = mock(ComponentManagerManager.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiComponentManager0, (Class<?>) AbstractGenericComponentManager.class, "componentManagerManager", (Object) componentManagerManager1);
org.evosuite.runtime.javaee.injection.Injector.validateBean(wikiComponentManager0, (Class<?>) WikiComponentManager.class);
org.evosuite.runtime.javaee.injection.Injector.inject(spaceComponentManager0, (Class<?>) SpaceComponentManager.class, "wikiComponentManager", (Object) wikiComponentManager0);
Execution execution4 = mock(Execution.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(spaceComponentManager0, (Class<?>) AbstractEntityComponentManager.class, "execution", (Object) execution4);
EntityReferenceSerializer<PoolableConnection> entityReferenceSerializer3 = (EntityReferenceSerializer<PoolableConnection>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(spaceComponentManager0, (Class<?>) AbstractEntityComponentManager.class, "serializer", (Object) entityReferenceSerializer3);
ComponentManagerManager componentManagerManager2 = mock(ComponentManagerManager.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(spaceComponentManager0, (Class<?>) AbstractGenericComponentManager.class, "componentManagerManager", (Object) componentManagerManager2);
org.evosuite.runtime.javaee.injection.Injector.validateBean(spaceComponentManager0, (Class<?>) SpaceComponentManager.class);
org.evosuite.runtime.javaee.injection.Injector.inject(contextComponentManagerProvider0, (Class<?>) ContextComponentManagerProvider.class, "rootComponentManager", (Object) spaceComponentManager0);
org.evosuite.runtime.javaee.injection.Injector.validateBean(contextComponentManagerProvider0, (Class<?>) ContextComponentManagerProvider.class);
ComponentManager componentManager1 = contextComponentManagerProvider0.get();
org.evosuite.runtime.javaee.injection.Injector.inject(contextRootComponentManager0, (Class<?>) ContextRootComponentManager.class, "userComponentManager", (Object) componentManager1);
org.evosuite.runtime.javaee.injection.Injector.validateBean(contextRootComponentManager0, (Class<?>) ContextRootComponentManager.class);
ComponentManager componentManager2 = contextRootComponentManager0.getParent();
org.evosuite.runtime.javaee.injection.Injector.inject(defaultConfigurationSourceProvider0, (Class<?>) AbstractConfigurationSourceProvider.class, "componentManager", (Object) componentManager2);
org.evosuite.runtime.javaee.injection.Injector.validateBean(defaultConfigurationSourceProvider0, (Class<?>) DefaultConfigurationSourceProvider.class);
ConfigurationSource configurationSource0 = defaultConfigurationSourceProvider0.get();
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "allConfiguration", (Object) configurationSource0);
ContextualAuthorizationManager contextualAuthorizationManager0 = mock(ContextualAuthorizationManager.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "authorization", (Object) contextualAuthorizationManager0);
CacheManager cacheManager0 = mock(CacheManager.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "cacheManager", (Object) cacheManager0);
ServletEnvironment servletEnvironment0 = new ServletEnvironment();
URI uRI0 = null;
File file0 = new File(uRI0);
Path path0 = file0.toPath();
WritablePath writablePath0 = new WritablePath(path0);
URI uRI1 = writablePath0.toUri();
Destination destination0 = new Destination(uRI1);
Class<? extends Attribute> class2 = destination0.getCategory();
RoleHint<Integer> roleHint0 = new RoleHint<Integer>(class2);
GenericProvider<Integer> genericProvider0 = new GenericProvider<Integer>(componentManager2, roleHint0);
org.evosuite.runtime.javaee.injection.Injector.inject(servletEnvironment0, (Class<?>) AbstractEnvironment.class, "configurationProvider", (Object) genericProvider0);
SubstituteLoggingEvent substituteLoggingEvent0 = new SubstituteLoggingEvent();
SubstituteLogger substituteLogger0 = substituteLoggingEvent0.getLogger();
LinkedBlockingDeque<SubstituteLoggingEvent> linkedBlockingDeque0 = new LinkedBlockingDeque<SubstituteLoggingEvent>();
EventRecodingLogger eventRecodingLogger0 = new EventRecodingLogger(substituteLogger0, linkedBlockingDeque0);
org.evosuite.runtime.javaee.injection.Injector.inject(servletEnvironment0, (Class<?>) AbstractEnvironment.class, "logger", (Object) eventRecodingLogger0);
org.evosuite.runtime.javaee.injection.Injector.validateBean(servletEnvironment0, (Class<?>) ServletEnvironment.class);
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "environment", (Object) servletEnvironment0);
Logger logger1 = URLStreamHandlerFactory.log;
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "logger", (Object) logger1);
DefaultObservationManager defaultObservationManager0 = new DefaultObservationManager();
RootComponentManager rootComponentManager0 = new RootComponentManager();
ComponentManager componentManager3 = contextComponentManager0.getParent();
org.evosuite.runtime.javaee.injection.Injector.inject(rootComponentManager0, (Class<?>) RootComponentManager.class, "rootComponentManager", (Object) componentManager3);
org.evosuite.runtime.javaee.injection.Injector.validateBean(rootComponentManager0, (Class<?>) RootComponentManager.class);
org.evosuite.runtime.javaee.injection.Injector.inject(defaultObservationManager0, (Class<?>) DefaultObservationManager.class, "componentManager", (Object) rootComponentManager0);
Logger logger2 = CustomX509TrustManager.logger;
org.evosuite.runtime.javaee.injection.Injector.inject(defaultObservationManager0, (Class<?>) DefaultObservationManager.class, "logger", (Object) logger2);
org.evosuite.runtime.javaee.injection.Injector.validateBean(defaultObservationManager0, (Class<?>) DefaultObservationManager.class);
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "observation", (Object) defaultObservationManager0);
InternalSkinConfiguration internalSkinConfiguration2 = new InternalSkinConfiguration();
RestrictedConfigurationSourceProvider restrictedConfigurationSourceProvider0 = new RestrictedConfigurationSourceProvider();
ComponentManager componentManager4 = contextComponentManager0.getComponentManager();
org.evosuite.runtime.javaee.injection.Injector.inject(restrictedConfigurationSourceProvider0, (Class<?>) AbstractConfigurationSourceProvider.class, "componentManager", (Object) componentManager4);
org.evosuite.runtime.javaee.injection.Injector.validateBean(restrictedConfigurationSourceProvider0, (Class<?>) RestrictedConfigurationSourceProvider.class);
ConfigurationSource configurationSource1 = restrictedConfigurationSourceProvider0.get();
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinConfiguration2, (Class<?>) InternalSkinConfiguration.class, "xwikicfg", (Object) configurationSource1);
org.evosuite.runtime.javaee.injection.Injector.validateBean(internalSkinConfiguration2, (Class<?>) InternalSkinConfiguration.class);
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "skinConfiguration", (Object) internalSkinConfiguration2);
DefaultSyntaxFactory defaultSyntaxFactory0 = new DefaultSyntaxFactory();
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "syntaxFactory", (Object) defaultSyntaxFactory0);
WikiSkinUtils wikiSkinUtils0 = new WikiSkinUtils();
DocumentReferenceResolver<TimeScheduler3.Task> documentReferenceResolver0 = (DocumentReferenceResolver<TimeScheduler3.Task>) mock(DocumentReferenceResolver.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiSkinUtils0, (Class<?>) WikiSkinUtils.class, "currentMixedDocumentReferenceResolver", (Object) documentReferenceResolver0);
boolean boolean0 = false;
SubstituteLogger substituteLogger1 = new SubstituteLogger(string2, linkedBlockingDeque0, boolean0);
org.evosuite.runtime.javaee.injection.Injector.inject(wikiSkinUtils0, (Class<?>) WikiSkinUtils.class, "logger", (Object) substituteLogger1);
EntityReferenceSerializer<Filter> entityReferenceSerializer4 = (EntityReferenceSerializer<Filter>) mock(EntityReferenceSerializer.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiSkinUtils0, (Class<?>) WikiSkinUtils.class, "referenceSerializer", (Object) entityReferenceSerializer4);
Provider<RawBlock> provider0 = (Provider<RawBlock>) mock(Provider.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(wikiSkinUtils0, (Class<?>) WikiSkinUtils.class, "xcontextProvider", (Object) provider0);
org.evosuite.runtime.javaee.injection.Injector.validateBean(wikiSkinUtils0, (Class<?>) WikiSkinUtils.class);
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "wikiSkinUtils", (Object) wikiSkinUtils0);
Provider<LinkOption> provider1 = (Provider<LinkOption>) mock(Provider.class, new ViolatedAssumptionAnswer());
org.evosuite.runtime.javaee.injection.Injector.inject(internalSkinManager1, (Class<?>) InternalSkinManager.class, "xcontextProvider", (Object) provider1);
org.evosuite.runtime.javaee.injection.Injector.validateBean(internalSkinManager1, (Class<?>) InternalSkinManager.class);
WikiSkin wikiSkin0 = new WikiSkin(string2, internalSkinManager1, internalSkinConfiguration2, wikiSkinUtils0, eventRecodingLogger0, defaultSyntaxFactory0);
wikiSkin0.getOutputSyntaxString();

19:57:53.639 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
19:57:53.639 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.NullPointerException
19:57:53.639 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.internal.skin.EnvironmentSkin.getProperties(EnvironmentSkin.java:90)
19:57:53.639 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.internal.skin.EnvironmentSkin.getOutputSyntaxString(EnvironmentSkin.java:156)
19:57:53.639 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - com.xpn.xwiki.internal.skin.AbstractSkin.getOutputSyntax(AbstractSkin.java:140)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
19:57:53.640 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
19:57:53.641 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
19:57:53.648 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
19:57:53.648 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
19:57:53.648 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
19:57:54.851 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractSkin_ESTest' to results/XWIKI-13316-2-1-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
19:57:54.856 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
