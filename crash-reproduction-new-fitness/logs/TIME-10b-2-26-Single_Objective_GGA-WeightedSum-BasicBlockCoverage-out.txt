00:11:01.883 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
00:11:01.886 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField:78)
00:11:01.886 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.field.PreciseDurationDateTimeField
00:11:01.886 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:11:02.139 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
00:11:04.203 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:11:04.212 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:11:04.218 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:11:04.225 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:11:04.987 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 4.5
00:11:05.920 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.5
00:11:05.920 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.5. PT: 1 seconds
00:11:05.921 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:11:06.149 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 66 fitness evolutions and 1 second: 0.552870090634441
00:11:06.721 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.552870090634441 | 100
00:11:06.733 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.552870090634441. PT: 2 seconds
00:11:06.825 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 116 fitness evolutions and 2 second: 0.0
00:11:07.488 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 150
00:11:07.488 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
00:11:07.489 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:11:07.489 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:11:07.489 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 3 seconds
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeFieldType dateTimeFieldType0 = mock(DateTimeFieldType.class, new ViolatedAssumptionAnswer());
DurationField durationField0 = mock(DurationField.class, new ViolatedAssumptionAnswer());
TestPreciseDurationDateTimeField.MockPreciseDurationDateTimeField testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0 = new TestPreciseDurationDateTimeField.MockPreciseDurationDateTimeField();
TestPreciseDateTimeField.MockPreciseDateTimeField testPreciseDateTimeField_MockPreciseDateTimeField0 = new TestPreciseDateTimeField.MockPreciseDateTimeField();
testPreciseDateTimeField_MockPreciseDateTimeField0.getRangeDurationField();
long long0 = (-1L);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getName();
int int0 = 2821;
long long1 = testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.set(long0, int0);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.isLenient();
int int1 = testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMinimumValue(long1);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.add(long1, int1);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getUnitMillis();
long long2 = (-1813L);
int int2 = testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getMinimumValue(long2);
ReadablePartial readablePartial0 = mock(ReadablePartial.class, new ViolatedAssumptionAnswer());
int[] intArray0 = new int[8];
int int3 = 2232;
intArray0[0] = int3;
intArray0[1] = int1;
intArray0[2] = int0;
intArray0[3] = int0;
intArray0[4] = int2;
intArray0[5] = int1;
intArray0[6] = int2;
intArray0[7] = int2;
int int4 = 0;
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.addWrapPartial(readablePartial0, int0, intArray0, int4);
long long3 = 0L;
long long4 = (-4207L);
testPreciseDurationDateTimeField_MockPreciseDurationDateTimeField0.getDifferenceAsLong(long3, long4);
int int5 = 354;

00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Value 2821 for secondOfMinute must be in the range [0,59]
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:11:07.492 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:11:07.493 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:11:07.493 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:11:07.493 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:11:07.493 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:11:07.493 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:11:07.494 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:11:07.498 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:11:07.499 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:11:07.499 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:11:08.476 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'PreciseDurationDateTimeField_ESTest' to results/TIME-10b-2-26-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:11:08.486 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
