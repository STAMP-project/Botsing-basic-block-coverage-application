16:37:41.719 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: org.joda.time.IllegalFieldValueException
16:37:41.735 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket:366)
16:37:41.735 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.format.DateTimeParserBucket
16:37:41.735 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
16:37:42.217 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
16:37:45.266 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
16:37:45.292 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
16:37:45.310 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
16:37:45.341 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
16:37:46.457 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 1 second: 5.979166666666667
16:37:46.962 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 6 fitness evolutions and 1 second: 4.0
16:37:47.532 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 4.0
16:37:47.532 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 4.0. PT: 2 seconds
16:37:47.532 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
16:37:48.458 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 100
16:37:49.291 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 150
16:37:50.296 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 200
16:37:50.752 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 250
16:37:51.444 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 300
16:37:52.175 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 350
16:37:52.875 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 4.0 | 400
16:37:52.939 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 413 fitness evolutions and 7 second: 0.0
16:37:53.363 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 450
16:37:53.364 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 8 seconds
16:37:53.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
16:37:53.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
16:37:53.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 8 seconds
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimeParserBucket.SavedField[] dateTimeParserBucket_SavedFieldArray0 = new DateTimeParserBucket.SavedField[5];
String string0 = "9";
long long0 = (-141L);
String string1 = "hYZ/fT+wVS";
boolean boolean0 = false;
int int0 = 10;
Chronology chronology0 = null;
Locale locale0 = Locale.PRC;
long long1 = 1152L;
DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(long1, chronology0, locale0);
boolean boolean1 = false;
String string2 = null;
DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
dateTimeParserBucket0.saveField(dateTimeFieldType0, string2, locale0);
String string3 = "";
boolean boolean2 = true;
String string4 = "Cannot parse \"";
long long2 = dateTimeParserBucket0.computeMillis(boolean2, string4);
DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(int0, int0);
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
DateTimeField dateTimeField0 = buddhistChronology0.halfdayOfDay();
OffsetDateTimeField offsetDateTimeField0 = new OffsetDateTimeField(dateTimeField0, int0);
String string5 = "te3'N8/VyW( tm.";
DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(offsetDateTimeField0, string5, locale0);
boolean boolean3 = false;
dateTimeParserBucket_SavedField0.set(long2, boolean3);

16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.IllegalFieldValueException: Cannot parse "Cannot parse "": Value 0 for dayOfMonth must be in the range [1,31]
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
16:37:53.369 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
16:37:53.370 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
16:37:53.371 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
16:37:53.388 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
16:37:53.388 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
16:37:53.389 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
16:37:54.875 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DateTimeParserBucket_ESTest' to results/TIME-7b-4-30-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
16:37:54.886 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
