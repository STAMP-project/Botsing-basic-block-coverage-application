05:30:48.271 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ArrayIndexOutOfBoundsException
05:30:48.274 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math3.util.MathArrays.linearCombination(MathArrays:846)
05:30:48.274 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math3.util.MathArrays
05:30:48.274 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
05:30:49.674 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math3.util.MathArrays
05:30:49.710 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 4.
05:30:50.857 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
05:30:50.866 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
05:30:50.877 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
05:30:50.884 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
05:30:50.910 [main] WARN  e.s.b.g.s.GuidedSingleObjectiveGA - Botsing was unsuccessful in generating the initial population. cause: null
05:30:50.942 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 1.0
05:30:50.986 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.0
05:30:50.986 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.0. PT: 0 seconds
05:30:50.986 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
05:30:52.812 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 100
05:30:53.779 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 150
05:30:54.379 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 200
05:30:55.139 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 250
05:30:55.508 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 300
05:30:56.112 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 350
05:30:56.742 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 400
05:30:57.121 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 450
05:30:57.560 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.0 | 500
05:30:58.113 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 550
05:30:58.113 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 7 seconds
05:30:58.113 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
05:30:58.113 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
05:30:58.113 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 7 seconds
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: double double0 = (-1447.8);
double double1 = (-1.0);
int[] intArray0 = new int[9];
int int0 = 18;
intArray0[0] = int0;
double double2 = 828.428;
double double3 = 1810.0;
double double4 = (-1936.357421485);
double double5 = 1947758.8630048453;
double double6 = 0.0;
double double7 = (-342.452);
double double8 = 1618.52270348514;
double double9 = 6.123233995736766E-17;
MathArrays.linearCombination(double0, double5, double6, double7, double8, double2, double9, double9);
float[] floatArray0 = null;
float[] floatArray1 = new float[0];
MathArrays.equalsIncludingNaN(floatArray0, floatArray1);
double[] doubleArray0 = new double[1];
double double10 = 2170.0873137549506;
doubleArray0[0] = double10;
MathArrays.OrderDirection mathArrays_OrderDirection0 = MathArrays.OrderDirection.DECREASING;
boolean boolean0 = true;
MathArrays.checkOrder(doubleArray0, mathArrays_OrderDirection0, boolean0);
int int1 = 25;
MathArrays.copyOf(intArray0, int1);
MathArrays.linearCombination(doubleArray0, doubleArray0);
long[][] longArray0 = new long[7][9];
long[] longArray1 = new long[9];
longArray1[0] = (long) int0;
longArray1[1] = (long) intArray0[0];
longArray1[2] = (long) intArray0[0];
long long0 = 0L;
longArray1[3] = long0;
longArray1[4] = (long) int0;
longArray1[5] = (long) int0;
longArray1[6] = (long) int1;
long long1 = 1333L;
longArray1[7] = long1;
longArray1[8] = (long) intArray0[0];
longArray0[0] = longArray1;
long[] longArray2 = new long[3];
long long2 = 4503599627370496L;
longArray2[0] = long2;
longArray2[1] = (long) int1;
longArray2[2] = long1;
longArray0[1] = longArray2;
long[] longArray3 = new long[7];
longArray3[0] = long1;
longArray3[1] = (long) int1;
longArray3[2] = (long) int0;
longArray3[3] = long0;
longArray3[4] = long0;
longArray3[5] = (long) int1;
longArray3[6] = (long) int0;
longArray0[2] = longArray3;
long[] longArray4 = new long[6];
longArray4[0] = (long) intArray0[0];
longArray4[1] = long2;
longArray4[2] = long2;
longArray4[3] = long1;
longArray4[4] = (long) intArray0[0];
longArray4[5] = long1;
longArray0[3] = longArray4;
long[] longArray5 = new long[9];
longArray5[0] = (long) intArray0[0];
longArray5[1] = (long) intArray0[0];
longArray5[2] = long2;
longArray5[3] = long2;
longArray5[4] = long1;
long long3 = (-1499L);
longArray5[5] = long3;
longArray5[6] = (long) int1;
longArray5[7] = long1;
longArray5[8] = long1;
longArray0[4] = longArray5;
long[] longArray6 = new long[4];
long long4 = (-1599L);
longArray6[0] = long4;
long long5 = (-2036L);
longArray6[1] = long5;
longArray6[2] = long1;
longArray6[3] = long3;
longArray0[5] = longArray6;
long[] longArray7 = new long[7];
longArray7[0] = long3;
longArray7[1] = (long) intArray0[0];
longArray7[2] = (long) int1;
longArray7[3] = (long) intArray0[0];
longArray7[4] = long3;
longArray7[5] = long1;
longArray7[6] = (long) intArray0[0];
longArray0[6] = longArray7;
MathArrays.checkRectangular(longArray0);

05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ArrayIndexOutOfBoundsException: 1
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math3.util.MathArrays.linearCombination(MathArrays.java:846)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
05:30:58.115 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
05:30:58.116 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
05:30:58.116 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
05:30:58.116 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
05:30:58.116 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
05:30:58.116 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
05:30:58.116 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
05:30:58.117 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
05:30:58.138 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
05:30:58.139 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
05:30:58.139 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
05:30:59.266 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'MathArrays_ESTest' to results/MATH-3b-1-2-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
05:30:59.283 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
