09:46:09.726 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.ArrayIndexOutOfBoundsException
09:46:09.729 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator:173)
09:46:09.729 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.apache.commons.math.estimation.AbstractEstimator
09:46:09.729 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
09:46:10.252 [main] INFO  e.s.botsing.graphs.cfg.CFGGenerator - Analyzing org.apache.commons.math.estimation.AbstractEstimator
09:46:10.270 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 3.
09:46:11.192 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
09:46:11.200 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
09:46:11.211 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
09:46:11.217 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
09:46:11.419 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 1.75
09:46:11.976 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 1.75
09:46:11.976 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.75. PT: 0 seconds
09:46:11.976 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
09:46:13.306 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 100
09:46:13.952 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.75 | 150
09:46:14.162 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 173 fitness evolutions and 2 second: 1.7142857142857144
09:46:14.367 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 200
09:46:14.368 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.7142857142857144. PT: 3 seconds
09:46:14.736 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 250
09:46:15.023 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 300
09:46:15.201 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 350
09:46:15.535 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 400
09:46:15.857 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 450
09:46:16.113 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.7142857142857144 | 500
09:46:16.152 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 521 fitness evolutions and 4 second: 1.3333333333333333
09:46:16.477 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 550
09:46:16.477 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 1.3333333333333333. PT: 5 seconds
09:46:16.753 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 600
09:46:17.002 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 650
09:46:17.473 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 700
09:46:17.745 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 750
09:46:18.027 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 1.3333333333333333 | 800
09:46:18.265 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the current population: 0.0 | 850
09:46:18.265 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 7 seconds
09:46:18.266 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
09:46:18.266 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
09:46:18.266 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 7 seconds
09:46:18.267 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: LevenbergMarquardtEstimator levenbergMarquardtEstimator0 = new LevenbergMarquardtEstimator();
SimpleEstimationProblem simpleEstimationProblem0 = new SimpleEstimationProblem();
WeightedMeasurement weightedMeasurement0 = mock(WeightedMeasurement.class, new ViolatedAssumptionAnswer());
doReturn(0.0).when(weightedMeasurement0).getResidual();
doReturn(0.0).when(weightedMeasurement0).getWeight();
String string0 = "W5";
double double0 = 0.0;
EstimatedParameter estimatedParameter0 = new EstimatedParameter(string0, double0);
simpleEstimationProblem0.addParameter(estimatedParameter0);
WeightedMeasurement weightedMeasurement1 = mock(WeightedMeasurement.class, new ViolatedAssumptionAnswer());
doReturn(0.0, 0.0).when(weightedMeasurement1).getPartial(any(org.apache.commons.math.estimation.EstimatedParameter.class));
doReturn(0.0, 0.0).when(weightedMeasurement1).getResidual();
doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(weightedMeasurement1).getWeight();
simpleEstimationProblem0.addMeasurement(weightedMeasurement1);
levenbergMarquardtEstimator0.estimate(simpleEstimationProblem0);
double double1 = 1.0;
simpleEstimationProblem0.addMeasurement(weightedMeasurement0);
levenbergMarquardtEstimator0.guessParametersErrors(simpleEstimationProblem0);
int int0 = 10;
String string1 = "";
LevenbergMarquardtEstimatorTest levenbergMarquardtEstimatorTest0 = new LevenbergMarquardtEstimatorTest(string1);
String string2 = null;
LevenbergMarquardtEstimatorTest.QuadraticProblem levenbergMarquardtEstimatorTest_QuadraticProblem0 = levenbergMarquardtEstimatorTest0.new QuadraticProblem();
boolean boolean0 = true;
WeightedMeasurement[] weightedMeasurementArray0 = new WeightedMeasurement[0];
levenbergMarquardtEstimator0.measurements = weightedMeasurementArray0;
TestCase.assertTrue(boolean0);
WeightedMeasurement weightedMeasurement2 = null;
levenbergMarquardtEstimatorTest_QuadraticProblem0.addMeasurement(weightedMeasurement2);
levenbergMarquardtEstimatorTest_QuadraticProblem0.getAllParameters();
levenbergMarquardtEstimator0.initializeEstimate(levenbergMarquardtEstimatorTest_QuadraticProblem0);
int int1 = levenbergMarquardtEstimator0.getJacobianEvaluations();
levenbergMarquardtEstimator0.updateJacobian();
levenbergMarquardtEstimator0.incrementJacobianEvaluationsCounter();
levenbergMarquardtEstimator0.incrementJacobianEvaluationsCounter();
levenbergMarquardtEstimator0.estimate(simpleEstimationProblem0);
levenbergMarquardtEstimator0.incrementJacobianEvaluationsCounter();
levenbergMarquardtEstimator0.setMaxCostEval(int1);
levenbergMarquardtEstimator0.getCovariances(levenbergMarquardtEstimatorTest_QuadraticProblem0);
levenbergMarquardtEstimator0.getChiSquare(levenbergMarquardtEstimatorTest_QuadraticProblem0);

09:46:18.267 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
09:46:18.267 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.ArrayIndexOutOfBoundsException: 1
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(AbstractEstimator.java:209)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
09:46:18.268 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
09:46:18.269 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
09:46:18.277 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
09:46:18.278 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
09:46:18.278 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
09:46:19.441 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'AbstractEstimator_ESTest' to results/MATH-100b-1-7-Single_Objective_GGA-IntegrationSingleObjective-BasicBlockCoverage-opt
09:46:19.451 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
