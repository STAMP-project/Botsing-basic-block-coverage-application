00:42:40.079 [main] INFO  eu.stamp.botsing.StackTrace - Exception type is detected: java.lang.IllegalArgumentException
00:42:40.082 [main] INFO  eu.stamp.botsing.StackTrace - Target frame is set to: org.joda.time.format.DateTimeFormatter.parseDateTime(DateTimeFormatter:866)
00:42:40.082 [main] INFO  eu.stamp.botsing.StackTrace - Target Class is set to: org.joda.time.format.DateTimeFormatter
00:42:40.082 [main] INFO  eu.stamp.botsing.Botsing - Single_Objective_GGA
00:42:40.443 [main] INFO  e.stamp.botsing.commons.SetupUtility - Starting the dependency analysis. The number of detected jar files is 5.
00:42:42.311 [main] INFO  e.stamp.botsing.commons.SetupUtility - Analysing dependencies done!
00:42:42.322 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - test generation strategy: Botsing individual
00:42:42.330 [main] INFO  e.s.b.s.TestCaseSecondaryObjective - Secondary Objectives: BasicBlockCoverage
00:42:42.337 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Initializing the first population with size of 50 individuals
00:42:42.793 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 1 fitness evolutions and 0 second: 5.863636363636363
00:42:43.139 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 3 fitness evolutions and 0 second: 4.0
00:42:43.150 [main] INFO  e.s.b.f.utils.CrashDistanceEvolution - New value for Crash Distance after 8 fitness evolutions and 0 second: 0.0
00:42:43.914 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the initial population is: 0.0
00:42:43.916 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
00:42:43.917 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Starting evolution
00:42:43.918 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - ZeroFitness :                      0 / 0            Finished!
00:42:43.918 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - The search process is finished.
00:42:43.918 [main] INFO  e.s.b.g.s.GuidedSingleObjectiveGA - Best fitness in the final population is: 0.0. PT: 1 seconds
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - * The target crash is covered. The generated test is: DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());
DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());
doReturn((String) null).when(dateTimeParser0).toString();
doReturn(0).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class) , anyString() , anyInt());
DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);
Locale locale0 = Locale.JAPAN;
DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);
String string0 = "/LEzk";
DateTime dateTime0 = dateTimeFormatter0.parseDateTime(string0);
dateTimeFormatter0.getParser();
DateTime dateTime1 = dateTimeFormatter0.parseDateTime(string0);
Chronology chronology0 = dateTimeFormatter0.getChronology();
dateTimeFormatter1.getZone();
long long0 = 0L;
String string1 = dateTimeFormatter0.print(long0);
dateTimeFormatter1.getChronolgy();
dateTimeFormatter1.isParser();
String string2 = "-Summer";
LocalDateTime localDateTime0 = dateTimeFormatter1.parseLocalDateTime(string2);
FileWriter fileWriter0 = new FileWriter(string1);
dateTimeFormatter0.printTo((Writer) fileWriter0, (ReadableInstant) dateTime1);
dateTimeFormatter1.printTo((Writer) fileWriter0, (ReadablePartial) localDateTime0);
dateTimeFormatter0.printTo((Writer) fileWriter0, (ReadablePartial) localDateTime0);
dateTimeFormatter0.getPivotYear();
dateTimeFormatter0.printTo((Writer) fileWriter0, (ReadablePartial) localDateTime0);
dateTimeFormatter0.isPrinter();
DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter0.withLocale(locale0);
String string3 = "Long.MIN_VALUE cannot be negated";
dateTimeFormatter1.parseLocalDateTime(string3);
dateTimeFormatter1.printTo((Writer) fileWriter0, long0);
dateTimeFormatter1.print((ReadableInstant) dateTime0);
dateTimeFormatter2.getParser();
int int0 = 0;
Integer integer0 = new Integer(int0);
dateTimeFormatter1.withPivotYear(integer0);
dateTimeFormatter2.getZone();
DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];
DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();
dateTimeFieldTypeArray0[0] = dateTimeFieldType0;
BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
DateTimeField dateTimeField0 = buddhistChronology0.weekyear();
SkipDateTimeField skipDateTimeField0 = new SkipDateTimeField(chronology0, dateTimeField0);
DurationField durationField0 = skipDateTimeField0.getDurationField();
UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);
DateTimeFieldType dateTimeFieldType1 = unsupportedDateTimeField0.getType();
dateTimeFieldTypeArray0[1] = dateTimeFieldType1;
DateTimeFieldType dateTimeFieldType2 = DateTimeFieldType.minuteOfDay();
dateTimeFieldTypeArray0[2] = dateTimeFieldType2;
DateTimeFieldType dateTimeFieldType3 = DateTimeFieldType.hourOfDay();
dateTimeFieldTypeArray0[3] = dateTimeFieldType3;
DateTimeFieldType dateTimeFieldType4 = DateTimeFieldType.clockhourOfDay();
dateTimeFieldTypeArray0[4] = dateTimeFieldType4;
DateTimeFieldType dateTimeFieldType5 = DateTimeFieldType.dayOfWeek();
dateTimeFieldTypeArray0[5] = dateTimeFieldType5;
int[] intArray0 = new int[9];
intArray0[0] = int0;
intArray0[1] = int0;
intArray0[2] = int0;
intArray0[3] = int0;
intArray0[4] = int0;
intArray0[5] = int0;
intArray0[6] = int0;
intArray0[7] = int0;
intArray0[8] = int0;
Partial partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, buddhistChronology0);
dateTimeFormatter1.print((ReadablePartial) partial0);

00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - 1 thrown exception(s) are detected in the solution: 
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.IllegalArgumentException: Invalid format: "/LEzk"
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.joda.time.format.DateTimeFormatter.parseDateTime(DateTimeFormatter.java:866)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.reflect.Method.invoke(Method.java:498)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
00:42:43.922 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.FutureTask.run(FutureTask.java:266)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
00:42:43.923 [main] INFO  e.s.b.t.s.BotsingIndividualStrategy - java.lang.Thread.run(Thread.java:748)
00:42:43.925 [main] INFO  e.s.b.commons.PostProcessUtility - test size before post-process: 1
00:42:43.943 [main] INFO  e.s.b.commons.PostProcessUtility - * Minimizing test suite
00:42:43.943 [main] INFO  e.s.b.commons.PostProcessUtility - test size after post-process: 1
00:42:43.943 [main] INFO  e.s.b.commons.PostProcessUtility - * Compiling and checking tests
00:42:44.789 [main] INFO  e.s.b.commons.PostProcessUtility - * Writing JUnit test case 'DateTimeFormatter_ESTest' to results/TIME-20b-1-29-Single_Objective_GGA-WeightedSum-BasicBlockCoverage-opt
00:42:44.805 [main] INFO  e.s.b.reproduction.CrashReproduction - The solution test is saved!
